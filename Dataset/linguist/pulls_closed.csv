pull_request,number_of_commits,number_of_comments,number_of_reviews,user_type,user_login,closed_at,number_of_additions,number_of_deletions,number_of_files_changed,number_of_days,message,number_of_characters,second_line_is_blank,language,number_of_test_files
3970,9,0,0,Externals,oktapodia,2018-01-03 13:58:28,282,0,3,0,,0,False,en,0
3947,1,2,0,Externals,ferrall,2017-12-12 16:43:40,10,0,1,0,Adding Ox language and demonstrating pull request for my class,62,False,en,0
3942,4,5,0,Internals,kivikakk,2017-12-07 22:51:47,35,35,35,0,"* New grammars compiler (#3915)
* Add error output to the compiler (#3935)
* Vendor CSS files in font-awesome directory (#3932)
* Improve Prolog .pro heuristic to avoid false positives (#3931)
* Limit tokens to 32 characters or less (#3922, #3925)
* Add Carthage/Build to generated list so it doesn't show in PR diffs (#3920)
* Changed Carthage vendor regex to allow folder in any subdirectory (#3921)
* Add Cocoapods to generated list so it doesn't show in PR diffs (#3865)
* Unvendor `tools/` (#3919)
* Add PostCSS syntaxes support (#3916)
* Test Perl before Turing when running heuristics (#3880)
* Add YARA language (#3877) 
* Add the Common Workflow Language standard (#3902) 
* Fix failing edges on leading commas in args (#3905)
* Add BUILD.bazel to Python filenames (#3907) 
* Add color for LFE language. (#3895) 
* Update grammars.",856,False,en,0
3934,250,1,0,Externals,jwpezzuti3,2017-12-03 15:02:19,320687,87333,1935,0,"


",6,True,en,6
3927,1,1,0,Externals,simsieg,2017-12-01 14:32:46,4,0,1,0,,0,False,en,0
3923,250,2,0,Externals,jsoref,2017-11-30 04:47:57,703,703,213,0,"I don't actually expect this to be taken. (And yes, I'm aware this includes spelling fixes to the `Apollo Guidance Computer` -- it shows the authors were humans.) 

I'm going to slowly use these changes as indications of other projects to scan/patch (I'm slowly doing this already).

---
Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`

---
If anyone else wants to try these scripts out on some of the source repositories, they're welcome to do so :-)",512,True,en,1
3899,1,4,0,Internals,kivikakk,2017-11-09 23:23:08,202,8914,15,0,"Reverts github/linguist#3846.

It went belly up! Currently looking at results from fuzzing but until it's fixed this isn't stable.

/cc @lildude ",149,True,en,0
3896,1,1,0,Externals,yegortimoshenko,2017-11-08 15:00:45,0,0,0,0,See: https://github.com/yegortimoshenko/libsquashfs/search?l=objective-c,72,False,en,0
3894,250,1,0,Externals,BrianQMclaren,2017-11-04 21:10:09,325432,87329,1905,0,https://github.com/BrianQMclaren/book-club-react. I need help trying to solve this.,83,False,en,6
3887,2,0,0,Externals,1972859718,2017-11-02 14:57:22,0,0,0,0,,0,False,en,0
3886,1,0,0,Externals,1972859718,2017-11-02 09:35:10,0,0,0,0,测试,6,False,zh,0
3873,1,1,0,Externals,noizhardware,2017-10-20 22:08:32,7,1,1,0,"I'd like to include .ulp files to be recognized as EAGLE Script files, for EagleCad",83,False,en,0
3868,2,6,0,Externals,MarcianoPreciado,2017-10-18 20:39:42,2,2,1,0,Change arduino's purple color representation to it's signature blue.,68,False,en,0
3815,7,4,0,Externals,pmaddams,2017-09-08 14:34:54,0,0,0,0,"Some time ago, the Racket folks updated their logo as part of the rebranding from PLT Scheme. You can see the new logo here: https://github.com/racket/icons/blob/master/racket-logo.svg.

Racket is a great language and deserves a cool GitHub color to match their logo. Also, Haskell's color was recently changed from green to purple: https://github.com/github/linguist/pull/3728. We don't want people to think Haskell is the only functional programming game in town.",467,True,en,1
3810,1,1,0,Externals,DoctorWhoof,2017-09-04 20:42:23,185,0,1,0,This compiles with the most up to date Monkey2 release (V1.1.06).,65,False,en,0
3796,1,1,0,Externals,pho3nixf1re,2017-08-25 16:59:13,181,0,3,0,"The Node.js project has settled on the `.mjs` extension to identify
ES2015 modules. This extension is not being highlighted in projects that
use linguist.

## Reference

https://github.com/nodejs/node-eps/blob/master/002-es-modules.md#32-determining-if-source-is-an-es-module

## Usage on GitHub

https://github.com/search?utf8=%E2%9C%93&q=extension%3Amjs+NOT+nothack&type=Code",387,False,en,0
3794,1,4,0,Externals,AnthonyDGreen,2017-08-24 22:50:05,1,1,1,0,The maintainer of the current grammar no longer wishes to maintain it so I'd like to host the submodule instead.,112,False,en,0
3788,1,3,0,Externals,mathewmariani,2017-08-22 03:40:15,0,0,0,0,https://github.com/search?utf8=%E2%9C%93&q=extension%3Anut+NOT+nothack&type=Code,80,False,en,0
3786,2,6,0,Externals,greysteil,2017-08-19 16:33:36,0,0,0,0,"Updates requirements on [escape_utils](https://github.com/brianmario/escape_utils) to permit the latest version.

Generated on my fork using [Dependabot](https://dependabot.com), if you want to automate this stuff for the future.",231,True,en,0
3779,4,7,0,Internals,lildude,2017-08-16 14:30:20,15,48,8,0,"In an attempt to stop having to continue using an outdated and old release of the language-babel grammar, which we're not even attempting to keep in sync, this PR proposes switching out our outdated github-linguist/language-babel in favour of Facebook's [recommended grammar for Sublime](https://github.com/facebook/react/wiki/Complementary-Tools#editor-integration) babel/babel-sublime.

Limited testing suggest this solves the recently identified problems and the reason for the old grammar (see https://github.com/github/linguist/issues/3775#issuecomment-322459597) but the only thing I'm not sure about is testing picks up a duplicate for the scope:

```
WARN: Duplicated scope source.js
  Current package: vendor/grammars/language-javascript
  Previous package: vendor/grammars/babel-sublime
```

Whilst both do indeed use the `source.js` scope, `convert-grammars` only pulls in this scope for the babel-sublime grammar now.

Is this going to cause us a problem @Alhadis or @pchaigno?

This PR also does a little tidying up thanks to the `script/add-grammar` pulling other scripts which found two missing references in the `vendor/README.md` file and also an old license.

This should fix https://github.com/github/linguist/issues/3775",1256,True,en,0
3768,49,1,0,Externals,fourjs-sse,2017-08-11 14:13:50,20475,1211,248,0,"Hi,

Could you please add Genero/BDL language to your project ?
For more details about our company, please see http://4js.com/

Here the patches for languages.yml and HelloWorld sample.
[BDL-sample.zip](https://github.com/github/linguist/files/1218096/BDL-sample.zip)

Thanks in advance.
Best regards,
Sisa.",317,True,en,9
3762,2,4,0,Externals,fdodino,2017-08-08 14:54:49,0,0,0,0,"Hi, @pchaigno, related to PR #2678 , I did a new PR to add just .wlk files (next year I will try to add .wtest too as usage grows).

Wollok is an educational OO language: http://www.wollok.org/en/
It is used in several matters of different universities: UTN Buenos Aires (thttp://pdep.com.ar), UTN Delta, UNSAM (www.unsam.edu.ar), UNQ (www.unq.edu.ar)

This year we are moving to github classroom instead of SVN, so visibility will increase.

Many thanks!
Have a nice week!
Fernando

",495,True,en,0
3755,3,9,5,Externals,frangio,2017-08-04 16:51:57,280,0,3,0,"After the discussion in #3560 and following @pchaigno's suggestion in #3559, this PR adds the Solidity language, together with two sample files, but without associating an extension to it.

To sum things up, the associated `.sol` extension is shared by files on GitHub that don't correspond to a language, and it's impossible for a linguist heuristic to return that as a result. This is referred to as the `not-a-language` feature, which is apparently non-trivial to implement. In the meantine, we've agreed on adding the language without an extension, so that repositories can at least use `.gitattributes` overrides to get syntax highlighting.

Here's [a Github search](https://github.com/search?utf8=%E2%9C%93&q=pragma+solidity&type=Code) for the language with more than 25000 results.

One of the sample files is taken [from OpenZeppelin](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/crowdsale/RefundVault.sol), which is MIT licensed. The other one was written by @veox specifically to demonstrate the language syntax, and is BSD licensed.",1076,True,en,0
3748,1,5,0,Externals,smola,2017-07-31 12:19:38,5,1,2,0,"`\w` captures only ASCII letters and numbers. Changed to [[:alnum:]]
to capture any Unicode letter and digit. This makes the tokenizer
work properly on non-English based langiages (e.g. 1C Enterprise).",203,False,en,1
3740,1,1,0,Externals,goodmind,2017-07-26 16:26:59,1,1,1,0,"I looked at Protobuf and it has `type: markup` but initially I thought that this type should be used for HTML-like languages only and not RPC languages like Protobuf.

(markup type is very misleading at first)",211,True,en,0
3736,1,1,0,Externals,quasisamurai,2017-07-25 16:11:30,1,0,1,0,"Usually, solidity files has a '.solidity' extension. But me and over the 70% blockchain programmers using Solidity as main smart contracts langugage use '.sol' extension as well. So this string allow toh ighlite a .sol files. Cheers :)",235,False,en,0
3715,4,3,0,Externals,trijezdci,2017-07-08 03:33:13,55,0,3,0,"Modula-2 libraries consist of a definition module (file extension .def) and an implementation module (file extension .mod). This is comparable to .h and .c files in C and C++. Linguist not recognising .def, but .mod alone for Modula-2 would be like not recognising .c for C and C++. This patch adds (1) an entry to recognise "".def"" as Modula-2 to languages.yml and (2) a def/mod sample file pair in the samples/modula-2 directory.",430,False,en,0
3687,2,1,2,Externals,tkgogogo,2017-06-19 11:46:06,1,0,1,0,ㄴㅇ,6,False,zh,0
3676,1,3,0,Externals,anteriovieira,2017-06-13 14:40:03,2,4,1,0,,0,False,en,0
3667,2,4,0,Externals,JoshuaWise,2017-06-06 15:42:13,1,0,1,0,Files ending in `.lzz` are used by [lazycplusplus](http://www.lazycplusplus.com/index.html) to generate header files for you while developing in C++.,149,False,en,0
3647,1,2,0,Externals,MaickelHubner,2017-05-25 18:21:16,0,0,0,0,,0,False,en,0
3646,1,0,0,Externals,MaickelHubner,2017-05-25 18:12:28,0,0,0,0,,0,False,en,0
3645,1,0,0,Externals,MaickelHubner,2017-05-25 17:58:14,0,0,0,0,,0,False,en,0
3644,1,0,0,Externals,MaickelHubner,2017-05-25 17:54:13,0,0,0,0,,0,False,en,0
3638,1,8,0,Externals,simongarland,2017-05-24 09:13:32,275,0,7,0,"for a collection of kdb repositories see:

http://kxsystems.github.io

http://code.kx.com/q/github/

sample search for in the wild repositories:

user:AquaQAnalytics extension:q

user:psaris extension:q

the colour choice is used on kx.com and code.kx.com, we've used it or a similar dark blue since the early '90's.

",332,True,en,0
3636,1,0,0,Externals,jonathan-fugue,2017-05-23 00:02:52,0,0,0,0,wont merge,10,False,en,0
3571,2,5,0,Externals,MarcianoPreciado,2017-04-15 03:09:46,0,0,0,0,Correct Arduino's color to it's signature blue; Swap Arduino's old purple color to MAXScript whose color is too close. Arduino is a much more commonly used programming language than MAXScript so the color will be correct more of the time.,238,False,en,0
3570,1,0,0,Externals,MarcianoPreciado,2017-04-15 02:56:58,0,0,0,0,Match Arduino's color to its signature blue.,44,False,en,0
3560,9,15,3,Externals,veox,2017-04-10 15:57:08,558,31,12,0,"### Summary

* Conflicts with PR #3559.
* Adds [Solidity](https://en.wikipedia.org/wiki/Solidity) as a language ([search result](https://github.com/search?utf8=%E2%9C%93&q=extension%3Asol+%22pragma+solidity%22&type=Code)).
* Changes current vendor of `source.solidity` grammar from [davidhq/SublimeEthereum](https://github.com/davidhq/SublimeEthereum) to [caktux/language-ethereum](https://github.com/caktux/language-ethereum). The latter includes work on the former, and provides a few more grammar files. Language detection for those can be more easily integrated later on, if needed.
* Includes a simple heuristic to differentiate between Eagle soldermask `.sol` files and Solidity, and a test for that. The new Eagle samples are from [storborg/regerberate](https://github.com/storborg/regerberate), which is [MIT-licensed](https://github.com/storborg/regerberate/tree/ed85bb545109950946af90118b058abf9b0bcd3b/samples/eagle).
* Provides an example file written by your truly for [pygments](https://bitbucket.org/veox/pygments-main/src/95ac90c00cc6448404d751bf878cfb116b70cd1c/tests/examplefiles/example.sol?fileviewer=file-view-default), which has a BSD license ([Lightshow highlight](https://github-lightshow.herokuapp.com/?utf8=%E2%9C%93&scope=from-url&grammar_url=https%3A%2F%2Fgithub.com%2Fcaktux%2Flanguage-ethereum%2Fblob%2Fmaster%2Fgrammars%2Fsolidity.cson&grammar_text=&code_source=from-url&code_url=https%3A%2F%2Fgithub.com%2Fveox%2Flinguist%2Fblob%2F894bae2d7bfe80165aa69f6da2004ff8f94ed396%2Fsamples%2FSolidity%2Fpygments-example.sol&code=)).
* In general, makes sure no GPLv3 code makes it into github/linguist, including git history.
* Attempts to follow [contributing guidelines](https://github.com/github/linguist/blob/master/CONTRIBUTING.md#adding-a-language).

### Previous attempts

[Sorted chronologically](https://github.com/github/linguist/pulls?q=is%3Apr+solidity+sort%3Acreated-asc):

* PR #2634 - closed as stale, due to possible mis-classification of many non-Solidity files with `.sol` extension;
* PR #3161 - merged manually, proposed [davidhq/SublimeEthereum](https://github.com/davidhq/SublimeEthereum) as `grammar` vendor;
* PR #3522 - closed as unheeding to discussion in PR #2634;
* PR #3559 - currently open, proposes using `.gitattributes` as discussed in PR #2634 and builds directly on top of that (rather old HEAD), resulting in merge conflicts. [Includes example that's licensed under GPLv3](https://github.com/github/linguist/pull/3559#issuecomment-292938301), to the best of my knowledge.

### Outstanding issues

- [x] `TestGrammars` complains that the license for the [caktux/language-ethereum](https://github.com/caktux/language-ethereum) vendor needs to be ""whitelisted"". It is unclear to me whether this action must be performed by a github/linguist maintainer, or can be done by me. The [LICENSE.md](https://github.com/caktux/language-ethereum/blob/master/LICENSE.md) has a non-standard note on inclusion of prior work from [davidhq/SublimeEthereum](https://github.com/davidhq/SublimeEthereum).
- [ ] CI fails due to this (see [relevant build log](https://travis-ci.org/github/linguist/jobs/226368502#L1153)).
- [ ] `master` has drifted since PR opening - will rebase when the above is clarified.
- [x] Heuristic may still mis-classify many files (see [next comment](https://github.com/github/linguist/pull/3560#issuecomment-293001855), or issue #3589).
- [x] Heuristics test ~~missing~~ added.
- [x] A way of indicating `not-a-language` detection ~~is~~ was proposed, but moved to https://github.com/github/linguist/issues/3589#issuecomment-298168908 due to its hackish nature.",3653,True,en,1
3559,4,7,0,Externals,frangio,2017-04-09 21:48:42,237,0,8,0,"As discussed in #2634 we can't associate the `.sol` extension with Solidity until the `not-a-language` feature is implemented.

Meanwhile, though, the language should be included in Linguist so that repositories can manually set the language via `.gitattributes`.",265,True,en,0
3553,26,0,0,Externals,Szmyk,2017-04-05 15:42:50,0,0,0,0,"**[Gothic](https://en.wikipedia.org/wiki/Gothic_(video_game))** is an RPG game made by [Piranha Bytes](https://en.wikipedia.org/wiki/Piranha_Bytes).

Developers from Piranha Bytes created mod kits about 15 years ago. 

PR includes support of modding files:

- "".d"" and "".src"" - Daedalus (script language)
- "".asc"" and "".mds"" - animations
- "".zen"" - worlds (scenes)

At this moment some of modders are working on very big projects hosted on GitHub and need to have lang support (now eg. "".d"" files are listed as a D, DTrace or Makefile lang).
",553,True,en,0
3552,2,1,0,Externals,hv15,2017-04-04 12:59:55,289,0,2,0,"Hi there,

I'd like to have SAC programming language added to linguist.

There are a few examples of it in the [wild](https://github.com/search?l=&q=extension%3Asac+reshape+OR+with+OR+genarray&ref=advsearch&type=Code&utf8=%E2%9C%93).

Is there anything else I need to provide?

Thanks!",293,True,en,0
3549,1,1,0,Externals,tberman,2017-04-02 03:05:56,1,1,1,0,,0,False,en,0
3546,1,15,0,Externals,smola,2017-03-29 15:30:30,0,8,1,0,"There were two disambiguations for .t files. The first one
did only disambiguate between Perl and Perl6. The second one
disambiguated Turing and Perl6, but it was being ignored since
it was repeated.

Turing files were still being correctly classified since they fell
back to the classifier strategy though. This change removes the
unused heuristic.",356,False,en,0
3544,1,1,0,Externals,MaickelHubner,2017-03-28 09:20:11,0,0,0,0,"Add a obrigatory text ""&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS C-Win"" that indicates a OpenEdge .w file and differentiate of C files.",147,False,en,0
3542,4,2,2,Externals,multiprecision,2017-03-28 00:59:33,0,0,0,0,"1. Add comp, tesc, and tese as GLSL file extensions, as per Glslang.
`.comp` for a compute shader
`.tesc` for a tessellation control shader
`.tese` for a tessellation evaluation shader
See https://github.com/KhronosGroup/glslang
2. Sort the GLSL file extensions in alphabetical order.
3. Add GLSL compute shader sample.",325,False,en,0
3531,1,1,0,Externals,waikarnilesh,2017-03-21 10:40:26,1,0,1,0,,0,False,en,0
3529,1,1,0,Externals,Wetitpig,2017-03-21 08:55:59,0,0,0,0,Should be ok.,13,False,en,1
3527,1,1,0,Externals,javierhonduco,2017-03-20 19:37:06,0,0,0,0,"oops, sorry, wrong repo!",24,False,en,0
3526,1,1,0,Externals,waikarnilesh,2017-03-20 16:33:09,1,0,1,0,,0,False,en,0
3522,1,0,0,Externals,LogvinovLeon,2017-03-17 17:32:50,152,0,2,0,"This adds support for [Solidity](https://solidity.readthedocs.io/en/develop/) syntax highlighting and code detection to GitHub linguist.
The language is widely used in the wild, as seen in the following [GitHub search](https://github.com/search?utf8=%E2%9C%93&q=extension%3Asol+contract&type=Code&ref=searchresults).

Thank you in advance for your consideration.",365,False,en,0
3521,2,2,0,Externals,Wetitpig,2017-03-17 14:54:14,0,0,0,0,"The repository with misclassified files: https://github.com/Wetitpig/osmctools

All the files in the repository are created by breaking a large c file into several small c files. However, after breaking, linguist show c++ as the language for three of those files, which doesn't make sense at all.

Can anyone suggest how to improve linguist by detecting c and c++ more accurately?",384,True,en,0
3514,14,31,3,Externals,MaickelHubner,2017-03-13 14:04:55,0,0,0,0,"Associate files of type window (with extension .w) to the language OpenEdge ABL

https://github.com/search?utf8=✓&q=extension%3Aw+%26ANALYZE-SUSPEND+_UIB-CODE-BLOCK+_CUSTOM+_DEFINITIONS+C-Win&type=Code&ref=searchresults",223,True,en,0
3501,1,2,0,Externals,TakeshiTseng,2017-03-03 21:11:20,1,1,1,0,,0,False,en,0
3494,1,2,0,Externals,tgjones,2017-02-23 20:46:18,1,1,1,0,"Found while preparing #3490.

This change means that the test does now find some ambiguous languages, and tests that the relevant samples resolve to the correct language, but it fails with this assertion:

```
  1) Failure:
TestClassifier#test_classify_ambiguous_languages [/Users/timjones/Code/github/linguist/test/test_classifier.rb:53]:
/Users/timjones/Code/github/linguist/samples/Makefile/filenames/Makefile.frag
[[""JavaScript"", -3411.2346496412188], [""GLSL"", -3498.798416469136]].
Expected: ""Makefile""
  Actual: ""JavaScript""
```

Presumably this is because there are some filename overrides, including for `Makefile`, that aren't picked up if we use `Language.find_by_extension`. Any suggestions for fixing this?",731,True,en,1
3481,1,2,0,Externals,mkdynamic,2017-02-17 23:32:07,1,1,1,0,,0,False,en,0
3468,3,3,0,Internals,lildude,2017-02-11 15:58:56,0,0,0,0,"We've found a few large rich text format (rtf) files are causing timeouts with almost all of the time being spent in linguist:

```
Seconds |   Count | Name
 19.694 |       9 | linguist.strategy
 19.691 |       1 | linguist.detection
[... redacted ...]
  0.000 |       1 | linguist.detected
```

... specifically attempting to unnecessarily tokenise the file:

```
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist/tokenizer.rb:91:in `extract_tokens'
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist/tokenizer.rb:16:in `tokenize'
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist/classifier.rb:99:in `classify'
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist/classifier.rb:78:in `classify'
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist/classifier.rb:20:in `call'
/data/github/870366e/vendor/gems/2.1.7/ruby/2.1.0/gems/github-linguist-4.8.12/lib/linguist.rb:30:in `block (3 levels) in detect'
```

The `samples/RTF/complicated.rtf` file in this PR is an example of such a file.

This is taken from GitHub Enterprise, hence the slightly old version, but github.com exhibits the problem too as you'll be able to see if you attempt to [view the file](https://github.com/lildude/linguist/blob/60253b026b97c0088dd5816e1b518abc33b84324/samples/RTF/complicated.rtf) in this PR.

This PR addresses this problem by explicitly adding support for RTF files and marking them as data so no attempts are made to tokenise the files when rendering.

As for usage: only [434,582 results](https://github.com/search?utf8=%E2%9C%93&q=extension%3Artf+NOT+nothack&type=Code&ref=searchresults) for `.rtf` 😜

I know I'm technically a maintainer of linguist, but this is my first PR for it, so go easy on me 😉",1930,True,en,2
3453,1,3,0,Externals,larsbrinkhoff,2017-02-03 06:21:15,0,0,0,0,"With this fix in place, all but two files in #3451 are properly detected as Markdown.",85,False,en,0
3431,4,2,0,Externals,sunderls,2017-01-20 06:09:20,20,0,3,0,https://github.com/github/linguist/issues/3430,46,False,en,1
3422,2,4,0,Externals,ifarbod,2017-01-09 13:13:53,88,0,2,0,"From http://angelcode.com/angelscript:

>The AngelCode Scripting Library, or AngelScript as it is also known, is an extremely flexible cross-platform scripting library designed to allow applications to extend their functionality through external scripts. It has been designed from the beginning to be an easy to use component, both for the application programmer and the script writer.
For the script writer the scripting language follows the widely known syntax of C/C++, but without the need to worry about pointers and memory leaks. Contrary to most scripting languages, AngelScript uses the common C/C++ datatypes for more efficient communication with the host application.

The selected color is also from the same website.

It's basically a C/C++-like language, so I guess there's no need for a custom grammar.
[Here](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aangelscript+NOT+nothack&type=Code&ref=searchresults)'s a search result with some angelscript files.
",988,True,en,0
3415,5,4,17,Externals,asolove,2017-01-03 21:23:33,183,0,10,0,"[MiniZinc](http://www.minizinc.org) is a constraint modeling language used as a high-level _lingua franca_ for different constraint, linear, and mixed integer programming solvers. There are [at least 15,000 MiniZinc files](https://github.com/search?utf8=✓&q=extension%3Amzn+constraint&type=Code&ref=searchresults) already on Github. The language is growing rapidly and is now the subject of several MOOCs that are beginning soon.

This PR adds the language and grammar definitions for MiniZinc as well as two sample files that illustrate a small bit of its usage.",567,True,en,0
3403,1,1,0,Externals,davidaylaian,2016-12-24 22:38:28,0,0,0,0,This file was incorrectly being displayed as C++ when it is actually written in C.,82,False,en,0
3398,1,9,0,Externals,simongarland,2016-12-20 15:44:29,0,0,0,0,"sample search for in the wild repositories:
user:AquaQAnalytics extension:q

more examples see:
http://kxsystems.github.io/",127,False,en,0
3397,1,1,0,Externals,simongarland,2016-12-20 15:44:08,0,0,0,0,example source file for language q,34,False,fr,0
3386,1,1,0,Externals,simongarland,2016-12-14 14:01:40,0,0,0,0,"add definitions for languages k and q, fix travis complaints 
(lowercase is common usage)
sample k and q code in sample/k and sample/q 
existing repositories see kxsystems.github.io 

manually added language_ids 422 and 423 (next two free) as the set-.. script crashes for me",280,False,en,0
3385,1,1,0,Externals,simongarland,2016-12-14 13:58:00,0,0,0,0,sample k code,13,False,cs,0
3384,1,1,0,Externals,simongarland,2016-12-14 13:14:59,0,0,0,0,sample q code,13,False,fr,0
3383,1,3,0,Externals,simongarland,2016-12-14 12:39:05,0,0,0,0,add definitions for languages k an q,36,False,en,0
3372,1,2,0,Externals,yutannihilation,2016-12-08 14:53:21,2,2,1,0,"I got the error bellow when try to generate R document from this sample file: https://github.com/github/linguist/blob/master/samples/R/import.r#L195-L196

```r
@TODO [hello.R#196]: unknown tag 
```

In R, lines that starts with `#'` are for [roxygen2](https://cran.r-project.org/web/packages/roxygen2/index.html). So we should use `#` for usual code comments.",365,True,en,0
3364,2,9,0,Externals,SumeetSinha,2016-12-06 12:03:50,337,1,14,0,"…gmESSI (Translator from gmsh to ESSI files), and Real-ESSI (University of California Davis Finite Element Program )",118,False,en,0
3357,1,6,0,Externals,arkwrn,2016-12-01 19:44:50,2,2,2,0,"fix the little flaws found on http protocol that is used,
one of the web using the http protocol which is already supporting more secure protocol,
which is https",163,False,en,0
3340,1,3,0,Externals,kkodev,2016-11-22 16:33:16,15,1,2,0,"There are reasons why people need to keep these in the repo, so at least lets treat these files as binary.",106,False,en,1
3339,1,2,0,Externals,Alhadis,2016-11-22 04:11:23,1,1,1,0,"This wasn't added correctly in 43fa563. In fact, it causes the running session to hang, since it's making a call to `/usr/bin/script`. To quote `script`'s manpage:

>  The **script** utility makes a typescript of everything printed on your terminal.  It is useful for students who need a hardcopy record of an interactive session as proof of an assignment, as the typescript file can be printed out later with lpr(1).
>
> If the argument `file` is given, script saves all dialogue in `file`. If no file name is given, the typescript is saved in the file `typescript`.

What makes this truly nasty is the running process can't be killed in the usual manner, since it's directing SIGTERM to the session's transcript. I had to force-quit using Finder.",754,True,en,0
3335,1,3,0,Externals,arkwrn,2016-11-18 20:28:42,0,0,0,0,"fix the little flaws found on http protocol that is used, one of the web using the http protocol which is already supporting more secure protocol, which is https",161,False,en,0
3332,1,2,0,Externals,jlongster,2016-11-17 14:45:40,1,0,1,0,"Reason is a new variant of OCaml. For now, we can just highlight it as OCaml code. In the future we may have better support for more specific features.",151,False,en,0
3328,1,2,0,Externals,askreet,2016-11-14 19:03:39,3,1,1,0,"The top of a Thrift-generated class file starts with:

```
<?php
 namespace Foo\Bar\Thrift\MyClass;
 /**
  * Autogenerated by Thrift Compiler (0.9.3)
```
",162,True,en,0
3320,1,5,0,Externals,ghost,2016-11-07 11:08:56,0,0,0,0,"Exclude GoLang ""_examples"" directory from language statistics.

At Go Programming Language we mostly put our examples in the `_examples` directory, because `_` is Excluded from `go build` tool which provides us the binary, executable program file.

For example if someone develop a template parser in Go and the project has `_examples/` directory with tons of html examples, then the project will act as `HTML` project and not `Go`",435,True,en,0
3306,1,12,0,Externals,jtbandes,2016-10-29 07:30:29,1,1,1,0,"In the recently updated Swift grammar, we used `\h` for hexadecimal digits, which isn't supported by GitHub's highlighter.
",123,True,en,0
3287,1,2,0,Externals,lierdakil,2016-10-22 05:35:36,1,1,1,0,"A couple annoying bugs fixed upstream, so I figured I should update here as well.
",82,True,en,0
3285,2,3,0,Externals,pkrog,2016-10-18 07:00:51,42,0,4,0,"Exclude 'test' dans 'tests' directories from language statistics. Add the possibilities to flag files or directories as test inside the .gitattributes file.

I've met the issue with my project [r-biodb](https://github.com/pierrickrogermele/r-biodb) which is tagged as HTML instead of R. This is because in the 'test' directory are stored some big HTML files.
This issue could also have been solved by excluding the 'res' subdirectory, which is the directory containing resources. However I've thought that, more generally, the language used in the tests is not necessarily the one used in the application.

We could also make the 'test.yml' empty and let repository owners decide to add or not test directories in the .gitattributes file.
",739,True,en,2
3281,2,1,0,Externals,jhuang5132,2016-10-13 03:33:30,1,0,1,0,"testing how this works
",23,True,en,0
3276,2,6,0,Externals,PaulMcClernan,2016-10-10 22:51:51,0,0,0,0,"https://github.com/livecode/livecode
https://github.com/search?utf8=✓&q=extension%3A+livecode&type=Code&ref=searchresults
https://github.com/search?utf8=✓&q=extension%3A+livecodescript&type=Code&ref=searchresults
",217,False,en,0
3275,1,2,0,Externals,PaulMcClernan,2016-10-10 20:21:32,0,0,0,0,"Add LiveCode Script, LCS for short, Examples is a language originally based on HyperCard HyperTalk, similar to AppleScript and SuperCard. There is now also an derivetive language called LiveCode Builder, or LCB for short (will add samples later)
See LiveCode.com for more details.
",281,False,en,0
3274,2,5,0,Externals,otgo,2016-10-09 16:48:22,1404,2,46,0,,0,False,en,0
3269,1,1,0,Externals,primitivorm,2016-10-06 21:45:50,54532,53148,169,0,,0,False,en,4
3267,1,1,0,Externals,keplersj,2016-10-06 04:20:18,0,0,0,0,"I don't think any of these actually count as JavaScript from what I've seen.
",77,True,en,0
3262,1,20,0,Externals,nathany,2016-10-04 19:54:30,28,0,3,0,"resolves #3234

I'm only really interested in collapsing `vendor/` for use with Go, but I've added the other directory names defined in vendor.yml.
",148,True,en,2
3250,1,2,0,Externals,imranolas,2016-09-26 14:19:11,1,0,1,0,"https://please.build build definitions are written in a subset of python as are BUILD files
",92,True,en,0
3248,1,1,0,Externals,pchaigno,2016-09-25 14:31:39,0,1,1,0,"Since @Alhadis changed the VimL grammar for a new grammar with an MIT license (#3223), the ""whitelisting"" is not necessary anymore.
",132,True,en,1
3247,2,14,0,Externals,pchaigno,2016-09-24 19:12:25,19,9,5,0,"Fixes #3211.

Anyone has a better idea on where/how to store the `NEXT_LANGUAGE_ID`? The current way (in `languages.yml`) requires a few modifications to `language.rb` and tests, which I don't really like.

/cc @arfon @TwP
",223,True,en,2
3241,1,4,0,Externals,MartinNowak,2016-09-23 15:08:40,1,0,1,0,,0,False,en,0
3233,7,10,0,Externals,osorgin,2016-09-20 08:04:50,1719,0,11,0,"This pull request is essentially an updated PR [#3109 Add support for MQL4 and MQL5 languages](https://github.com/github/linguist/pull/3109) (closed now as outdated).
It includes the newly added [MQL5-sublime](https://github.com/mqsoft/MQL5-sublime) syntax which supports both MQL5 and MQL4 and has been published under a permissive license (MIT). I have also updated the language definitions according to the new `languages.yml` format. Other than that, this PR is identical to the old one.
",492,False,en,0
3227,1,9,0,Externals,Alhadis,2016-09-17 09:53:09,0,0,0,0,"This is a rewrite of the regex that handles Emacs modeline detection. The current one is a bit flaky, causing some files to be mistakenly classified. For instance, each of these files is misidentified as ""E"":
- [abbrev_defs](https://github.com/gorysko/emacs_conf/blob/d6e567c176b1409eec773b837c1d0ac5b98f1399/abbrev_defs)
- [Prot_PW2.tex](https://github.com/blackandcold/Phy-WS2013-Praktikum-1/blob/71b65d739a4a2a7eea97b398b796cf3e59aac976/Anfpra2/Prot_PW2.tex)
- [PW6_Prot.tex](https://github.com/blackandcold/Phy-WS2013-Praktikum-1/blob/71b65d739a4a2a7eea97b398b796cf3e59aac976/Anfpra6/PW6_Prot.tex)
- [mime_type.rb](https://github.com/seiya-koga/sample_app/blob/3da7ce7e115e02ba2fe32f6e994a6f37d1969492/workspace/CableChat/vendor/bundle/gems/actionpack-5.0.0.1/lib/action_dispatch/http/mime_type.rb)
- [test_rubyoptions.rb](https://github.com/lorenabento/shapado/blob/5fc0ba213df7b8a928fe05a38363de71b5579081/ruby-1.9.3-p362/test/ruby/test_rubyoptions.rb#L344)
- [parens.texi](https://github.com/zhoujd/zzemacs/blob/6402ed5178682533706180ee6367cdcdaec6022d/site-lisp/geiser/doc/parens.texi#L131)
- [zbx_multicheck](https://github.com/Farzy/zbx-multicheck/blob/7ee767d871550ec74f77eef4a6e32a94cdf6baa4/zbx_multicheck)
- [generator.lisp](https://github.com/vikram/lisplibraries/blob/105e3ef2d165275eb78f36f5090c9e2cdd0754dd/site/cl-python/core/generator.lisp)
- [redcarpet.rb](https://github.com/tekwiz/dionysus/blob/a90b13094178709b8c81b103e641c75c1baa96b5/lib/dionysus/redcarpet.rb)

It's worth noting that malformed modelines can still change a file's language in Emacs. Provided the `-*-` delimiters are intact, and the mode's name is decipherable, Emacs will set the language _and_ complain about a malformed modeline.

<img src=""https://cloud.githubusercontent.com/assets/2346707/18607443/2230b136-7d10-11e6-95ad-15f0280dc2c9.png"" width=""373"" alt=""# -*- foo-bar mode: ruby -*-"" />

I took this into consideration when rewriting the pattern, sensing that not every user knows or cares if an Emacs modeline isn't being parsed correctly (so long as the correct highlighting is shown).

Closes #3018
Closes #3226
",2116,False,en,1
3224,1,0,0,Externals,pchaigno,2016-09-15 20:26:41,2,0,1,0,"This pull request adds the `golang` alias to Go.

Fixes #3221.
",63,True,en,0
3220,1,2,0,Externals,camilstaps,2016-09-15 15:10:39,0,0,0,0,,0,False,en,0
3199,1,2,0,Externals,smola,2016-09-09 07:23:02,371,0,3,0,"Samples extracted from official repository
https://github.com/cfengine/design-center/tree/master/examples
",106,False,en,0
3196,1,12,0,Externals,mwpastore,2016-09-09 02:55:04,3,3,2,0,"There is [logic](https://github.com/github/linguist/blob/983ff20d3cee56a8d1625fcd6347372d765b8c57/lib/linguist/classifier.rb#L77) in the Classifier strategy to use all the languages in the training set if there are no language candidates at call time (a nil guard). However, this logic never fires, because `.call` passes [an empty array](https://github.com/github/linguist/blob/983ff20d3cee56a8d1625fcd6347372d765b8c57/lib/linguist/classifier.rb#L19) in this case (which doesn't trip the nil guard). This simple fix restores the intended behavior and allows the Classifier strategy to do its thing when there are no language candidates at call time.
",651,True,en,1
3192,8,13,0,Externals,Alhadis,2016-09-06 14:54:20,0,0,0,0,"Users who encounter syntax highlighting errors on GitHub are apt to report them here, unaware that Linguist isn't directly responsible for the actual highlighting. This may be partly due to the fact the [site's own help articles](https://help.github.com/articles/creating-and-highlighting-code-blocks/) point to Linguist as its _""source of language recognition and syntax highlighting""_.

Currently, we lack anything better to direct users to who want to report syntax highlighting errors. @arfon [put it best](https://github.com/github/linguist/issues/3186#issuecomment-244610844):

> I mean, [this list](https://github.com/github/linguist/tree/master/vendor/grammars) is the source of truth here but the idea of sending people to a folder of Git submodules is literally the least user-friendly thing I think I've ever thought of...

My suggestion was to maintain a list of repository links in the form of a `README.md` file, which would be programmatically updated whenever grammars are added or removed. This PR is an implementation of that suggestion.

Some things that're missing:
- **We need to tie this into a build step:**  
  I'm not familiar with Bundler or Rake, so I don't know where or how to go about having this script called when `bundle exec rake` is called. Somebody help, please? =)
- **A better preamble for the readme:**  
  I only added it as a placeholder to verify that rerunning the script wouldn't chop it off each time it executed. Feel free to replace the wording with something you feel is more appropriate.

**NOTE:** ~~I've yet to investigate why some of the grammars aren't being included (such as Perl). Will look into this soon.~~ Resolved by 3247d46.
",1686,True,en,0
3188,1,1,0,Externals,onionhammer,2016-09-03 18:25:36,0,0,0,0,"See http://nim-lang.org/
",25,True,en,0
3180,1,2,0,Internals,rmosolgo,2016-08-30 13:21:46,0,0,0,0,"The new version of the Atom grammar for GraphQL contains a couple of improvements:
- Better highlighting for directives: previously, only lowercase letters were allowed. Now,
  any GraphQL identifier will be recognized as a directive (as the spec describes)
- Better support for the &quot;Schema language&quot;: highlighting for some of the constructs
  in the schema description language. Sadly, there&#39;s an outstanding (unsolveable!?!?)
  issue with field highlighting, see https://github.com/rmosolgo/language-graphql/issues/3</textarea>
",544,False,en,0
3177,1,3,0,Externals,dev-ng,2016-08-29 18:06:06,1,0,1,0,"I propose simple solution to highlight syntax in LotusScript lss files. It can be treated as Visual Basic.
",107,True,en,0
3166,1,6,0,Externals,jwilk,2016-08-24 17:28:39,0,0,0,0,,0,False,en,0
3164,1,2,0,Externals,nhubbard,2016-08-24 16:35:03,0,0,0,0,"Add gpyi to highlight C++ scripts in Node.js. They are formatted as glorified JSON.
",84,True,en,0
3161,3,1,0,Externals,cjgdev,2016-08-23 17:16:19,0,0,0,0,"This pull request introduces the grammar for the Solidity programming language, the smart-contract programming language created for Ethereum.
",142,True,en,0
3160,3,3,0,Externals,Alhadis,2016-08-22 16:35:26,0,0,0,0,"Fixes #3121.

Despite having a generic-looking extension, searching for [`.spec`](https://github.com/search?q=extension%3Aspec+NOT+nothack&type=Code) files yields strangely consistent results.
#### Sources:
- [`manos.spec`](https://github.com/jacksonh/manos/blob/300450cd5c8a146cdf5e9cbaa837ecccfd8ab951/release/manos.spec): MIT/X11
- [`erlang-erlydtl.spec`](https://github.com/icheishvili/rpms/blob/6f88d5ee39ce3696b58563d8e3aac16c796a0c9f/erlang-erlydtl.spec)
- [`apache.spec`](https://github.com/sergiomb2/Apache-1.3_mod_perl/blob/496dbd64774ab4937a382fc49f87e75d2bbbd98e/rpmbuild/SPECS/apache.spec)
",603,True,en,0
3157,1,1,1,Externals,ruprict,2016-08-18 18:12:42,209,40,10,0,"We wanted a quick way to get LOC/language for a repo, and linguist
had all the tools, but didn't offer it as a CLI flag. So, I added
it. :)

I did make an attempt at refactoring the linguist executable a bit,
added very simple presenters that can write to any IO object.

I hope you'll find this useful. Incidentally, it's mentioned as
a want in [Issue 3131](https://github.com/github/linguist/issues/3131)
",407,False,en,3
3154,1,2,0,Externals,CosmicWebServices,2016-08-15 15:57:47,0,0,0,0,"https://github.com/LilCoders/LPMs
",34,True,en,0
3151,1,0,0,Externals,ajlangley,2016-08-10 22:42:06,0,0,0,0,"https://github.com/search?utf8=✓&q=ASN.1+extension%3Aasn+extension%3Aasn1&type=Code&ref=advsearch&l=&l=

I'd opened a pull request previously but was having a hard time rebasing and ultimately had to open a new one. 
",219,True,en,0
3149,1,2,0,Externals,Alhadis,2016-08-09 12:28:21,0,0,0,0,"Years of [`cat` abuse](https://en.wikipedia.org/wiki/Cat_%28Unix%29#Useless_use_of_cat) appear to have silently nurtured an implicit format for storing command-line options [in plain-text](https://github.com/datamapper/dm-aggregates/blob/68a6f29ab3c663a58eec2b5943e2ce538a9a4a2f/spec/spec.opts). I can't say I'm tripping over these things every day on GitHub, but [~510,095 results](https://github.com/search?p=17&q=extension%3Aopts+NOT+nothack&type=Code) with virtually identical syntax convinces me they're worth acknowledging as configuration files.

I've lumped them under the INI umbrella, which seems to be the closest fit. Recall there's no concrete definition of an ""INI file"" anyway, Windows `.ini` files notwithstanding.

This has been yet another absurdly trivial addition to GitHub Linguist, courtesy of yours truly.

To the [154 groaning watchers](https://github.com/github/linguist/watchers): you're welcome.
",923,True,en,0
3148,1,6,0,Externals,ajlangley,2016-08-09 00:27:45,0,0,0,0,"https://github.com/search?utf8=✓&q=ASN.1+extension%3Aasn+extension%3Aasn1&type=Code&ref=advsearch&l=&l=
",106,True,en,0
3143,1,7,0,Externals,Alhadis,2016-08-04 15:04:01,0,0,0,0,"No idea how I missed this the other night in [my other PS-related PR](https://github.com/github/linguist/pull/3141), but I can tell you now, PostScript is definitely not markup. It's a full-blown Turing-complete programming language which just happens to be used primarily for graphical purposes. Wikipedia's entry on [DSLs](https://en.wikipedia.org/wiki/Domain-specific_language) even uses PostScript to describe why the term ""Domain-specific language"" can be nebulous:

> For example, Perl was originally developed as a text-processing and glue language, for the same domain as AWK and shell scripts, but was mostly used as a general-purpose programming language later on. **By contrast, PostScript is a Turing complete language, and in principle can be used for any task, but in practice is narrowly used as a page description language.**

I don't know if there's any difference between `markup` and `programming` as far as Linguist's classifications are concerned, but I felt impelled to correct this nonetheless. [Here's an example of a program](https://github.com/bwipp/postscriptbarcode) written in PostScript that's written like, uh, a program.
",1153,True,en,0
3138,1,1,0,Externals,yugui,2016-07-31 12:30:07,291,0,7,0,"- Language Official site: http://jsonnet.org/
- Language Repository: http://github.com/google/jsonnet
- in-the-wild usage: https://github.com/search?utf8=%E2%9C%93&q=extension%3Ajsonnet+NOT+nothack&type=Code&ref=searchresults
",226,False,en,0
3137,4,13,2,Externals,adamjstewart,2016-07-31 00:54:27,0,0,0,0,"I would like to use Tcl syntax highlighting for [Expect](https://en.wikipedia.org/wiki/Expect) scripts. Expect is essentially a Tcl extension that allows you to automate interactive scripts. It is installed by default on macOS and most Linux distributions.

I added the `.exp` extension to `languages.yml` and copied an example script from the [Expect tarball](https://sourceforge.net/projects/expect/files/Expect/5.45/expect5.45.tar.gz/download).

There appear to be [many other Expect scripts](https://github.com/search?p=1&q=extension%3Aexp+NOT+nothack&ref=searchresults&type=Code&utf8=%E2%9C%93) in GitHub, although not all files with the `.exp` extension are in fact Expect scripts. Perhaps we could only support files with a shebang like `#!/usr/bin/expect` or `#!/usr/bin/env expect`? I don't know how to do this.

One day I hope to add a separate language solely for Expect. I filed an [Issue with Pygments](https://bitbucket.org/birkenfeld/pygments-main/issues/1273/add-lexer-for-expect-programming-language#comment-None) to get started on that work.
",1060,True,en,0
3134,2,17,0,Externals,mhsjlw,2016-07-27 00:18:08,0,0,0,0,"This pull request adds the [Whitespace language](https://en.wikipedia.org/wiki/Whitespace_%28programming_language%29) with examples taken from [the official whitespace website](http://web.archive.org/web/20150507121743/http://compsoc.dur.ac.uk/whitespace/examples.php). It does **not** add grammar support mostly because I am unable to figure out a way to make TextMate, Sublime Text or Atom display Whitespace like the example given on Wikipedia: ![Wiki example](https://upload.wikimedia.org/wikipedia/commons/3/3c/Whitespace_in_vim2.png) 

Relevance of the language is shown [here](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aws+NOT+nothack&type=Code&ref=searchresults), at around 34,000 results, although I am not sure if these are all relevant to Whitespace.  If anyone has any ideas for implementing a grammar file that renders above I am happy to adopt it into this pull request. If anything is out of place or I haven't done something properly, please tell me, I am open to suggestions and fixes, although I've tried my best to follow the guidelines for contributing.
",1086,True,en,0
3132,2,5,0,Externals,zyuhu,2016-07-25 09:54:07,36,11,2,0,"test
",5,True,en,1
3128,250,2,0,Externals,fotuzlab,2016-07-21 11:24:18,142452,64033,923,0,,0,False,en,7
3127,2,0,0,Externals,fotuzlab,2016-07-21 11:22:26,36,11,2,0,,0,False,en,1
3125,1,16,0,Externals,FarbodSalamat-Zadeh,2016-07-19 16:56:04,0,0,0,0,"XML is, by definition, a markup language, so it should be considered one, in my opinion, by GitHub's linguist. The first sentence of the [Wikipedia page for XML](https://en.wikipedia.org/wiki/XML) is this:

> Extensible Markup Language (XML) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable.
",376,True,en,0
3122,5,14,0,Externals,FarbodSalamat-Zadeh,2016-07-16 01:31:38,0,0,0,0,"Although these file extensions are deprecated, they are still Kotlin file extensions:

https://discuss.kotlinlang.org/t/whats-the-deference-between-kt-and-kts-files-jet-and-jetl-files/1058 
",190,True,en,0
3117,2,0,0,Externals,MasonSu,2016-07-14 01:08:36,36,11,2,0,"do some test
",13,True,en,1
3112,6,12,3,Externals,chrislgarry,2016-07-12 18:12:59,0,0,0,0,"I accidentallied the previous PR by trying to use the web interface to make changes...
",87,True,en,0
3111,5,20,1,Externals,chrislgarry,2016-07-12 08:25:23,0,0,0,0,,0,False,en,0
3110,7,13,0,Externals,idrougge,2016-07-12 00:31:16,554,72,57,0,,0,False,en,0
3109,14,7,3,Externals,osorgin,2016-07-11 14:09:45,1687,0,7,0,"This request adds support for MQL4 and MQL5 languages. MetaQuotes Language 4 and 5 are built-in languages of MetaTrader 4 and 5 platforms (https://www.mql5.com/en/docs, https://docs.mql4.com/). Both are object-oriented languages with a similar to C++ syntax.

The goal at this stage is to make source code files recognizable by GitHub.

File types:
1. `.mq4` — MQL4 source code ([14,957](https://github.com/search?utf8=%E2%9C%93&q=extension%3Amq4+NOT+nothack&type=Code&ref=searchresults) files on GitHub)
2. `.mq5` — MQL5 source code ([2,786](https://github.com/search?utf8=%E2%9C%93&q=extension%3Amq5+NOT+nothack&type=Code&ref=searchresults) files)
3. `.mqh` — MQL4/5 header file ([7,449](https://github.com/search?utf8=%E2%9C%93&q=extension%3Amqh+NOT+nothack&type=Code&ref=searchresults) files)

Please let me know if anything is wrong or missing.
",856,True,en,0
3104,1,1,4,Externals,jbrooksuk,2016-07-07 11:18:18,0,0,0,0,"Replaces #3008.
",16,True,en,0
3101,1,2,0,Externals,1st1,2016-07-04 23:55:42,1,0,1,0,"See also PEP 484 for details:
https://www.python.org/dev/peps/pep-0484/#stub-files
",83,False,en,0
3100,4,2,0,Externals,ghost,2016-07-03 09:11:40,0,0,0,0,,0,False,en,0
3099,98,1,0,Externals,ghost,2016-07-02 10:52:44,0,0,0,0,,0,False,en,8
3074,3,3,0,Externals,PsichiX,2016-06-23 13:55:58,603,0,9,0,"Intuicio 4 is the next-gen version of my programming platform that is created for my game development toolkit (https://github.com/PsichiX/Ptakopysk) to provide common execution layer on many different gaming platforms (desktops and mobiles, so everything where C/C++ can run) and web browsers (currently as asm.js, further as wasm).
This is an intermediate common assembly language for other high level languages (i'm currently porting Kaiju/Gojira to new Intuicio 4 platform: https://github.com/PsichiX/Kaiju)
So for now i'm the only one user of it, but in a couple of months i'll have release candidate of Ptakopysk Toolset running on Intuicio 4 platform, ready to use by other programmers.
",693,False,en,1
3073,3,7,0,Externals,Alhadis,2016-06-23 10:44:22,0,0,0,0,"This PR drops a number of TextMate grammars in favour of Atom's:
- [textmate/c.tmbundle](https://github.com/textmate/c.tmbundle)       -> [atom/language-c](https://github.com/atom/language-c)
- [textmate/css.tmbundle](https://github.com/textmate/css.tmbundle)   -> [atom/language-css](https://github.com/atom/language-css)
- [textmate/html.tmbundle](https://github.com/textmate/html.tmbundle) -> [atom/language-html](https://github.com/atom/language-html)
- [textmate/java.tmbundle](https://github.com/textmate/java.tmbundle) -> [atom/language-java](https://github.com/atom/language-java)
- [textmate/json.tmbundle](https://github.com/textmate/json.tmbundle) -> [atom/language-json](https://github.com/atom/language-json)
- [textmate/make.tmbundle](https://github.com/textmate/make.tmbundle) -> [atom/language-make](https://github.com/atom/language-make)
- [textmate/objective-c.tmbundle](https://github.com/textmate/objective-c.tmbundle) -> [atom/language-objective-c](https://github.com/atom/language-objective-c)
- [textmate/perl.tmbundle](https://github.com/textmate/perl.tmbundle) -> [atom/language-perl](https://github.com/atom/language-perl)
- [textmate/php.tmbundle](https://github.com/textmate/php.tmbundle)   -> [atom/language-php](https://github.com/atom/language-php)
- [textmate/sql.tmbundle](https://github.com/textmate/sql.tmbundle)   -> [atom/language-sql](https://github.com/atom/language-sql)
- [textmate/toml.tmbundle](https://github.com/textmate/toml.tmbundle) -> [atom/language-toml](https://github.com/atom/language-toml)
- [textmate/xml.tmbundle](https://github.com/textmate/xml.tmbundle)   -> [atom/language-xml](https://github.com/atom/language-xml)

Atom's grammars are updated far more frequently than TextMate's, and it doesn't take much snooping around their commit logs to notice this. This is especially important for fast-paced languages like CSS, where new properties are being introduced very often.
",1934,False,en,0
3062,0,3,0,Externals,MostAwesomeDude,2016-06-18 15:09:39,0,0,0,0,"Monte's got a couple dozen repositories of nearly 100 modules, according to
the following search:
https://github.com/search?utf8=✓&q=extension:mt+DeepFrozen&type=Code&ref=searchresults

I included several good sample files that are appropriately licensed (written
totally by me) and the classifier does just fine with several Monte
repositories on my laptop. (I don't know Mathematica at all, so I have no idea
whether the classifier has swung too far towards Monte on .mt files. I hope
not!)

We are committed to the language-monte repo for the grammar. It's not
_perfect_ yet, but it does a decent job, see Lightshow:
https://github-lightshow.herokuapp.com/?utf8=✓&scope=from-url&grammar_url=https://raw.githubusercontent.com/monte-language/language-monte/master/grammars/monte.cson&grammar_text=&code_source=from-url&code_url=https://raw.githubusercontent.com/mostawesomedude/mt-timeline/master/timeline.mt&code=

I tried to follow the steps in the contribution doc to the letter. Let me know
if more work is needed and I'll do it right away. Thanks!
",1058,False,en,0
3059,1,7,4,Externals,zbrock,2016-06-17 18:57:18,45,0,3,0,"Protobuf added Javascript support in 3.0.0 Beta 2.
",51,True,en,1
3055,1,10,2,Externals,vmarkovtsev,2016-06-15 16:49:34,0,0,0,0,"git-linguist requires the current directory to be a git repo, so it is not an option in my case. Thus adding machine-readable output to bin/linguist
",149,True,en,0
3039,1,2,0,Externals,c-lipka,2016-06-05 09:41:40,1,1,1,0,,0,False,en,0
3036,1,24,0,Externals,Unionjackjz1,2016-06-03 05:55:17,10,0,1,0,"Sorry if I did this wrong! Please tell me what I did wrong so I can fit it.

Thank you!!!
",90,True,en,0
3032,1,1,0,Externals,Zimmi48,2016-06-01 14:33:24,0,0,0,0,"This update is supposed to fix the issue reported here: https://github.com/mkolosick/Sublime-Coq/issues/5
",106,True,en,0
3027,1,3,0,Externals,ThomasWeiser,2016-05-30 17:08:43,1,1,1,0,"On behalf of [elm-community](https://github.com/elm-community/Manifesto) I ask you to use elm-community's [clone](https://github.com/elm-community/Elm.tmLanguage) of [`Elm.tmLanguage`](https://github.com/deadfoxygrandpa/Elm.tmLanguage).

The original author Alex Neslusan @deadfoxygrandpa is unresponsive since 2016-04-10.

There is a [syntax change](https://github.com/elm-lang/elm-platform/blob/master/upgrade-docs/0.17.md#updating-syntax) in Elm language version 0.17 that needs to be reflected in the package's grammar rules. The existing grammar renders most of the new Elm 0.17 source code red for being illegal.

On 2016-04-06 the language creator @evancz [asked](https://github.com/deadfoxygrandpa/Elm.tmLanguage/issues/99) deadfoxygrandpa to update his package for the new syntax. Four days later deadfoxygrandpa promised to do it. Since then deadfoxygrandpa wasn't seen on GitHub or on Elm's mailing lists [elm-discuss](https://groups.google.com/forum/#!forum/elm-discuss) and [elm-dev](https://groups.google.com/forum/#!forum/elm-dev).

See this [PR](https://github.com/deadfoxygrandpa/Elm.tmLanguage/pull/101) for the pending update and corresponding discussion.
",1175,True,en,0
3024,4,7,0,Externals,agwilt,2016-05-30 09:13:52,0,0,0,0,"ACS is a compiled language for the ZDoom game engine. From the ZDoom wiki:

> ACS (Action Code Script) is the scripting language that was originally created for Hexen by Raven Software and has been greatly expanded by ZDoom.

**Examples on [GitHub](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aacs+NOT+nothack&type=Code&ref=searchresults):**
- alexey-lysiuk/Realm667-AAA
- dptetc/membrance2
- wormt/bcc
- coelckers/gzdoom
- dptetc/PC96-Doom
- csnxs/retromaze
- csnxs/hydrogen
- StrikerMan780/shadow-mavericks-multi-purpose-mod
- neonplayer/Rop
- skylerdavidson/real-guns-hardcore
- agwilt/zdoom-insurrection
- rheit/zdoom
- rheit/acc <-- Well, that's the standard ACS compiler ..
- and so on

**File extension:** .acs
",728,True,en,0
3022,8,16,0,Externals,ghost,2016-05-28 22:53:17,0,0,0,0,"Updated grammars.yml with language support.
Updated languages.yml with language support.
Added language samples to `samples/Jazz`.
Added current version of repository `language-jazz` as a grammar.

""Out-in-the-wild"" example (Still being worked on): [`jazz`](https://github.com/frayment/jazz)
",292,False,en,0
3021,1,0,0,Externals,ghost,2016-05-28 22:45:03,0,0,0,0,"Updated grammars.yml with language support.
Updated languages.yml with language support.
Added language samples to `samples/Jazz`.
Added current version of repository `language-jazz` as a grammar.

""Out-in-the-wild"" example (Still being worked on): [`jazz`](https://github.com/frayment/jazz)
",292,False,en,0
3020,3,6,0,Externals,Alhadis,2016-05-27 11:13:48,0,0,0,0,"[Wavefront OBJ](https://en.wikipedia.org/wiki/Wavefront_.obj_file) is the closest thing the 3D world has to a Markdown: a venerable, nearly universally-supported format that's easy to write and parse (by both man and machine). This PR adds support for both `.obj` meshes and `.mtl` files, a complementary format for describing surface materials. The two formats are usually found bundled alongside each other.
## Usage

The extent of the format's usage on GitHub is hard to gauge. Searching for OBJ files yields nearly [1.5 million results](https://github.com/search?q=extension%3Aobj+NOT+nothack&type=Code), with many results consisting of binary/build files. I've corralled a list of unique repositories using the 3D format:
- [abeldella/JocsElectronics](https://github.com/abeldella/JocsElectronics/blob/02a36a7e2a0fc1357363a2884a68ffd67ef49afc/TJE_framework_2016/data/Bed.obj)
- [AdanBB/Project_Sapphire](https://github.com/AdanBB/Project_Sapphire/blob/0468f64b55a877aa8230f91e20c9382ae72c89d3/Assets/3D/Enemies/Boos/head.obj)
- [alexanderTex/belegUbungscodeCG](https://github.com/alexanderTex/belegUbungscodeCG/blob/b88d9d19a555109ee70aa5aaa1ec13ffb42d83a2/sogoAppOpenGL/sogoAppOpenGL/teapot.obj)
- [amecky/hex_minesweeper](https://github.com/amecky/hex_minesweeper/blob/e696f012cf8d2c7053be65013a838ec94bee0587/content/objects/ring.obj)
- [andresrcc/star-turpial](https://github.com/andresrcc/star-turpial/blob/d3cf8a0ecfbbf610ba6bbfadff32a40a7eefa07c/objetos/Feisar_Ship.obj)
- [anttisalonen/opengl-tests](https://github.com/anttisalonen/opengl-tests/blob/4178e8282a2362e3f19628548eb16be69274ae97/textured-cube.obj)
- [buttonsquared/towerdefence](https://github.com/buttonsquared/towerdefence/blob/0bbd1cbd73f07fea8fe9643efc1c40ad6f82fec8/towerdefence/Assets/AstarPathfindingProject/ExampleScenes/Example6_Navmesh/navmesh.obj)
- [Cal-El/HexPunk](https://github.com/Cal-El/HexPunk/blob/460c3702ee04e84206c744594beb1384f38f5d5e/UnityProject/Assets/Old%20Models/Room%202%20pressure%201.obj)
- [CollectiveTyranny/irrBullet](https://github.com/CollectiveTyranny/DMUX/blob/9f2c86408760beec64c047b6314cfd0bce7de88b/assets/chassis/el-camino-for-export.obj) (topkek @ [the commit message](https://github.com/CollectiveTyranny/DMUX/commit/9f2c86408760beec64c047b6314cfd0bce7de88b))
- [csepreghy/VR-Cinema-Website-with-React.js](https://github.com/csepreghy/VR-Cinema-Website-with-React.js/blob/e7d3f0d9b9d054c28b80ee734c59056a1b47115f/src/assets/models/grand-teatret.obj)
- [DhrubajitPC/capstone_prototype](https://github.com/DhrubajitPC/capstone_prototype/blob/c79c9f4f8aa13d1511aad658d14aa1809953b665/Assets/objects/Dining%20Kitchen.obj)
- [dweep123/graphics](https://github.com/dweep123/graphics/blob/84170f9bcfa540e9e857aafb561594c692ec6cba/submission/new/powergirl-hero156.obj)
- [electricFeel/BeatKeeperHRM](https://github.com/electricFeel/BeatKeeperHRM/blob/2c81efa525ccb5fd69594fc7f984d1da70529f4f/DataLogger/services/build/orange/Orange/OrangeWidgets/plot/primitives/sphere_hq.obj)
- [erlog/laughing-couscous](https://github.com/erlog/laughing-couscous/blob/42a54dc8ac1f737420614bcc3bae25098aacb1b3/objects/models/cube.obj)
- [Ethanthecrazy/CannonAide](https://github.com/Ethanthecrazy/CannonAide/blob/40dff6fefc764a53b8b0dcf24ebc88cbcaf4b018/resources/cube.obj)
- [Evilhexyon/Edze-v2](https://github.com/Evilhexyon/Edze-v2/blob/0ffb2f23b97217482b1ee31fd1678f6912fbbf0f/UnityProject/Assets/Art/Inside/Stair_Fence.obj)
- [EzraTan/Muffin-Warriors](https://github.com/EzraTan/Muffin-Warriors/blob/8ec2310763b3c05957384baed5c0c0cdd9c2e05c/ProjectFiles/Muffin%20Warriors/Assets/Art/3D%20models/lp%20cage.obj)
- [fabianin/As-aventuras-de-Lekinho](https://github.com/fabianin/As-aventuras-de-Lekinho/blob/2cdce2bd6081b4619df2bc54633c20a64cf8dca0/untitled.obj)
- [gentoomen/Ludum-Dare-22](https://github.com/gentoomen/Ludum-Dare-22/blob/afc1b5b949b0f3e6da7e7754e16512828f2620fc/resources/props/pencilpot.obj)
- [growingdever/guardian-of-yggdrasil](https://github.com/growingdever/guardian-of-yggdrasil/blob/28b598da349b7a5de1435175c683e305fe5d95cf/Assets/Droid%20Scout%20Ship/Droid_Scout_Ship.obj)
- [gudajan/Windsim](https://github.com/gudajan/Windsim/blob/6c0691065b26061075bfe307bb29d404414814c4/WindSim/fan4.obj)
- [hungnguyen94/ComputerGraphics](https://github.com/hungnguyen94/ComputerGraphics/blob/962bfbf5b04cc568dbb182d050288342da72eb11/CoffeeTable.obj)
- [imelendez/TheAmazeingRace](https://github.com/imelendez/TheAmazeingRace/blob/dd13ac8d8fa48a6e720e82f00d4e310f4dcf6e6f/models/blue1.obj)
- [IndieConstruction/EventHorizon_2016_404](https://github.com/IndieConstruction/EventHorizon_2016_404/blob/d3b53e2ff655aa671a1839541da36d2c383b6ce6/UnityProject/Assets/Project404/Inglobabili/Bottiglia.obj)
- [indyfind/Beat-Breakers](https://github.com/indyfind/Beat-Breakers/blob/773b7bf1b7613e1327f1107a0749c63a8dab006f/Beat%20Breakers%203D/Assets/Art/Models/eva_1.obj)
- [iwaken71/ActivityGame](https://github.com/iwaken71/ActivityGame/blob/254289d5f7689b637326d0c7bfeb6a5e56339409/Assets/Photon%20Unity%20Networking/Demos/DemoPickup/Assets/quad-mesh.obj)
- [Jolternauts/Jolternauts](https://github.com/Jolternauts/Jolternauts/blob/75d4b31499bc6d511fe8adb6448402f544e8a7e3/Assets/Models/Latest_Models/Station%20Parts/Corridor_Straight_Short.obj#L4)
- [Jonathan-Granier/Taluva](https://github.com/Jonathan-Granier/Taluva/blob/ee1249b6310fc7ab5eb8d04ee1b758264b8f6562/Taluva/Assets/OBJ/Tower.obj)
- [joshcutler/TheLand](https://github.com/joshcutler/TheLand/blob/aaea32d192da851b36b9f62320a456398c4f1eb5/assets/Models/Trees/tree.obj)
- [kirbyfr/Tomy](https://github.com/kirbyfr/Tomy/blob/40e209232fa047450e998fe3093d5911ea618fe1/Tomy/Assets/Resources/Objets/arrow03.obj)
- [kSkip/MereEngineDemo](https://github.com/kSkip/MereEngineDemo/blob/40a3da0e942d8fe54094027d2783c0b5e2c67a94/Data/Objects/Ground.obj)
- [LianeMakatura/Balancing_Act](https://github.com/LianeMakatura/Balancing_Act/blob/eccb687388ed5e0a035ea51bd6c3cc0b14264e5d/hierarchical_dolphin_test.obj)
- [Lyriix/colorDetectionCV](https://github.com/Lyriix/colorDetectionCV/blob/f7a03cdece00875550a428d000ae84e845a845ab/projet/data/cube.obj)
- [lwjglgamedev/lwjglbook](https://github.com/lwjglgamedev/lwjglbook/blob/fd8e5ddf1d5aefe9a5ec8a51f4235ad40c3eb925/chapter20/c20-p1/src/main/resources/models/quad.obj)
- [mandalorethx/SortDemo](https://github.com/mandalorethx/SortDemo/blob/0afb6cfa644b43eeef566858e61efc65be754e6c/RawAssets/Sphere.obj)
- [marso329/tsbk07](https://github.com/marso329/tsbk07/blob/b2fcd862214b8148b762dda5c67d62b2e6ef0781/projekt/resources/tests/%7B.obj)
- [mbroncano/swift-trace](https://github.com/mbroncano/swift-trace/blob/99badfff1d9968a9fcc17cd039de65201d45bac3/SwiftTraceWindow/bunny.obj)
- [mgottschlag/ShooterTestOld](https://github.com/mgottschlag/ShooterTestOld/blob/82e4fcffa49649c9c1176b9aa4eb6f29986d4d61/media/star.obj)
- [mikeschaekermann/qpt2a](https://github.com/mikeschaekermann/qpt2a/blob/213f3a18365207708bb4c927520aeb2217d82183/code/resources/models/attack.obj)
- [MinetestForFun/minercantile](https://github.com/MinetestForFun/minercantile/blob/ce3f17ca3507a105755106d782ae39b31d37ba40/models/minercantile_shop.obj)
- [Moises404/irl-3d](https://github.com/Moises404/irl-3d/blob/f196b8426082d200f2af27f0465c563daa382204/models/male02/male02.obj)
- [naufalkhalid/WordGame](https://github.com/naufalkhalid/WordGame/blob/fb41ca98d0fedf198551e27f5b15eecae1c436fe/Assets/Objects/Farmhouse%20OBJ.obj)
- [nebogeo/al-jazari2](https://github.com/nebogeo/al-jazari2/blob/0bd308ac9d35edf13b8325d863337f0619655de4/meshes/bot.obj)
- [noxo/jmonkey-engine-jogl-gles](https://github.com/noxo/jmonkey-engine-jogl-gles/blob/7175c2ebd7351278b9a0b47cc0cf74bbf0e91b6c/engine/test-data/Models/Teapot/Teapot.obj)
- [pabca/proyectoUnlam](https://github.com/pabca/proyectoUnlam/blob/dbfe3211e1650af334dc05a4cdb573ccf11c6450/aRSimpleNativeCars/src/main/assets/Data/models/Ferrari_Modena_Spider.obj)
- [pavelnedved/webglforfun](https://github.com/pavelnedved/webglforfun/blob/a7c5f9189b7cae3d73a1e12a0cba99e38698a8bf/teapotfun/teapot.obj)
- [pchernev/Zombayo](https://github.com/pchernev/Zombayo/blob/ce2a569cd22d6587a243e3376b0076ccda9ac65b/Assets/ExternalResources/Top%20Down%20Mobile/_TDM_Meshes/Lightshafts.obj)
- [PlatinumArts/PrincessRainbowface](https://github.com/PlatinumArts/PrincessRainbowface/blob/e6440110e079059434be1d05d03681b4b4a5311f/mods/portalgun/models/portalgun_button.obj)
- [pontusstjerna/ParaglideX](https://github.com/pontusstjerna/ParaglideX/blob/fe5a59b05e54e37d6a763cc7ef03d47e63ad49df/Blender/harness2.obj)
- [psy2/GraphicsTerm](https://github.com/psy2/GraphicsTerm/blob/128103f39900d7af1f19e0433dbb4337a36933e6/Mario.obj)
- [rachelwigell/AquiSim](https://github.com/rachelwigell/AquiSim/blob/5e99b967434def53b31bd4290b4158a803765596/graphics/guppy.obj)
- [redovic/Iterum_IM_DA_GALD](https://github.com/redovic/Iterum_IM_DA_GALD/blob/10dd1a2ba5683f81666b24944deda8d54c66d5a1/Assets/Models/Assets/tutorial_wall2_new.obj)
- [rein4ce/webcraft-engine](https://github.com/rein4ce/webcraft-engine/blob/8af6c9c50c40169e209066ce7b485505b4014782/models/tileset.obj)
- [RichardJCase/Swordf](https://github.com/RichardJCase/Swordf/blob/7d0aff14250d0e5dbb71e2bd725666eaa2463fa4/bin/objs/dog.obj)
- [risq/anamorph-unity](https://github.com/risq/anamorph-unity/blob/ab32405cdad38da43ecfeefff060d4fb23954a75/Assets/Models/Particles/cube-atom-ray_particle.obj)
- [Robzz/ter](https://github.com/Robzz/ter/blob/dca6aba8eb480d5f65fd7514e47c316ea8ea6568/assets/buddha_11k.obj)
- [sam6321/ICT371](https://github.com/sam6321/ICT371/blob/0b9a322f5834ff5e109feaa8a2015f8130cd330d/Assets/A%20Models%20-%20Textures/Kettle.obj)
- [sambthompson/spd](https://github.com/sambthompson/spd/blob/9e3a92d4edd44ef3fb057fd544e43fdd273abfb7/f15.obj)
- [samhuerzeler/RPGOpenGL](https://github.com/samhuerzeler/RPGOpenGL/blob/f7e597ee5653f6310e5ced77497d3aebd313118e/res/models/monkey.obj)
- [Samsung/GearVRf](https://github.com/Samsung/GearVRf/blob/11f3659351ad68b2f6218e60fc561ed4a9b06868/GVRf/Extensions/3DCursor/3DCursorLibrary/src/main/assets/cursor_sphere_default/cursor_sphere.obj)
- [sangh/LaserShow](https://github.com/sangh/LaserShow/blob/5882a8ea13b4f8db2b2d0a04247bd378412aa7a5/pyglet-hg/contrib/model/examples/rabbit.obj)
- [SerraPlo/JocsEnXarxa](https://github.com/SerraPlo/JocsEnXarxa/blob/fd500ba85c3b529b88fa2bf0f24cfc188f894ab7/assets/models/car/wheel.obj)
- [Skybladev2/TacticalRPG](https://github.com/Skybladev2/TacticalRPG/blob/e6504756b5485a28ff86d56d093ec849d9cf9eea/Assets/Codefarts%20Game/Grid%20Mapping/Resources/Codefarts.Unity/Source%20Meshes/2PolyPlane.obj)
- [syoyo/tinyobjloader](https://github.com/syoyo/tinyobjloader/blob/d6cd178d6a4c6f3082cf4731cf7d138f72eba53f/models/usemtl-issue-68.obj)
- [tdingsun/tdingsun.github.io](https://github.com/tdingsun/tdingsun.github.io/blob/b500881f9512cfef51010adad70bc51e3b0e47fd/tiger/laptopcharger.obj)
- [ThatZombieAlien/Laundry-World](https://github.com/ThatZombieAlien/Laundry-World/blob/a661b2b05dbb34e6d338c1f39217021fad9ea6af/Laundry%20World%20v.1/Assets/Tiled2Unity/Meshes/Villagemap.obj)
- [thepalebluedot/minimole-core](https://github.com/thepalebluedot/minimole-core/blob/194a7b6c746477fac9919be0d3d0e57a7e4a6949/examples/assets/room/room.obj)
- [tonyboyangie3/LegendsOfWar](https://github.com/tonyboyangie3/LegendsOfWar/blob/c5b066e6ff40afe7f24c12ce37c9bb961e71795b/Codebase/LegendsOfWar/Assets/oldAssets/objects/Rock6_LP.obj)
- [toyukan6/Offline](https://github.com/toyukan6/Offline/blob/183f0da574a8318620eda80fe4a5847c1b951a3b/Assets/240degrees/front.obj)
- [understreck/_](https://github.com/understreck/_/blob/5b690528f6301708513a66665d1d907a749c9c04/3d/primatives/home/home.obj)
- [vanstorm9/Yugioh-AR-Card-Mode](https://github.com/vanstorm9/Yugioh-AR-Card-Mode/blob/7ebba4c6dcdbb11c196a0f1f2e052d9c97483b6f/Assets/Models_Scripts/Models_Scripts/blue-eyes%20white%20dragon/Blue-Eyes%20White%20Dragon.obj)
- [VideoGameTeam/DAB-VideoGame](https://github.com/VideoGameTeam/DAB-VideoGame/blob/2d3a35e7fc44b3d513cfacf748d48e147b1e559e/Assets/Resources/Chameleon%20Medal/Chameleon%20Medal.obj)
- [vsingama/VirtualUMB](https://github.com/vsingama/VirtualUMB/blob/b381b59ecfd79c40f25280c2564b456c804c27d0/VirtualUMB/palm_tree.obj)
- [wienleung/bunnies](https://github.com/wienleung/bunnies/blob/4f06f79b9d0804ef4dc287e4bc5038925c9f22ba/res/rabbit/orig/rabbit_arm_high.obj)
- [wortelstoemp/BlackMesaResearch](https://github.com/wortelstoemp/BlackMesaResearch/blob/9e9f174b400dae61be0e85f8138ed335e261986c/data/meshes/sphere.obj)
- [xmaciek/starace](https://github.com/xmaciek/starace/blob/4863d87268cec11f5607fc721e6d86fa96aa01f6/models/a1.obj)
- [yanqinghuang/BehaviorDetection](https://github.com/yanqinghuang/BehaviorDetection/blob/054649a9042c674bccd56f604d3866fdba043260/ObjectTracking/Assets/3DTargetsCAD/CAD_rim_target/LineModel.obj)
- [ychding11/HelloWorld](https://github.com/ychding11/HelloWorld/blob/f38108adec1e7e0b4a764b08b69df3c6524517b5/misc/Path-Tracer/obj/dragon2.obj)
- [ZJUAdvancedCG2016FinalProject/ShapeDeformation](https://github.com/ZJUAdvancedCG2016FinalProject/ShapeDeformation/blob/c6e269b2a47cb555d2646fa90bd3314084e290f6/bunny.obj)
- [zsoxa/crosstown](https://github.com/zsoxa/crosstown/blob/3fa790507536aaed566c2af9a8d321711bb5e066/Assets/RoadTool/Example/Model/pb8420/pb8420.obj)
- [Zwiterrion/modelisation](https://github.com/Zwiterrion/modelisation/blob/0bddcfd312d27ff8b12e269af5461bf456cbabdd/DerivedData/Mod%C3%A9lisation/Build/Products/Debug/Base%20dorique.obj)

… and the list goes on.
## Examples

The sample files were ones I slapped together in 3DS Max earlier this afternoon. I kept them simple to avoid adding too much weight to the repository - OBJ files, like SVGs, can grow very large with too much detail.
## Relevant

I'm aware GitHub supports [3D models](https://github.com/blog/1465-stl-file-viewing), even going as far as [supporting geometry diffs](https://github.com/blog/1633-3d-file-diffs). However, this support is limited to STL files, which're mostly CAD-related. I understand if GitHub don't want to go too crazy with supporting so many different 3D formats, but if there's any format that deserves support in real-time previews, it's definitely OBJ.

I don't know who to ask or where to go to propose adding support for the format on the site. But I can tell you now, there'd be many users who'd appreciate it.
",14320,False,en,0
3017,2,0,0,Externals,itsolutions90,2016-05-26 17:39:48,36,11,2,0,"tst
",4,True,de,1
3015,1,5,0,Externals,NGPixel,2016-05-26 02:50:17,1,0,1,0,"**Jade** was recently renamed to **Pug**, including the file extension which is now `.pug`
As documented on their [repo](https://github.com/pugjs/pug).
",152,False,en,0
3011,1,2,0,Externals,jamesqo,2016-05-23 21:52:07,1,0,1,0,"Typical Windows Store apps will have a XML-based `.appxmanifest` file for configuring some properties of the app; this PR adds that to the list of XML files in `languages.yml`.

cc @arfon @pchaigno 
",199,True,en,0
3008,4,30,0,Externals,jbrooksuk,2016-05-18 13:44:01,0,0,0,0,"This adds support for Laravel's Blade markup language.
",55,True,en,0
2997,6,0,0,Externals,0-Eclipse-0,2016-05-08 18:52:20,84,0,4,0,,0,False,en,1
2987,1,7,0,Externals,eliah-hecht-zocdoc,2016-05-05 16:58:46,7,0,2,0,"AWS CloudFormation uses JSON files ending in .template.

Here's a search: https://github.com/search?utf8=%E2%9C%93&q=extension%3Atemplate+AWSTemplateFormatVersion&type=Code&ref=searchresults
",191,True,en,0
2983,14,1,0,Externals,arfon,2016-05-04 20:49:35,121,6,16,0,"/  cc @Alhadis 
",16,True,pt,0
2981,3,1,0,Externals,agentultra,2016-05-04 01:08:55,119,0,7,0,"This patch adds support for the TLA+ specification language.

https://github.com/search?utf8=%E2%9C%93&q=MODULE+extension%3Atla&type=Code&ref=searchresults
",156,True,en,0
2978,1,3,0,Externals,zacps,2016-05-02 09:51:51,0,0,0,0,"Jade should not be included under html because it serves a very different purpose, while it does compile to html it doesn't look like html and is a language for templating  rather than just markup.

Fixes #2977
",211,True,en,0
2963,2,1,14,Externals,ghost,2016-04-21 20:32:17,0,0,0,0,"Note that  supports both JSON and YAML formats (http://eslint.org/docs/user-guide/configuring).
Therefore, I have added a disambiguation rule.

---

(second commit)
##### Fix test classifier assertion

`Classifier.classify` returns array of array, with each nested array
having exactly two values.The first value is the candidate language
names, which this fix plucks and forms a flat array. Then it asserts
that the intended language name should exist in this flat array.

In this case, `classify()` was returning `[[""YAML"", ""..""], [""JSON"", ""..""]]`
even for `samples/JSON/filename/.eslintrc`, so the current assertion
was failing as it was checking for `result.first[0]`.
",673,False,en,2
2960,2,0,0,Externals,fpt-trungnvt,2016-04-20 07:15:55,36,11,2,0,,0,False,en,1
2957,2,0,0,Externals,Albertibanez200,2016-04-18 10:11:43,36,11,2,0,,0,False,en,1
2953,2,0,0,Externals,gavinlowk,2016-04-15 10:51:40,36,11,2,0,,0,False,en,1
2952,1,1,0,Internals,charliesome,2016-04-15 04:30:13,1,1,1,0,"This brings https://github.com/atom/language-javascript/pull/362 into Linguist for GraphQL syntax highlighting inside `Relay.QL` template strings.

Here's a quick example of something that would be highlighted nicely after this change: 

https://github.com/buildkite/frontend/blob/14ba22d2c0532b4bad6116f8c660b481a85159ce/app/components/team/Members/index.js#L138

cc @arfon @kdaigle @gjtorikian @kevinsawicki 
",411,True,en,0
2949,1,2,0,Externals,hkdobrev,2016-04-14 14:06:47,1,0,1,0,"`.php_cs` is the default configuration for [PHP CS Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer) which is a PHP file.

Example of a file where the PHP code should be highlighted on GitHub, but it isn't: https://github.com/composer/composer/blob/3b0a1c6f702d81600e1ac2c8fa7cbaf816e88d12/.php_cs
",301,True,en,0
2948,1,3,0,Internals,charliesome,2016-04-14 05:11:01,3,3,2,0,"This points the Ruby grammar at https://github.com/aroben/ruby.tmbundle/pull/1

cc @aroben @gjtorikian @kdaigle 
",113,True,en,0
2946,1,4,0,Externals,pditommaso,2016-04-13 22:04:18,0,0,0,0,"See https://github.com/search?p=1&q=extension%3Anf+process&ref=searchresults&type=Code&utf8=%E2%9C%93
",102,True,en,0
2945,2,2,0,Externals,AnimeshSinha1309,2016-04-13 20:33:10,0,0,0,0,"The Python local environment folder stores all the dependencies of the project like django, pillow and other libraries in Reqirements.txt. Since those are 3rd party apps and libraries, they should be excluded from the language statistics. So the python **env folder** has been added to vendors.yml.
",299,True,en,0
2939,1,2,0,Externals,idrougge,2016-04-06 12:11:28,11,0,1,0,,0,False,en,0
2930,1,6,2,Externals,Dominator008,2016-04-01 17:15:09,144,0,2,0,"Files named BUILD, which are build files for the Bazel and Pants build
systems, are already highlighted. This commit adds support for files
with a "".BUILD"" extension, which are also build files recognized by
Bazel.

Proposed by @jart.
",235,False,en,0
2929,1,6,0,Externals,jart,2016-04-01 15:54:35,1,0,1,0,"You'll notice that files named `BUILD` are already supported, which is for [Bazel](https://github.com/bazelbuild/bazel). But there are also situations where BUILD files might be named something like [closure_library.BUILD](https://github.com/bazelbuild/rules_closure/blob/master/closure/library/closure_library.BUILD). We'd like to have those syntax highlighted too.

CC: @Dominator008 
",387,True,en,0
2923,1,0,0,Externals,Glenntobby,2016-03-29 23:28:01,522,522,177,0,,0,False,en,1
2919,2,2,0,Externals,AlexMunoz905,2016-03-28 22:52:36,21,0,2,0,"This adds support for Napend Script
",36,True,en,0
2918,13,7,0,Externals,MahmoudFayed,2016-03-28 09:50:59,3099,0,7,0,"Added Ring Language Support - *.ring files 
",44,True,en,0
2917,5,0,0,Externals,MahmoudFayed,2016-03-28 09:00:15,3089,0,5,0,"Added Ring Language Support, *.ring files.
",43,True,en,0
2916,1,0,0,Externals,MahmoudFayed,2016-03-28 08:17:51,9,0,1,0,"Identify *.ring files as Ring files.
",37,True,en,0
2912,2,10,1,Externals,steventhanna,2016-03-25 22:07:24,130,0,6,0,"Added language support for the EJS templating language.

The EJS [project](https://github.com/tj/ejs) on GitHub has nearly 2,700 stars,  but if that is not enough qualification, here is the [search link](https://github.com/search?utf8=%E2%9C%93&q=ejs+extension%3Aejs&type=Code&ref=searchresults), in which over 40,000 files show up under the criteria `ejs extension:ejs`.

Samples have been added, and ACE Editor already has support for EJS.
",442,True,en,0
2901,1,6,0,Externals,jamesqo,2016-03-21 05:06:46,1,0,1,0,"In addition to filetypes like `.csproj` and `.fsproj`, plain old `.proj` can also be used for building MSBuild-based projects.

[Here's](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aproj+Project+msbuild&type=Code&ref=searchresults) an example of some code that would benefit from this, which appears to be about 24k files. In contrast, if you look at `.proj` files that [are not XML](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aproj+NOT+Project&type=Code&ref=searchresults), most of them appear to be binary.

cc: @arfon 
",543,True,en,0
2889,2,0,0,Externals,pokerfacett,2016-03-19 02:25:54,36,11,2,0,"ssssssssssss
",13,True,en,1
2871,1,3,0,Externals,jeroenvisser101,2016-03-09 16:50:38,27,0,2,0,"Dangerfile uses ruby. ([see here](https://github.com/danger/danger/blob/master/Dangerfile))

[search results](https://github.com/search?utf8=%E2%9C%93&q=filename%3ADangerfile&type=Code&ref=searchresults)
",204,True,en,0
2863,1,4,0,Externals,ghost,2016-03-05 16:39:25,0,0,0,0,"This tiny patch implements a strategy using the `linguist-language` attribute present in `.gitattributes`, if the file is in a `git` repo.  See #1792.

The implementation is so trivial that I wonder if there are any reasons for not having implemented this before (performance?).

If there is a willingness to accept this PR, I will add tests and clean up the patch.
",366,True,en,0
2855,2,0,0,Externals,MelissaDietz,2016-02-27 21:31:49,3,1,1,0,"#2843
",6,True,en,0
2848,1,1,0,Externals,Dominator008,2016-02-19 23:52:06,1,1,1,0,,0,False,en,0
2847,1,1,0,Externals,Dominator008,2016-02-19 23:44:33,1,0,1,0,,0,False,en,0
2834,2,0,0,Externals,hailong-wang,2016-02-06 15:52:56,36,11,2,0,,0,False,en,1
2826,2,0,0,Externals,Aakash1312,2016-01-30 21:03:46,36,11,2,0,,0,False,en,1
2825,3,3,0,Externals,basvdheijden,2016-01-29 07:42:44,186,0,3,0,"Currently, Drupal .module & .install files are not treated as PHP. I've added these in the PR.

https://github.com/search?utf8=%E2%9C%93&q=extension%3Amodule+NOT+nothack&type=Code&ref=searchresults

https://github.com/search?utf8=%E2%9C%93&q=extension%3Ainstall+NOT+nothack&type=Code&ref=searchresults
",302,True,en,0
2824,1,2,0,Externals,VojtechVitek,2016-01-28 16:26:57,1,0,1,0,"- Experimental support in go 1.5
- Native support in go 1.6 (go 1.6 rc1 released today)

See https://github.com/golang/go/wiki/PackageManagementTools
",150,False,en,0
2821,5,5,0,Externals,pyk,2016-01-28 04:13:54,11937,0,373,0,"I want to add [Terra](http://terralang.org/index.html) to linguist. But, I'm stuck at [adding grammar](https://github.com/github/linguist/blob/master/CONTRIBUTING.md#adding-a-language) for Terra.

Terra have the same syntax as Lua. Is another grammar required?

I would like to use existing [lua grammar](https://github.com/textmate/lua.tmbundle) as terra grammar. But I don't know how to do it. Any help is appreciated.

Thanks!

Related #2820 
",446,True,en,11
2813,1,2,0,Externals,srijs,2016-01-19 09:08:54,1,0,1,0,"For reference: https://docs.google.com/document/d/1Bz5-UB7g2uPBdOx-rw5t9MxJwkfpx90cqG9AFL0JAYo/edit
",100,True,en,0
2804,2,2,0,Externals,haneefmubarak,2016-01-11 02:07:35,3,3,2,0,"According to https://developers.google.com/protocol-buffers/?hl=en, it is indeed Protocol Buffer**s**.
",103,True,en,1
2798,2,0,0,Externals,al-theinnovationinc,2016-01-05 16:14:57,36,11,2,0,,0,False,en,1
2786,1,4,0,Externals,kaendfinger,2015-12-27 09:11:22,8,0,1,0,"This adds support for the file extensions used by [DGLux5](http://www.dglogik.com/dglux).
",90,True,en,0
2784,2,6,2,Externals,mitsuhiko,2015-12-27 00:04:13,9,0,1,0,"This commit adds support for Lektor content files to linguist.  Lektor content files have the `.lr` extension which does not conflict with anything in linguist.  These files contain key/value pairs where most multi line values follow typically markdown syntax.

It also adds an alias for INI files for `.lektorproject`.

For information about lektor see https://github.com/lektor/lektor
",387,True,en,0
2775,2,1,0,Externals,humzashah,2015-12-18 01:37:55,0,0,0,0,"Improved an instance of `if/else` conditions and removed usage of `attr` as a variable.
",88,True,en,0
2750,2,0,0,Externals,nguyenthaison,2015-11-30 04:04:52,36,11,2,0,"adfadfadsfsadf
",15,True,en,1
2746,8,17,3,Externals,marceloramires,2015-11-26 05:13:23,222,0,2,0,"Here's a search result on github for .ipynb, which is an extension for Jupyter Notebooks, a very popular way to code in python more visually.

Here's a github pull request showing its popularity, as requested in que contributions.md file:
https://github.com/search?utf8=%E2%9C%93&q=extension%3Aipynb+NOT+nothack&type=Code&ref=searchresults
",340,True,en,0
2745,1,3,0,Externals,slowkow,2015-11-24 15:09:46,0,0,0,0,"In #1834 the filename `Snakefile` was added to the list of Python filenames.

Here, I propose to add 3 file extensions for [Snakemake](https://bitbucket.org/snakemake/snakemake/wiki/Home). All 3 of these file extensions are unique to Python.

The author of Snakemake lists the following [file extensions for Snakefiles](https://bitbucket.org/snakemake/snakemake/wiki/FAQ#markdown-header-how-do-i-enable-syntax-highlighting-in-vim-for-snakefiles):
- .rules
- .snakefile
- .snake

and the following filenames:
- Snakefile

Aside: In the future, when Snakemake is more mature, it may be sensible to provide a language grammar based on Python and customized for Snakemake. Currently, I favor highlighting Snakemake files like Python files.
",736,True,en,0
2744,5,32,0,Externals,tx99gtp,2015-11-24 15:06:19,0,0,0,0,"Add the ability for SmartBear's common file types to be indexed properly

Because SmartBear's file types are seemingly proprietary and the majority of our repo is made up of these file types, it would be beneficial for us to see how much of each file type is in the repo.
",272,True,en,0
2742,1,1,0,Externals,ilyes14,2015-11-23 21:47:46,20,20,20,0,"Reverts github/linguist#2741
",29,True,en,0
2740,110,0,0,Externals,Ethanlin013,2015-11-22 18:16:48,10494,167,113,0,"how to do this?
",16,True,en,7
2734,2,7,0,Externals,cespare,2015-11-21 00:01:52,0,0,0,0,"This is a first attempt at a solution for #2724.

This change has the downside of reading + line-splitting all data in all files, instead of just some files as before.

A better solution would just peek the first, say, 200 bytes from the file and look for the header there. But the FileBlob interface is extremely limited. Should I extend it?

Thanks.
",352,True,en,2
2732,2,5,0,Externals,m2q1n9,2015-11-19 17:25:29,39,0,5,0,"Add [sproto](https://github.com/cloudwu/sproto) new language syntax highlighting support.
see also:
https://github.com/m2q1n9/atom-sproto-syntax
https://github.com/m2q1n9/sproto-mode
",183,False,en,1
2723,2,0,0,Externals,penkolebamovski,2015-11-13 09:00:44,36,11,2,0,"zdraveite pac
",14,True,de,1
2720,1,2,0,Externals,letmaik,2015-11-09 09:54:47,0,0,0,0,"see http://json-ld.org/spec/latest/json-ld-framing/#iana-considerations
",72,True,en,0
2715,1,5,0,Externals,alexcweiner,2015-11-05 03:08:51,0,0,0,0,,0,False,en,0
2709,10,15,14,Externals,JJ,2015-10-31 18:37:05,193,8,9,0,"And also adding a little bit of text to the README file to help with local use and test.

It was returning incorrectly some files belonging to Perl6. It's fixed now. 
",167,True,en,0
2707,2,9,2,Externals,Redth,2015-10-30 19:07:43,87,0,2,0,"This adds the .cake file extension to the C# language.

Here is a search in the wild: https://github.com/search?q=extension%3Acake+NOT+coffee&type=Code

Cake (C# Make) is a cross platform build automation system with a C# DSL to do things like compiling code, copy files/folders, running unit tests, compress files and build NuGet packages.

You can find out out more about cake here: http://cakebuild.net/
",407,True,en,0
2703,1,17,0,Externals,berdario,2015-10-23 19:50:42,6,1,3,0,"This might fix #2691 and #2660 
",32,True,en,0
2699,1,2,0,Externals,IonicaBizau,2015-10-22 06:32:56,1,1,1,0,"""Information"" instead of ""informations"" :dizzy: 
",49,True,en,0
2687,1,1,0,Externals,nextbook438,2015-10-13 09:41:28,85,41,5,0,,0,False,en,2
2678,3,13,0,Externals,javierfernandes,2015-10-10 20:04:17,255,0,7,0,,0,False,en,0
2668,1,1,0,Externals,tokenrove,2015-10-03 12:47:16,6,3,3,0,"This came up when creating #2667, but I didn't want it to be an impediment to merging that PR.  However, I decided to open this in case there was interest in supporting slashes in the primary names of languages.  It would be nice, at least presentation-wise.
",259,True,en,2
2667,2,1,2,Externals,tokenrove,2015-10-03 12:03:29,181,0,6,0,"This adds support for Ur/Web, using Gary Walborn's MIT-licensed Sublime mode.

Here's [a search that shows in-the-wild usage](https://github.com/search?utf8=%E2%9C%93&q=extension%3Aur+fun&type=Code&ref=searchresults).

Let me know if there's anything else I should do.
",269,True,en,0
2653,1,26,0,Externals,davidzchen,2015-09-25 03:01:05,74,0,5,0,"Jsonnet is a functional, formally-verified configuration generation language for JSON.

Examples in the wild: https://github.com/search?utf8=%E2%9C%93&q=extension%3Ajsonnet+NOT+nothack&type=Code&ref=searchresults

Documentation: https://google.github.io/jsonnet/doc/

Corresponding issue: google/jsonnet#43
",307,True,en,0
2647,1,1,0,Externals,jaredpetersen,2015-09-24 03:07:47,0,0,0,0,"Added the .pck file extension to PLSQL. Fixes issue #2645.

In-the-wild usage of the file extension:
https://github.com/search?l=&q=create+extension%3Apck&ref=advsearch&type=Code&utf8=%E2%9C%93
",194,True,en,0
2643,2,0,0,Externals,qwang51,2015-09-23 06:35:12,36,11,2,0,,0,False,en,1
2639,250,0,0,Externals,ghost,2015-09-20 00:47:22,98722,56843,566,0,"git-linguist: Delay loading @commit_oid
",40,True,et,2
2638,2,0,0,Externals,yetercatikkas,2015-09-18 13:20:35,36,11,2,0,"anlfknalnf
",11,True,sv,1
2634,3,18,1,Externals,whitj00,2015-09-15 23:40:00,239,0,8,0,"Examples in wild: https://github.com/search?q=extension%3Asol+contract&ref=searchresults&type=Code&utf8=✓

Documentation:  https://github.com/ethereum/wiki/wiki/Solidity-Tutorial https://github.com/ethereum/wiki/wiki/Solidity-Features
",237,True,en,0
2633,2,0,0,Externals,harpritkaur,2015-09-15 19:45:08,36,11,2,0,,0,False,en,1
2632,1,3,0,Externals,c9s,2015-09-15 06:15:54,1,0,1,0,,0,False,en,0
2631,1,1,0,Externals,matt40k,2015-09-14 16:11:24,1,0,1,0,"Add Biml scripts - http://bimlscript.com/GetStarted/AboutBimlScript
Schema - http://bimlscript.com/Content/Docs/biml.xsd
",121,False,en,0
2629,2,0,0,Externals,danielfx90,2015-09-14 02:36:55,36,11,2,0,,0,False,en,1
2628,2,0,0,Externals,takumikub,2015-09-12 22:51:15,36,11,2,0,"![chrysanthemum](https://cloud.githubusercontent.com/assets/11824179/9834198/b60c0d74-59da-11e5-9495-d1499f2
![chrysanthemum]%28https://cloud.githubusercontent.com/assets/11824179/9834211/61829740-59db-11e5-8dad-9b36fd0ebbf1.jpg%29
10bc4.jpg)
",243,False,en,1
2623,2,1,0,Externals,felipe215,2015-09-04 19:18:04,36,11,2,0,"felipe
",7,True,hu,1
2621,1,0,0,Externals,mit-mit,2015-09-04 09:46:26,0,0,0,0,"Clarified what the percentages in the Language bar are based on.
",65,True,en,0
2620,1,5,0,Externals,kr,2015-09-03 17:33:57,13,0,2,0,"This PR is like #1549, but as of Go 1.5, the go tool has a vendoring mechanism, and it uses `vendor` as the directory name.

For more details on the Go 1.5 vendor functionality, see
https://groups.google.com/d/msg/golang-dev/74zjMON9glU/4lWCRDCRZg0J
and the description of the change introducing the feature,
https://go.googlesource.com/go/+/183cc0cd41
",353,True,en,1
2615,1,7,0,Externals,sappo,2015-09-02 13:11:57,5994,0,26,0,"Here is a search query with the usage of .gsl files.

https://github.com/search?utf8=%E2%9C%93&q=extension%3Agsl+if&type=Code&ref=searchresults

A previous pull request has been made #1699.
",190,True,en,0
2614,1,0,0,Externals,ghost,2015-09-01 19:00:44,0,0,0,0,"- Update the color of Component Pascal with a similar color because it has the same color with the Pascal language.
- Capitalize 'Cuda' as it should be.
- Decapitalize 'FORTRAN' as it should be.
",195,False,en,0
2605,13,10,0,Externals,bluebear94,2015-08-30 16:20:00,950,0,6,0,"A scripting language for Touhou-like STGs ([wiki](http://dmf.shrinemaiden.org/wiki/Main_Page) / [download page](http://www.geocities.co.jp/SiliconValley-Oakland/9951/pre/th_dnh_ph3.html)).

Usage:
- bluebear94/cy05 and nagakawa/cy06 (my projects; currently classified as Python due to scripts)
- [Search for Danmakufu](https://github.com/search?utf8=%E2%9C%93&q=danmakufu) - beware of false positives
- [More accurate search](https://github.com/search?utf8=%E2%9C%93&q=TouhouDanmakufu&type=Code&ref=searchresults)
- Repositories from @TheLandOfCodesAndApertures (particularly TheLandOfCodesAndApertures/arb-DNH-codes and /TheLandOfCodesAndApertures/Sparen_Sound_Library)
- ExPorygon/Ephemeral-Unnatural-Balance
- kitsune94/THRSS_1.00d_English (translation of a Touhou fangame)

(note: some of these files use different extensions, but I opted to include only the most common one `.dnh` here)

The grammar is from drake-irving/sublime-danmakufu.
",945,True,en,1
2603,8,5,2,Externals,matejak,2015-08-29 23:14:41,0,0,0,0,"m4 is a general-purpose macro processor designed by Brian Kernighan and Dennis Ritchie. GNU M4 (the interpreter) also has built-in functions for including files, running shell commands, doing arithmetic, etc. 

Since the `autoconf` project uses `m4`, the language is very often used to fine-tune the build process of some `C/C++` projects. However, `m4` can be used on its own.

On the technical side, I think that it is a big luck that the `.m4` extension is unoccupied. The language has a very free-form syntax and it is often used as code generator, so identifying `m4` code using statistical methods seems impossible to me.

A huge number of projects make use of `m4`: 
- https://github.com/search?p=1&q=extension:m4+NOT+nothack&ref=searchresults
- https://github.com/search?utf8=✓&q=filename:configure.ac+NOT+nothack&ref=searchresults
",842,True,en,0
2599,1,0,0,Externals,manveru,2015-08-28 17:33:37,7,0,1,0,,0,False,en,0
2590,3,25,1,Externals,catalin-hritcu,2015-08-25 21:30:41,104,0,2,0,"F\* is an ML-like functional programming language aimed at program verification:
https://en.wikipedia.org/wiki/F*_(programming_language)
https://www.fstar-lang.org/

Here is a PR adding support for recognizing F\* files based on their extension (`.fst` and `.fsti`). These extensions are not currently in `languages.yml`.

Here is a GitHub search result showing in-the-wild usage:
https://github.com/search?l=&q=module+extension%3Afst&ref=advsearch&type=Code&utf8=%E2%9C%93

This PR only provides support for recognizing F\* files based on extension. We're also working on contributing F\* syntax highlighting back to ace editor:
https://github.com/FStarLang/FStar/issues/333
https://www.fstar-lang.org/ace/mode-fstar.js
and we also have an Atom grammar we could contribute:
https://github.com/FStarLang/atom-fstar/blob/master/grammars/fstar.cson
",847,False,en,0
2586,1,5,0,Externals,hcatlin,2015-08-23 20:33:08,0,1,1,0,"I'm just on a tear today separating out my languages... ;)

My argument is that Haml should be independent of HTML, because it doesn't look at all like HTML, has a ton of other features, helpers, etc that make it different than HTML.

Also, Handlebars is considered distinct from HTML, and then so should Haml.

.haml: 1.1 million files https://github.com/search?utf8=%E2%9C%93&q=extension%3Ahaml+NOT+nothack&type=Code&ref=searchresults
.hbs: 300k https://github.com/search?utf8=%E2%9C%93&q=extension%3Ahbs+NOT+nothack&type=Code&ref=searchresults
.handlebars: 98k https://github.com/search?utf8=%E2%9C%93&q=extension%3Ahandlebars+NOT+nothack&type=Code&ref=searchresults

We'd really like to be able to track usage of Haml around the internet better than is indicated by keeping it as just a flavour of HTML.

Thanks!
",817,True,en,0
2585,1,1,0,Externals,hcatlin,2015-08-23 20:23:16,1,2,1,0,"I'd like to request that Sass/SCSS both be removed from the CSS group and have it's own group created. Sass has a ton of usage these days, outranking a lot of the other 'top level' languages, and while it's a server-side preprocessor, both of it's syntaxes are full blown languages at this point and think they deserve differentiation from their W3C brethren.

Thanks!
",369,True,en,0
2583,14,7,0,Internals,bkeepers,2015-08-21 12:20:52,139485,42,420,0,"http://github.github.io/linguist/ is currently just a list of languages and colors. @alysonla was asking about docs on languages last night, which was just enough motivation for me to start working on it.

---

<img width=""1002"" alt=""linguist_colors"" src=""https://cloud.githubusercontent.com/assets/173/9408095/764cdb82-47dd-11e5-8f89-76e56a68709e.png"">
## TODO
- [x] Add search
- [ ] Click on language to show more details
- [ ] Show interpreters
- [ ] Show filenames
- [ ] Add documentation on highlighting in Markdown (/cc @gjtorikian, https://github.com/github/linguist/pull/2353)
- [ ] Show syntax highlighting via https://github-lightshow.herokuapp.com/
## Questions
- What else would be useful?
- This currently uses JavaScript to fetch the latest `languages.yml` from master and build the listing. I'm wondering if `languages.yml` should be copied into the `gh-pages` branch so a static page can be generated for each language. This could be automated so `script/release` copies it to the `gh-pages` branch.

/cc @arfon @aroben
",1036,True,en,1
2548,3,1,0,Externals,arfon,2015-08-10 14:20:49,1,1,1,0,"Changes since last release: https://github.com/github/linguist/compare/v4.5.11...359f40fb00140bdad29daaa7b0d6086f6467a14a

**Merged Pull Requests**
- Grammar updates [#2547](https://github.com/github/linguist/pull/2547) ([arfon](https://github.com/arfon))
- Make regex for vim modeline more lenient [#2546](https://github.com/github/linguist/pull/2546) ([ammaraskar](https://github.com/ammaraskar))
- YAML extensions for TextMate and Sublime Text grammars [#2545](https://github.com/github/linguist/pull/2545) ([pchaigno](https://github.com/pchaigno))
- Highlight Brewfile as Ruby [#2542](https://github.com/github/linguist/pull/2542) ([josh](https://github.com/josh))
- Filename Makefile.inc for Makefile [#2540](https://github.com/github/linguist/pull/2540) ([pchaigno](https://github.com/pchaigno))
- Updates for the Puppet language [#2539](https://github.com/github/linguist/pull/2539) ([rji](https://github.com/rji))
- Add codemirror's demo directory [#2538](https://github.com/github/linguist/pull/2538) ([BerkeleyTrue](https://github.com/BerkeleyTrue))
- #2504 - xBase aliases and extension .prw [#2537](https://github.com/github/linguist/pull/2537) ([imsys](https://github.com/imsys))
- Adding Slim tm_scope [#2536](https://github.com/github/linguist/pull/2536) ([arfon](https://github.com/arfon))
- Case-insensitive extension match for heuristic rules [#2535](https://github.com/github/linguist/pull/2535) ([pchaigno](https://github.com/pchaigno))
- Split on comma in language name if no match is found [#2447](https://github.com/github/linguist/pull/2447) ([Ryman](https://github.com/Ryman))
",1602,True,en,0
2522,2,0,0,Externals,khannap,2015-07-28 06:09:14,36,11,2,0,,0,False,en,1
2514,1,1,0,Internals,josh,2015-07-21 06:10:28,0,0,0,0,"Ignore me
",10,True,en,0
2512,4,8,2,Externals,ziggi,2015-07-20 07:10:34,8444,522,7,0,"Just good TextMate-compatible grammar for Pawn.

Some changes:
- ~~Renamed to Pawn, because it is right name.~~
- Added .inc extension, because [Pawn have more than 40K result in search](https://github.com/search?utf8=%E2%9C%93&q=extension%3Ainc+samp+OR+sa-mp+OR+pawn&type=Code&ref=searchresults) (but if you want I can remove it).
",332,True,en,1
2508,3,1,0,Externals,vszakats,2015-07-19 19:19:55,1,1,1,0,"Contains several fixes, detailed in this commit:
https://github.com/hernad/atom-language-harbour/commit/a67ddc672b06400b5a6ef9b670f1a26515b5aac0
",145,False,en,0
2507,2,1,0,Externals,vszakats,2015-07-19 18:59:29,0,0,0,0,"Summary of changes:
https://github.com/hernad/atom-language-harbour/commit/a67ddc672b06400b5a6ef9b670f1a26515b5aac0
",116,False,en,0
2501,1,1,0,Externals,larshp,2015-07-14 18:20:29,0,0,0,0,,0,False,en,0
2498,1,21,0,Externals,vszakats,2015-07-13 08:33:29,31,0,2,0,"Usage in GitHub:
https://github.com/search?utf8=✓&q=extension%3Ach+define&type=Code&ref=searchresults

Referring to:
https://github.com/github/linguist/commit/6fb4e6836cd891d5b95192dbbd277e97c503cfe1#commitcomment-12127776
",225,False,en,0
2497,6,10,2,Externals,pchaigno,2015-07-12 19:19:00,861,531,5,0,"This pull request adds a new class to Linguist to allow for the analysis of code snippets in memory (i.e. without a corresponding file on disk). It expands the API so that it is possible to do this:

``` ruby
require 'linguist'

blob = Linguist::MemoryBlob.new('README.asc', '==== Test\n\nTest app')
Linguist::Language.detect(blob)
```

It will make it possible to use Linguist in [github/markup](https://github.com/github/markup) (as discussed in github/markup#468) without restricting the API (See [usage of markup](https://github.com/github/markup#usage)).
",560,True,en,2
2491,1,2,0,Externals,keplersj,2015-07-10 23:29:10,0,0,0,0,"These file are used in the creation of modded Minecraft installation, they hold the configuration options for the mods and how they will operate during gameplay.

I've written a grammar for syntax highlighting, but sadly only for Atom... If only the GitHub website used Atom grammars...
",287,True,en,0
2476,1,5,0,Externals,RyanCavanaugh,2015-06-30 00:51:37,3,0,2,0,"TypeScript now supports JSX in .tsx files.
",43,True,en,0
2474,1,2,0,Externals,rafaelstz,2015-06-26 22:21:14,1,1,1,0,,0,False,en,0
2471,1,2,0,Externals,vighnesh1987,2015-06-24 21:27:28,1,1,1,0,,0,False,en,0
2466,2,2,0,Externals,NiklasRosenstein,2015-06-22 15:47:48,0,0,0,0,"see https://github.com/NiklasRosenstein/creator
",48,True,en,0
2465,2,5,0,Externals,todotcom,2015-06-22 11:47:32,36,11,2,0,,0,False,en,1
2460,1,1,0,Externals,kellysutton,2015-06-19 03:56:59,1,0,1,0,"There's a nice little text editor with a simple math REPL built in, and its files are supersets of Markdown. The name of the app is called [Calca](http://calca.io/). I propose this filetype be included in the linguist `languages.yml` file.

Here's a small snippet of a Calca doc:

``` markdown
# My Calca Doc

I'm going to compute my grocery bill.

eggs = $3.00
bread = $2.00
milk = $4.00
subtotal = eggs + bread + milk => $9.00
coupon = 10%
total = subtotal - (subtotal * coupon) => $8.10
```

Let me know if you have any questions. Happy to answer them.
",556,True,en,0
2459,1,1,0,Externals,gitter-badger,2015-06-18 17:44:08,2,0,1,0,"### github/linguist now has a Chat Room on Gitter

@bkeepers has just created a chat room. You can visit it here: [https://gitter.im/github/linguist](https://gitter.im/github/linguist?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/github/linguist?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
",743,True,en,0
2455,1,3,0,Externals,50Wliu,2015-06-17 00:21:24,1,0,1,0,"`.inc` file extensions are used as include files for Sourcepawn.
",65,True,en,0
2453,2,0,0,Externals,federicoleon,2015-06-16 18:12:52,36,11,2,0,,0,False,en,1
2448,1,19,0,Externals,chris-morgan,2015-06-11 01:46:51,3,3,1,0,"RenderScript files are required to have `#pragma version(1)`, and only someone deliberately trying to mislead a filetype classifier will put it in Rust code at the start of a line, so that really is the only check needed, and defaulting to Rust is then sound.

This follows on from #2424; #2425 fixed the immediate problem, but this provides a better classification; it’s entirely possible to have a Rust file with only constants defined, for example, which the previous check would fail to catch.

These heuristics are [the same as ohcount’s](https://github.com/blackducksw/ohcount/blob/d54514399013f2f9566baf40edd0e801b27fe17b/src/detector.c#L870..L897), which were [discussed at some length](https://github.com/blackducksw/ohcount/pull/30).
",748,True,en,0
2446,1,10,7,Externals,wrengr,2015-06-10 07:07:03,0,0,0,0,,0,False,en,0
2436,4,7,1,Externals,wcandillon,2015-06-03 08:43:12,8,1,3,0,"Hello,

I would like to have the syntax highlighting for the XQuery and JSONiq language based on these two Atom grammars: https://github.com/wcandillon/language-jsoniq/tree/tokenize/grammars.
Can someone point me into the right direction? :)
",242,True,en,0
2435,3,3,0,Externals,larsbrinkhoff,2015-06-03 07:10:07,0,0,0,0,"Submitted for comments and ideas.  Adresses #2433.

The problem with `.com` is that it's the name of the most popular top-level domain.  And people like to use domains as file names.  Also email addresses.

| Language | Files |
| --- | --- |
| _all_ | [175k](https://github.com/search?q=extension%3Acom+NOT+slartibartfast) |
| DCL | [52k](https://github.com/search?q=extension%3Acom+gosub+OR+goto+OR+mcr&type=Code) |
| Zone File | [1.8k](https://github.com/search?utf8=%E2%9C%93&q=extension%3Acom+soa) |
| Nginx | [500](https://github.com/search?q=extension%3Acom+listen+%22server_name%22) |
",592,True,en,0
2428,2,10,0,Externals,bashor,2015-05-28 20:18:33,1,1,1,0,"IMHO it's more suitable.
",25,True,en,0
2427,3,6,0,Externals,larsbrinkhoff,2015-05-28 18:30:44,0,0,0,0,"Pulled out the `.me` changes from #2383 ""More file extensions for Groff"".

Some `.me` files are Groff.  Some are MakeMe.  Plenty are Text files like ""read.me"".

Discuss!
",170,True,en,2
2406,2,0,0,Externals,aaronwinter,2015-05-19 13:53:54,36,11,2,0,,0,False,en,1
2395,1,2,0,Externals,mark-shamy,2015-05-13 18:57:22,0,0,0,0,,0,False,en,0
2391,1,3,0,Externals,stanhu,2015-05-12 14:17:42,441,2,6,0,"Add a distinction between binary and text image files
",54,True,en,2
2380,1,3,0,Externals,wkentaro,2015-05-03 16:50:12,1,0,1,0,,0,False,en,0
2379,1,8,0,Externals,wkentaro,2015-05-03 16:43:26,13,0,2,0,"GitHub search result: https://github.com/search?utf8=%E2%9C%93&q=extension%3Al+eus+euslisp+roseus&type=Code&ref=searchresults
EusLisp GitHub Repo: https://github.com/euslisp/EusLisp
",182,False,en,0
2371,2,0,0,Externals,stl-sanjay,2015-05-01 04:40:34,36,11,2,0,,0,False,en,1
2370,10,15,2,Externals,mcandre,2015-04-30 20:15:17,28,0,7,0,"Use Bind.tmbundle to highlight DNS zone (BIND) files, per #2364
",64,True,en,0
2369,1,6,0,Externals,vog,2015-04-30 15:18:06,0,0,0,0,,0,False,en,0
2359,6,8,1,Internals,bkeepers,2015-04-25 21:39:57,98,83,2,0,"Previously, a defined heuristic had to match all candidates to be used. This leads to problems when we add a language extension that conflicts with existing languages used in a heuristic. This inverts the logic so a heuristic only has to include a subset of the candidates to be considered a match.

One added benefit of this change is that we can start to add a single heuristic for languages. See  8309985 for an example, which extracts the Objective C heuristic.

/cc @arfon
",478,True,en,1
2358,2,5,0,Externals,phase,2015-04-24 23:11:44,0,0,0,0,"> Deadfish is a very odd interpreted programming language created by Jonathan Todd Skinner. It was released under public domain and was originally programmed in C, but now it has been since ported to many other programming languages.

It's an interesting language and it'd be sweet if Linguist had support for it. I put the extension as `.df`, though I assume it could be anything depending on the interpreter. You can read more about it [here](https://esolangs.org/wiki/Deadfish).

| Type | Increment | Decrement | Square | Output |
| --- | --- | --- | --- | --- |
| Standard Deadfish | i | d | s | o |
| XKCD variation | x | d | k | c |

There aren't a lot of interpreters on GitHub, but [here are some](https://github.com/search?utf8=%E2%9C%93&q=deadfish).
",760,True,en,0
2354,2,6,3,Externals,phase,2015-04-22 04:35:00,0,0,0,0,"Fixes #2197 Code from @pchaigno, I just made the PR. :rabbit: 
",63,True,en,0
2353,5,12,2,Internals,gjtorikian,2015-04-22 01:43:41,413,0,2,0,"Closes https://github.com/github/linguist/issues/2278, /cc https://github.com/github/linguist/issues/2331.

This is a spike at providing a comprehensive list for which syntax highlight codes are valid on GitHub. I verified a few of the weirder ones manually. For example, something like

``````
``` storyboard
<wow>
```

``` reek
- wow
```
``````

does actually work:

``` storyboard
<wow>
```

``` reek
- wow
```

I wonder also what a test for this might look like, if we wanted one.

/cc @github/languages @jmm
",513,True,en,0
2351,1,0,0,Externals,arfon,2015-04-20 22:07:37,6,5,3,0,"Fixes https://github.com/github/linguist/issues/2349
",53,True,en,2
2348,1,7,0,Externals,hanwen,2015-04-20 14:32:46,1,0,1,0,"called Skylark, using the extension .bzl.
",42,True,en,0
2168,3,13,0,Externals,pchaigno,2015-04-19 17:40:00,206,0,5,0,"There is [more than 9,900 `.run` files on GitHub](https://github.com/search?utf8=%E2%9C%93&q=extension%3Arun+NOT+djdjfkdffgjderskskvlr&type=Code&ref=searchresults). It is used by many languages. Thus, to add that extension, we need to identify all languages using it (with at least hundreds of examples).

| Language | Number of files |
| --- | --- |
| Shell | [1,900](https://github.com/search?p=1&q=extension%3Arun+bash&ref=searchresults&type=Code&utf8=%E2%9C%93) |
| Perl | [1,000](https://github.com/search?l=perl&q=extension%3Arun+NOT+dkfjdkfndrnjbkbh&ref=searchresults&type=Code&utf8=%E2%9C%93) |
| Ruby | [900](https://github.com/search?p=6&q=extension%3Arun+puts&ref=searchresults&type=Code&utf8=%E2%9C%93) |
| AMPL | [400](https://github.com/search?utf8=%E2%9C%93&q=extension%3Arun+solve&type=Code&ref=searchresults) |

I will update this post with the list of languages as we go. I might eventually turn this issue into a pull request to add support of the extension.

This extension was requested for AMPL in #2073 (but I can't make a search query with more than 200 files without having a lot of other languages).
",1126,True,en,0
2344,1,3,0,Externals,ankurp,2015-04-17 19:54:04,8,0,1,0,"Fixes #2343
",12,True,en,0
2342,1,2,0,Externals,larsbrinkhoff,2015-04-17 09:55:56,0,0,0,0,"Running _Linguist_ on an individual file will not take `.gitattributes` into account.  This affects the search index.

I looked into fixing this, and came up with this pull request.  It may well be wrong in many ways, so I'm mostly putting it up as a conversation item.  It turns out it will not help with the index, but perhaps it can be useful anyway.

In short, I added an optional directory argument after the file name.  If supplied, a `LazyBlob` will be created instead of a`FileBlob`.
",492,True,en,0
2337,8,14,0,Externals,phase,2015-04-16 06:13:53,0,0,0,0,"More colors. Don't merge yet, as I want to get some more added.
",64,True,en,0
2327,2,0,0,Externals,Rahat-3858,2015-04-10 23:32:14,36,11,2,0,"docs
",5,True,en,1
2319,1,4,0,Externals,Ignotus,2015-04-09 08:49:08,0,0,0,0,"The proposed sample file that contains tokenized Dutch words has been wrongly recognized as a NewLisp code in my repository.

This patch is a try to fix this ambiguity.
",169,True,en,0
2302,1,2,0,Externals,phase,2015-04-03 01:42:01,0,0,0,0,"This removes the following from being checked by linguist:
- libs
- Libs
- lib
- libs
- Libraries
- libraries

These are usually only used for libraries for a project, and not the project itself.
",196,False,en,0
2268,3,4,0,Externals,kirillDanshin,2015-03-24 21:21:16,4,0,1,0,"Improved PHP detection (not tested yet)
",40,True,en,0
2255,1,1,0,Externals,larsbrinkhoff,2015-03-23 08:11:49,0,0,0,0,"There are about 10 million `.csv` files on GitHub.
",51,True,en,1
2251,1,2,0,Externals,hollingberry,2015-03-21 05:20:00,0,0,0,0,"Hi there!

I was wondering why [my Spacemacs config](https://github.com/hollingberry/dotfiles/blob/master/emacs/.spacemacs) didn't have syntax highlighting... I think I found the problem.

I modifed the EmacsModeline regexp to allow hyphens in the mode name. This means (I hope) that files with

```
;; -*- mode: emacs-lisp -*-
```

at the top are now correctly recognized as written in Emacs Lisp.

This doesn't solve the problem of more complex modelines like

```
;; -*- mode: emacs-lisp; coding: utf-8 -*-
```

because the regexp expects the `-*-` terminator after the first semicolon. If you'd like, I can make the regexp support this sort of thing as well.
",663,True,en,1
2243,1,0,0,Externals,bharatgaind234,2015-03-18 20:47:17,36,11,2,0,,0,False,en,1
2239,1,2,0,Externals,pawandeep2155,2015-03-18 12:10:58,14,0,1,0,"I added code in heuristics.rb of lib folder.
There are few unique keywords which are present uniquely in both the languages.
Ocaml :-     /->|assert|class|external|functor|match|mutable|struct|try|inherit|module|virtual/
Standard ML :-    /=>|abstype|datatype|handle|infixr|nonfix|withtype|local|andalso|orelese/
I created the regular expression and matched it with the data and if keywords are present then return the language which it matched. 
",447,False,en,0
2225,1,0,0,Externals,ghost,2015-03-12 23:59:54,36,11,2,0,,0,False,en,1
2212,1,0,0,Externals,arfon,2015-03-07 13:10:54,3,1,1,0,,0,False,en,0
2211,1,0,0,Externals,arfon,2015-03-07 13:08:15,2,0,1,0,,0,False,en,0
2210,1,0,0,Externals,arfon,2015-03-07 13:03:28,1,1,1,0,,0,False,en,0
2183,1,0,0,Externals,redj,2015-03-01 23:43:25,1,0,1,0,"I'm hoping this very trivial change will give eC it's designated color in the language bar of the repository page.
Many thanks!
",128,False,en,0
2177,1,4,0,Externals,mojombo,2015-02-27 22:06:34,1,1,1,0,"This updates the TOML submodule to the latest commit, which includes proper behavior for TOML v0.4.0.
",102,True,en,0
2167,1,4,1,Externals,benley,2015-02-25 23:01:43,9,0,1,0,,0,False,en,0
2164,1,3,0,Externals,alvarotrigo,2015-02-25 12:23:24,3,0,1,0,"I would say its even more common than the Samples folder (see Reveal.js, Three.js, Express, Meteor, Backbone...)

I was forced to use a `.gitattributes` to exclude the ""examples"" folder from the language stats, as my whole project was marked as HTML instead of Javascript.
",273,True,en,0
2163,1,5,0,Externals,brandonwamboldt,2015-02-25 02:18:28,1,0,1,0,"It's pretty common for PHP projects to have `.inc` files which are PHP, so we should apply heuristic detection against .inc files for PHP detection.

Fixes https://github.com/github/linguist/issues/1799
",203,True,en,0
2161,1,1,0,Externals,brandonwamboldt,2015-02-25 01:35:33,1,1,1,0,"Updating my sublime-nginx plugin as I fixed a bug with the syntax highlighting (https://github.com/brandonwamboldt/sublime-nginx/commit/872afddd2d61acae85560fa009658257f4030244).

Fixes #2125 and #2155.
",203,True,en,0
2150,1,0,0,Externals,soonhokong,2015-02-22 07:35:33,158,0,6,0,"https://github.com/search?p=1&q=extension%3Ahlean+extension%3Alean+NOT+nothack&ref=searchresults&type=Code&utf8=%E2%9C%93
",122,True,en,0
2143,3,4,0,Externals,CodingAnarchy,2015-02-21 04:23:32,0,0,0,0,"The search results of usage on GitHub:

https://github.com/search?q=language%3A+brainfuck&ref=searchresults&type=Repositories&utf8=%E2%9C%93
",141,True,en,0
2142,1,0,0,Externals,CodingAnarchy,2015-02-21 04:04:58,0,0,0,0,,0,False,en,0
2130,1,2,0,Externals,MatejLach,2015-02-18 21:21:54,1,1,1,0,"Just a simple name change, since the project was renamed a while ago, see:
https://github.com/Araq/Nim (description)
",117,False,en,0
2122,4,0,0,Externals,Francey09,2015-02-16 21:16:51,10,0,2,0,,0,False,en,0
2121,1,1,0,Externals,def-,2015-02-16 20:00:39,1,1,2,0,"The language renamed about 2-3 months ago: http://nim-lang.org/
",64,True,en,0
2094,1,2,0,Externals,RyanCavanaugh,2015-02-09 20:22:10,0,0,0,0,"Determine when a file is an MPEG transport stream

Example of misclassified repo: https://github.com/neil-morrison44/VidiiUStreamer
",132,True,en,0
2093,1,4,0,Externals,arfon,2015-02-09 18:04:48,2,0,1,0,,0,False,en,0
2091,1,4,0,Externals,waywardmonkeys,2015-02-09 13:57:39,2198,0,4,0,"ColdC code is now landing in some repos in https://github.com/the-cold-dark/
among other possible places.
",106,False,en,0
2082,6,18,5,Externals,Shoelace,2015-02-06 13:46:49,0,0,0,0,"update of old PL/SQL PLpgSQL and SQLPL patch based on current version
see add support for oracle PLSQL (#1003)

I have tested this on my own repo. plus a number of publicly available ones..
angoca/log4db2
okbob/plpgsql_lint
antzucaro/xonstatdb

and it is correct as far as i can tell..  would appreciate some other people to check it..
we may need to add more/better samples.

I think i have everything right with the new style now..

FYI @chezwicker @pchaigno and @arfon 
",473,False,en,1
2080,1,1,0,Externals,StephenSeanGleason,2015-02-05 22:26:38,1,0,1,0,"software working properly
",26,True,en,0
2069,1,3,0,Externals,steinwaywhw,2015-02-02 18:21:48,1,1,1,0,"Updated with the latest ats-mode-sublime repo. It fixed problem with record/tuple data type in ATS. Demo [here](https://lightshow.githubapp.com/?utf8=%E2%9C%93&scope=from-url&grammar_url=https%3A%2F%2Fraw.githubusercontent.com%2Fsteinwaywhw%2Fats-mode-sublimetext%2Fmaster%2Fats.tmLanguage&grammar_text=&code_source=from-url&code_url=https%3A%2F%2Fgithub.com%2Fsteinwaywhw%2Fats-parcc%2Fblob%2Fmaster%2Ffile%2Flocation.dats&code=). I'm not sure if I should always manually update submodules. Please let me know if you have any rules to follow on this topic. 
",559,True,en,0
2045,1,2,0,Externals,assimovt,2015-01-27 14:41:57,0,0,0,0,"Linguist::FileBlob operates on the path to a file. In some cases the
file is not available on disk. Hence, the FileContents mimics FileBlob
and enables language detection based on the raw file data and
the name of the file.
",224,False,en,1
2034,3,2,0,Externals,gsauthof,2015-01-24 21:31:34,1,4,4,0,"Source:

Download http://www.colm.net/files/ragel/ragel-6.9.tar.gz and look unter
`examples`. There are a bunch of `.rl` files that all contain Ragel
specifications with some C or C++ in action snippets.  Not one example
including ruby.

Ragel (the state machine description compiler/language) also supports
languages besides C/C++, but a .rl file usually contains just small
snippets of the target language (C/C++ ...) in actions of a state machine.

Thus, the correct classification of `.rl` files is just 'Ragel' and
NOT 'Ragel in Ruby Host'.

See also my comment in the prematurely closed issue:

https://github.com/github/linguist/issues/1251#issuecomment-67895082
",670,True,en,0
2026,1,5,0,Externals,praswicaksono,2015-01-23 07:28:17,3,0,1,0,,0,False,en,0
2011,3,5,0,Externals,arfon,2015-01-19 15:45:41,18,18,18,0,"Changes since v4.2.6: https://github.com/github/linguist/compare/v4.2.6...561e62607020bc2eba696658eae504cdea625f09

Merged Pull Requests since v4.2.6:

Recommend updating grammars when releasing: https://github.com/github/linguist/pull/1963
Add missing ^ in regexp for Frege heuristic: https://github.com/github/linguist/pull/1970
Add a language grammar for Nit: https://github.com/github/linguist/pull/1973
Update Hy support by adding a reference to an Atom grammar: https://github.com/github/linguist/pull/1974
Grammar for HTTP highlighting: https://github.com/github/linguist/pull/1975
Use path for Generated? detection: https://github.com/github/linguist/pull/1976
Grammar for AutoHotKey: https://github.com/github/linguist/pull/1977
More CMake samples: https://github.com/github/linguist/pull/1978
New grammar for Racket: https://github.com/github/linguist/pull/1982
Add *.sagews to languages.yml: https://github.com/github/linguist/pull/1989
Support for web ontology language (OWL): https://github.com/github/linguist/pull/1995
Add FXML to languages.yml: https://github.com/github/linguist/pull/1996
Add pike interpreter for Pike: https://github.com/github/linguist/pull/1998
Heuristics for .cs files: C# and Smalltalk: https://github.com/github/linguist/pull/2003
Add Rexfile: https://github.com/github/linguist/pull/2005
",1329,True,en,0
2009,1,3,0,Internals,bkeepers,2015-01-19 13:44:30,12,8,5,0,"A filename like `index.html.fr` would previously return `.html.fr` and
`.fr` as possible extensions. This makes it so it will also return
`.html`.

The tests are currently failing because now `bootstrap.css.map` is being detected as CSS when it should be nothing. I think this change has the potential to cause a lot of issues like that, so before this can merge we may want to investigate filtering out any results that don’t cross some confidence threshold in the classifier.

/cc @arfon
",492,False,en,3
1981,16,0,0,Externals,Jordieos,2015-01-10 08:51:56,36,20,20,0,"rgtrhtwrhrwth
",14,True,en,0
1980,2,5,0,Externals,eider96,2015-01-10 01:07:09,0,0,0,0,"Some PAWN language files are wrongly detected as OpenEdge ABL. This commit fixes it.
",85,True,en,0
1979,1,4,0,Externals,ArturViader,2015-01-09 20:44:34,217,0,1,0,"Xojo is very similar to vbnet. Codehighlight works with ```vbnet. But when you add a WHILE WEND bucle on the code highlight disappears.
This is for try fix this.
",162,False,en,0
1969,1,3,0,Externals,larsbrinkhoff,2015-01-08 09:43:03,0,0,0,0,"Fixes #1961.  Unless adding more samples does the trick.
",57,True,en,0
1949,14,1,0,Externals,Jakemichaeldrew,2015-01-05 13:05:06,0,0,0,0,"KievScript is a language that I am building - for practise before I embark on the snap language.

Thanks, Jake.
",112,True,en,0
1948,2,1,0,Externals,wcandillon,2015-01-04 19:17:54,1,0,1,0,"I have built a XQuery and JSONiq Atom package: https://atom.io/packages/language-jsoniq
I would like the Javascript lexer to be used for XQuery and JSONiq syntax highlighting in github.

However, the highlighting is done programmatically, not by using a grammar file. Would that be a problem?
Please let me know what I can do to contribute better XQuery and JSONiq syntax highlighting to github.
",396,False,en,0
1936,35,12,0,Externals,adelq,2015-01-02 06:15:24,384,101,55,0,"Nimrod has been renamed to Nim as of 4 days ago in the latest release.
Source: http://nim-lang.org/news.html#Z2014-12-29-version-0-10-2-released
",145,False,en,13
1935,1,5,1,Externals,floscher,2015-01-02 02:11:47,0,0,0,0,"#1932 introduced an error that prevented [download-grammars](https://github.com/github/linguist/blob/master/script/download-grammars) from working. The script issued an error message saying that `vendor/grammars/Elm.tmLanguage` is not a file (what is true because it is a directory).

The reason for this is:
Submodules must not end with neither `.tmlanguage` nor `.plist`. Otherwise the `download-grammars`-script will interpret the submodule as a `SingleFile` instead of a `DirectoryPackage`, which will lead to an error message.

The relevant line in `download-grammars` is https://github.com/github/linguist/blob/f2ab426d38dc391a6b0612cecf29cb67efa931b4/script/download-grammars#L153
",688,True,en,0
1924,1,2,0,Externals,yous,2014-12-29 05:52:33,1,1,1,0,"See SalGnt/Sublime-VimL#2.
",27,True,en,0
1923,1,2,0,Externals,sebgod,2014-12-28 13:29:53,8,0,1,0,"In the [Mercury repository](http://github.com/Mercury-Language/mercury)
75 files have been classified as 'M', this patch tries to rectify that,
using the fact that Mercury modules must contain a ':- module'
directive.
",218,False,en,0
1921,5,12,1,Externals,rwtolbert,2014-12-27 22:24:12,0,0,0,0,,0,False,en,0
1911,1,1,0,Externals,archywilhes,2014-12-25 20:15:57,1,0,1,0,"Well, some of us use custom bootstrap.. 
https://github.com/github/linguist/issues/1910 
",89,False,en,0
1908,1,3,0,Externals,Ehryk,2014-12-21 06:12:25,27,0,1,0,"My ContextMenuTools repository, written primarily in .inf (Windows Installer) files, is reporting Visual Basic as the primary source language. I added two language entries, one for Windows Registry (.reg) files, and one for Windows Installer (.inf, .msi, .msp, .wix) files.
",274,True,en,0
1906,1,8,1,Internals,bkeepers,2014-12-20 18:36:17,2,69,2,0,"@aroben I know we briefly discussed this, but I couldn't remember what the reason was to not use `xargs`.
",106,True,en,0
1902,1,2,2,Externals,RichardLitt,2014-12-19 09:02:17,1,1,1,0,,0,False,en,0
1894,1,36,1,Externals,alandipert,2014-12-18 16:04:15,210,0,3,0,"[Boot](http://boot-clj.com/) is a Clojure build tool that uses the `.boot` extension for Clojure code run in the Boot environment.  It would rock if `.boot` files were Clojure highlighted.
",189,True,en,0
1892,2,11,0,Externals,larsbrinkhoff,2014-12-18 07:19:48,0,0,0,0,"Suggestion: Contributions should avoid false positives.

It's easy to add a new language with a file extension in languages.yml (or add a new extension to an existing language), but that may result in a great number of files being misdetected.  This isn't doing new languages any service, since e.g. searches, trendling lists, etc will be cluttered with unrelated results.  Usually this can be avoided with a heuristic.
",420,True,en,0
1883,1,0,0,Externals,ghost,2014-12-16 06:41:51,11,0,1,0,,0,False,en,1
1878,1,6,0,Externals,pguyot,2014-12-15 09:03:26,0,0,0,0,".cp is quite commonly used for C++ rather than for Component Pascal.

https://github.com/search?utf8=✓&q=include+extension%3Acp&type=Code&ref=searchresults
currently yields 10442 results, mostly C++.

https://github.com/search?utf8=✓&q=MODULE+extension%3Acp&type=Code&ref=searchresults
currently yields 699 results (and some actually are C++ as the search is case insensitive).
",382,True,en,1
1872,1,2,0,Externals,geoff-codes,2014-12-13 02:21:13,11,48,3,0,"This is an improved reimplementation of #855, something I was hacking on a year ago.

The long and short of it: replace @brianmario / [charlock_holmes](https://github.com/brianmario/charlock_holmes) with a fast, pure Ruby encoding detector for common encodings. It certainly doesn't do all that the ICU library can do — it won't detect legacy multi-byte encodings, Big5, EBCDIC. But it also doesn't have to `dlopen()` a ~25Mb C++ library/module when invoked. And if I had to take a guess, I'd say this probably covers ±99.9% of text files hosted on GitHub.

While I don't have exhaustive benchmarks like last time (@arfon), nor is the module really written as it should be (it currently just monkey patches String), I believe it's at least 50% faster than Charlock (as its used in linguist) and returns far fewer errors, where just about anything that's not UTF-8 gives a  `'split': invalid byte sequence in UTF-8 (ArgumentError)`.

I've put the code for this in a [small gem](https://github.com/geoff-codes/charlotte). The implementation is [here](https://github.com/geoff-codes/charlotte/blob/master/lib/charlotte.rb). Let me know if the comments/code are unclear; I'd be happy elaborate. The repo also has a couple quick and dirty test scripts to compare against charlock and rchardet.

This PR isn't really meant to be merged as is — I've just quickly replaced ""charlock"" with ""charlotte"" to demonstrate. It works as-is, but I think a major refactor of blob_helper.rb, file_blob.rb, etc. would be in order if this idea were to be adopted. So perhaps it's more perhaps an idea for a topic branch?

Also, it would probably be wise to bring `linguist` in line with [github/lib/github/encoding.rb](https://github.com/github/github/blob/master/lib/github/encoding.rb),  [gist/lib/gists/encoding.rb](https://github.com/github/gist/blob/master/lib/gists/encoding.rb),  [gitrpc/lib/gitrpc/encoding.rb](https://github.com/github/gitrpc/blob/master/lib/gitrpc/encoding.rb), and kin. Although I don't believe that code is presently open source.

So maybe this is something to talk about on or sometime after Monday, @tmm1? :wink:

:octocat: — Geoff
",2149,True,en,0
1857,2,2,0,Externals,arfon,2014-12-10 21:48:41,10,10,2,0,,0,False,en,1
1852,2,14,0,Externals,pzi,2014-12-10 07:08:50,0,0,0,0,"Using a different SASS highlighter by @nathos: https://github.com/nathos/sass-textmate-bundle

[A highlighter example](https://lightshow.githubapp.com/?utf8=%E2%9C%93&scope=from-url&grammar_url=https%3A%2F%2Fraw.githubusercontent.com%2Fnathos%2Fsass-textmate-bundle%2Fmaster%2FSyntaxes%2FSass.tmLanguage&grammar_text=&code_source=from-text&code_url=&code=%40import+%22variables%22%2C+%22mixins%22%2C+%22fonts%22%0D%0A%0D%0A.testing-syntax-highlighting%0D%0A++font-size%3A+16px%0D%0A++width%3A+55px%0D%0A++height%3A+55px%0D%0A++display%3A+inline-block%0D%0A++h3%0D%0A++++font-size%3A+14px%0D%0A++++background-color%3A+%23000+%2F%2F+just+because%0D%0A++++color%3A+%23fff%0D%0A++++%26.something%0D%0A++++++background-repeat%3A+no-repeat%0D%0A++++.blurb+%26%0D%0A++++++position%3A+relative%0D%0A++++++z-index%3A+0%0D%0A++img%2C%0D%0A++video%2C%0D%0A++embed%2C%0D%0A++object%2C%0D%0A++.size-auto%2C%0D%0A++.size-full%2C%0D%0A++.size-large%2C%0D%0A++.size-medium%2C%0D%0A++.size-thumbnail%0D%0A++++height%3A+auto%0D%0A++++max-width%3A+100%25%0D%0A%0D%0A*%2C+body%2C+input%2C+button%2C+select%2C+textarea%0D%0A++-webkit-font-smoothing%3A+antialiased%0D%0A%0D%0Ah1%0D%0A++font-size%3A+%24base-fontsize+*+2%0D%0A%0D%0Ah2%0D%0A++font-size%3A+%24base-fontsize+*+1.5%0D%0A%0D%0Ah3%0D%0A++font-size%3A+%24base-fontsize+*+1.3%0D%0A%0D%0Ah4%0D%0A++font-size%3A+%24base-fontsize+*+1.3%0D%0A++font-weight%3A+normal%0D%0A++%2Bpie-clearfix%0D%0A%0D%0Ah5%2C+h6%0D%0A++font-size%3A+%24base-fontsize+*+1.1%0D%0A)

Compared to the highlighter that is used currently: [Highlighter example](https://lightshow.githubapp.com/?utf8=%E2%9C%93&scope=source.sass&grammar_url=https%3A%2F%2Fraw.githubusercontent.com%2Fnathos%2Fsass-textmate-bundle%2Fmaster%2FSyntaxes%2FSass.tmLanguage&grammar_text=&code_source=from-text&code_url=&code=%40import+%22variables%22%2C+%22mixins%22%2C+%22fonts%22%0D%0A%0D%0A.testing-syntax-highlighting%0D%0A++font-size%3A+16px%0D%0A++width%3A+55px%0D%0A++height%3A+55px%0D%0A++display%3A+inline-block%0D%0A++h3%0D%0A++++font-size%3A+14px%0D%0A++++background-color%3A+%23000+%2F%2F+just+because%0D%0A++++color%3A+%23fff%0D%0A++++%26.something%0D%0A++++++background-repeat%3A+no-repeat%0D%0A++++.blurb+%26%0D%0A++++++position%3A+relative%0D%0A++++++z-index%3A+0%0D%0A++img%2C%0D%0A++video%2C%0D%0A++embed%2C%0D%0A++object%2C%0D%0A++.size-auto%2C%0D%0A++.size-full%2C%0D%0A++.size-large%2C%0D%0A++.size-medium%2C%0D%0A++.size-thumbnail%0D%0A++++height%3A+auto%0D%0A++++max-width%3A+100%25%0D%0A%0D%0A*%2C+body%2C+input%2C+button%2C+select%2C+textarea%0D%0A++-webkit-font-smoothing%3A+antialiased%0D%0A%0D%0Ah1%0D%0A++font-size%3A+%24base-fontsize+*+2%0D%0A%0D%0Ah2%0D%0A++font-size%3A+%24base-fontsize+*+1.5%0D%0A%0D%0Ah3%0D%0A++font-size%3A+%24base-fontsize+*+1.3%0D%0A%0D%0Ah4%0D%0A++font-size%3A+%24base-fontsize+*+1.3%0D%0A++font-weight%3A+normal%0D%0A++%2Bpie-clearfix%0D%0A%0D%0Ah5%2C+h6%0D%0A++font-size%3A+%24base-fontsize+*+1.1%0D%0A).
",2942,True,en,0
1840,1,3,0,Externals,sandyarmstrong,2014-12-06 19:07:47,2,0,1,0,"Xamarin sketch files are interactive coding documents for C# and F#,
serialized as markdown files.

An example is available here: https://github.com/xamarin/sketches/blob/monodevelop-5.7-branch/Basics/basics.sketchcs
",217,False,en,0
1838,1,1,0,Externals,Grahack,2014-12-06 13:00:47,6,0,1,0,"It all started here: #1827.
I wanted to make things big with #1837 but had problems (still to be discussed over there).
Now I propose something simple, with a proper fork, clone, edit, test, PR… instead of a brutal web edit!
",227,False,en,0
1837,3,18,0,Externals,Grahack,2014-12-05 23:10:44,14,3,2,0,"No extension is specified.
Users must attach to these languages from their `.gitattributes` file.
",98,False,en,1
1830,1,12,0,Externals,larsbrinkhoff,2014-12-05 11:44:28,0,0,0,0,"In #1779, I tried to add samples for `.xml.fr` and `.html.fr`.  However, #1731 doesn't accommodate this, although that was probably the intent.

This tries to fix the bug.  New extensions and samples serve as test cases, but would also be nice to add.
",252,True,en,0
1829,5,9,0,Externals,pchaigno,2014-12-05 05:24:32,257,960,37,0,"This pull request adds, in `test/fixtures/`, a new special folder for data files (ie. files for which Linguist shouldn't find a language). It also adds a new test (pchaigno/linguist@7744428) to check that files in this folder don't have a language.

The second commit moves the folders `samples/Binary/` and `samples/Text/` into `test/fixtures/`.
Files in this folders were only used as test files, thus should be in `fixtures`.

This pull request will allow us to quickly add new tests for files that shouldn't be recognized by Linguist. It should help prevent bugs such as #1808.
",582,True,en,2
1828,2,10,0,Externals,pchaigno,2014-12-05 00:10:32,212,0,3,0,"This pull request adds support for Plan9 as discussed in #941.
[Many Plan9 files](https://github.com/search?utf8=%E2%9C%93&q=%22%2Fbin%2Frc%22&type=Code&ref=searchresults) can be found on GitHub. They don't have an extension but can be recognized by their extension.
",267,False,en,0
1827,1,14,0,Externals,Grahack,2014-12-04 20:27:19,8,0,1,0,"http://picolisp.com/
Thanks.
",29,False,it,0
1825,1,6,0,Externals,iggy,2014-12-04 17:37:59,12,0,2,0,"Add support for detecting the difference between scheme library source files
and SaltStack state files (which are technically YAML+Jinja).

Add languages entry and a disambiguation entry that should work in 99% of cases
(at least I can't think of a better way).
",262,False,en,0
1823,1,4,0,Externals,lsf37,2014-12-04 08:25:25,1112,0,2,0,"This pull request adds support for Isabelle ROOT files. The Isabelle theory language is already part of linguist, ROOT files are additional files with different syntax, somewhat like Makefiles with automatic dependency analysis.

Sample file is included. Usage on github is for every larger Isabelle project, for instance:
https://github.com/seL4/l4v/blob/master/proof/ROOT
https://github.com/seL4/l4v/blob/master/spec/ROOT
https://github.com/seL4/l4v/blob/master/tools/autocorres/ROOT
https://github.com/seL4/isabelle/blob/master/src/HOL/ROOT
https://github.com/seL4/isabelle/blob/master/src/FOL/ROOT
etc

Ambiguity: there seem to be plenty of lowercase ""root"" or ""Root"" files on github for different languages, but I couldn't find any all caps ""ROOT"" (the name is also not mentioned in other languages linguist knows about).
",827,True,en,0
1815,1,1,0,Externals,arfon,2014-12-03 13:53:35,16,0,1,0,"Not sure if we need to do this but thought this test might be a good housekeeping task.
",88,True,en,1
1811,1,0,0,Externals,arfon,2014-12-03 01:13:41,100,1,3,0,,0,False,en,1
1806,2,2,0,Externals,R4PaSs,2014-12-02 15:40:01,1183,7,4,0,"Since you guys changed the way you handle highlighting, here's the updated version for the Nit language !

Samples were already included in #1320, I included a few samples however since it has some stuff that was not covered by the old samples (triple-quoted strings, FFI)
",273,True,en,0
1801,1,5,0,Externals,kishore31,2014-12-01 05:38:07,1,0,1,0,"Ideally should have removed ColdFusion CFC but some of my projects are going to use CFC files only but dont want them to be listed under ColdFusion CFC would rather have them listed them under ColdFusion.
",205,True,en,0
1793,1,1,0,Externals,lsf37,2014-11-30 06:25:26,3,1,2,0,"This pull requests adds tmbundle for syntax highlighting of theory files of the Isabelle theorem prover.

The language is already recognised by linguist and has a sample file `/samples/Isabelle/HelloWorld.thy`. Used on github for instance in https://github.com/seL4/l4v or https://github.com/seL4/isabelle
",306,True,en,0
1786,250,7,2,Internals,bkeepers,2014-11-28 23:15:57,67604,2379,633,0,"It is no longer necessary.

/cc @arfon @pchaigno 
",50,True,en,0
1785,4,10,0,Externals,ghost,2014-11-28 22:48:11,0,0,0,0,"I thought Linguist was still using [Pygments](https://bitbucket.org/birkenfeld/pygments-main/), so I [went ahead and committed](https://bitbucket.org/birkenfeld/pygments-main/pull-request/422/add-fishshelllexer-class-to-support-the/diff) a `FishLexer` to the main repo @ BitBucket. Later found out Linguist uses Textmate grammars so I set out to write one for Fish. Fortunately, I found [this relic](https://github.com/l15n/fish-tmbundle), tested it with [LightShow](lightshow.githubapp.com/) and added the relevant references in this commit. 
",544,True,en,0
1784,8,5,0,Internals,bkeepers,2014-11-28 20:54:48,126,207,2,0,"Now that we're depending more on heuristics, I think we should make defining and testing them more explicit.

This adds `disambiguate` to define a new heuristic, passing in the name of the languages to disambiguate, and a block that returns either a definitive language or `nil`.

``` ruby
disambiguate ""Perl"", ""Prolog"" do |data|
  if data.include?(""use strict"")
    Language[""Perl""]
  elsif data.include?("":-"")
    Language[""Prolog""]
  end
end
```

The heuristics are tested by calling `assert_heuristics` and passing in a hash of language names and files, which will assert that the given files a detected properly.

``` ruby
  def test_pl_prolog_perl_by_heuristics
    assert_heuristics({
      ""Prolog"" => ""Prolog/turing.pl"",
      ""Perl"" => ""Perl/perl-test.t"",
    })
  end
```

Thoughts? @arfon @pchaigno 

Note that the side-by-side diff is probably more helpful on this PR.
",882,True,en,1
1783,12,2,0,Internals,bkeepers,2014-11-28 18:31:10,112,87,8,0,"This is based on #1663 and consolidates all the shebang logic into one place.
",78,True,en,3
1781,2,8,0,Externals,rpardee,2014-11-27 21:45:46,278,1,3,0,"I'd love to have SAS syntax-highlighted on github & believe these changes will accomplish that result.

Alas I could not test on my machine, as I'm on windows & could not get the charlock_holmes gem to install.
",211,True,en,0
1780,1,0,0,Externals,prajitdatta,2014-11-27 13:11:27,1,0,1,0,,0,False,en,0
1778,3,0,0,Externals,luismaqueda,2014-11-27 07:26:52,53,11,3,0,,0,False,en,0
1775,2,8,1,Externals,pchaigno,2014-11-26 20:50:55,49,22,6,0,"While working on the issue with UTF-8 encoding I came across [this comment](https://github.com/github/linguist/blob/master/lib/linguist/generated.rb#L6-L8):
(There is also a [TODO](https://github.com/github/linguist/blob/master/lib/linguist/generated.rb#L40) on this in the same file.)

``` ruby
class Generated
  # Public: Is the blob a generated file?
  #
  # name - String filename
  # data - String blob data. A block also maybe passed in for lazy
  #        loading. This behavior is deprecated and you should always
  #        pass in a String.
  #
  # Return true or false
  def self.generated?(name, data)
    new(name, data).generated?
  end
```

This pull request changes `blob_helper.rb` to give a string directly to `Generated.generated?`.
A few tests in `test_blob.test_generated` were relying on the fact that the files to test were not always read.
Thus, I had to add a new samples and remove a few tests:
- I removed the test on `project.pbxproj` because [it doesn't appear to be a XML file](https://github.com/search?q=xml+extension%3A.pbxproj&type=Code&utf8=%E2%9C%93) and I don't know what language it is, so I don't know where to put it.
- I removed the two tests for Godep because the samples would need to be in a `Godeps` folder in order to be detected as generated. This is not currently possible (maybe later with the `test/fixtures/` folder to come).

I'm not sure I did the right thing so I'd very like some more experienced :eyes: on this.
/cc @bkeepers @arfon 
",1490,False,en,1
1772,1,2,0,Externals,aroben,2014-11-26 16:08:17,1,1,2,0,"/cc @arfon @bkeepers 
",22,True,en,0
1763,1,2,0,Externals,sriharshachilakapati,2014-11-24 07:10:54,0,0,0,0,,0,False,en,0
1749,1,7,0,Externals,fnkr,2014-11-20 09:03:45,0,0,0,0,"http://www.chartjs.org
",23,True,en,0
1742,1,2,0,Externals,mgaitan,2014-11-18 23:17:58,3,0,1,0,"Codemirror is a very popular on the browser editor, bundle with many other projects. 
An example of a wrong detection due to codemirror is my project.  https://github.com/mgaitan/waliki
",186,False,en,0
1735,1,5,0,Internals,bkeepers,2014-11-18 00:48:17,1,0,14,0,"@arfon these were added in https://github.com/github/linguist/commit/cd99ab2d6eb3262a296cb8b55de616647376abd5. Is there a reason these were added?
",147,True,en,0
1729,1,3,0,Externals,arfon,2014-11-17 19:26:12,328,2,4,0,"This partially addresses an issue with the way the classifier handles (or rather doesn't) nested extensions.

[`test_presence`](https://github.com/github/linguist/blob/master/test/test_samples.rb#L58-L73) already checks that there are samples present for any non-unique file extension. Due to an inconsistency in the way we handle extensions in the classifier and the test suite this test doesn't fail for nested file extensions (such as `.pom.xml`).

This is short term fix for the current behaviour to reject nested extensions in `languages.yml` - another PR coming shortly to adapt the classifier to handle nested extensions properly.

/ cc @bkeepers @vmg  
",661,True,en,1
1716,1,5,0,Externals,arfon,2014-11-15 14:49:42,1,1,4,0,"This should fix #1712.

We're going from 1.19 -> 2.4.3 here which is a big jump. Things are green but I'd love a :+1: from folks who've worked with the binary checking stuff in Linguist before.

/ cc @adelcambre @bkeepers 
",223,True,en,0
1715,1,1,0,Externals,jokeofweek,2014-11-14 19:35:32,6,1,1,0,"Hi everyone,

Just thought I would add Promela (http://en.wikipedia.org/wiki/Promela) to the list. It's a pretty well-known model checking language.

Thanks!
",158,True,en,0
1713,1,7,0,Externals,oli-obk,2014-11-14 11:41:48,2,0,1,0,"the rust test-suite compiles all code examples in the documentation. Since some examples are not compilable, the docs often have {rust,ignore} as language for codeblocks. Syntax hilighting should still work for those docs
",222,True,en,0
1701,1,7,0,Externals,larsbrinkhoff,2014-11-12 06:47:39,0,0,0,0,"GitHub hosts at least 19000 files with the `.fr` extension.  They are currently detected as `Frege`, although a more correct number would be under 1000:
http://github.com/search?q=extension%3Afr+import

Most `.fr` files (18000) seem to be plain text in French:
http://github.com/search?q=extension%3Afr+le

However, more than 400 are actually in `Forth`:
http://github.com/search?q=extension%3Afr+dup

This pull request adds `.fr` as a Forth file extension, and an `asm.fr` sample.  The Bayesian classifier seem to do really well.  In the repositories below, there were only a handful of misclassifications.

Tested with:
http://github.com/Frege/frege
http://github.com/cataska/ficl
http://github.com/jamesbowman/forth-ans
http://github.com/andrewtron3000/embedded-ml
",768,False,en,0
1699,1,5,0,Externals,sappo,2014-11-11 17:50:14,0,0,0,0,,0,False,en,0
1697,3,7,3,Externals,sebgod,2014-11-11 15:32:04,0,3,1,0,"since #1184 wasn't merged and rebasing was too much work I recreated the patch.
",80,True,en,0
1693,2,5,0,Externals,xbony2,2014-11-09 02:12:47,0,0,0,0,"Orc is a small but simple concurrent, nondeterministic language made by Jayadev Misra at the University of Texas. More information can viewed here: http://orc.csres.utexas.edu Please let me know if I messed up on anything or if you need more information. 
",256,True,en,0
1679,3,0,0,Externals,logeswarir,2014-11-07 07:41:53,53,11,3,0,,0,False,en,0
1661,1,1,0,Externals,ScrimpyCat,2014-11-03 06:43:02,1,1,1,0,"Solution for issue https://github.com/github/linguist/issues/1656 

No accompanying tests, unsure what the best way to test this would be. Maybe the test could be setup by replacing Heuristics.find_by_heuristics with our test one, and setting up the Classifier with made up fixtures or something. And then just testing the correct language is returned. 

Code: Check if there is only one language returned by the heuristics, if so return that language (this behaves the same way it would in previous versions). If there are multiple filter out those which are not found in the possible language names array and use the classifier to determine which one it most likely is.
",672,True,en,0
1658,1,1,0,Internals,bkeepers,2014-11-02 19:54:05,24,20,2,0,"Suggested by @danijar in https://github.com/github/linguist/issues/1619, this considers all minified CSS and JS as vendored. I can't think of a use case where someone would want these to count toward language stats.

/cc @arfon?
",229,True,en,1
1637,11,7,0,Externals,keplersj,2014-10-27 04:30:21,0,0,0,0,"This should work. The syntax seems to be very Python-like. However, because it is a language for the JVM and is heavily influenced by Java there might be some snags with some of the language elements, like comments and variable declaration.

Reference Links:
- [Whiley Group on GitHub](https://github.com/Whiley/)
- [Whiley Compiler](https://github.com/Whiley/WhileyCompiler/)
- [Whiley Code Examples](https://github.com/Whiley/WhileyCompiler/tree/master/examples)
",465,True,en,0
1621,1,0,0,Externals,arfon,2014-10-21 22:48:50,1,0,1,0,,0,False,en,1
1617,1,3,0,Externals,pchaigno,2014-10-20 15:31:37,1,0,1,0,,0,False,en,0
1616,1,0,0,Externals,hearsilent,2014-10-19 21:04:04,66,0,1,0,,0,False,en,0
1615,3,10,0,Externals,rpavlick,2014-10-19 17:29:28,0,0,0,0,"Adding file extension and search term for NCL (NCAR command language) scripts
",78,True,en,0
1601,1,7,0,Externals,calebthompson,2014-10-16 18:55:10,1,0,1,0,"This is option 2. Opening a parallel pull request to not
`require 'linguist/repository'`.

This approach means that all 3rd party apps using Linguist but not needing to
work with repositories (including [html-pipeline](https://github.com/jch/html-pipeline/blob/master/lib/html/pipeline/syntax_highlight_filter.rb#L2))
also need to add a dependency on Rugged, which is unrelated to their goal.

The reason for this change is that a 3rd-party with ""require 'linguist'"" gets a
load error for Rugged being missing since it is required in linguist/repository.
",555,False,en,0
1600,1,2,0,Externals,calebthompson,2014-10-16 18:53:06,0,1,1,0,"linguist/repository depends on the Rugged gem, which isn't included in the
github-linguist dependencies.

Applications and libraries using linguist/repository can still use it by
manually calling `require 'linguist/repository'`

This is option 1. Opening a parallel pull request to add a Rugged dependency.

This is my preferred approach since it doesn't add a new dependency, but
strictly speaking it also means that we need to bump the major version since
Linguist::Repository is no longer defined.

The reason for this change is that a 3rd-party with ""require 'linguist'"" gets a
load error for Rugged being missing since it is required in linguist/repository.
",663,False,en,0
1597,1,0,0,Externals,arfon,2014-10-15 22:13:58,4,0,1,0,,0,False,en,1
1589,4,0,0,Externals,arfon,2014-10-14 00:55:10,32,1,4,0,,0,False,en,0
1585,1,6,0,Externals,palewar,2014-10-13 06:11:51,0,0,0,0,"playground file extension should also be treated as Swift Code with Gists along with .swift extension. I see playground files to be shared more with gists rather than swift files, which probably will be shared more as regular repos.
",233,True,en,0
1582,3,0,0,Externals,Jonnylim1437,2014-10-12 03:17:09,8,0,2,0,,0,False,en,0
1567,1,1,0,Externals,yoosefi,2014-10-01 00:33:07,0,0,0,0,,0,False,en,0
1565,1,8,0,Externals,Raynos,2014-09-30 18:05:49,201,0,4,0,"JSig is a type documentation format for JavaScript (
  https://github.com/jden/jsig ). It can be considered
  somethign similar to typescript definition files or
  to jsdoc.

The documentation format would be a lot nicer to read
  if it had syntax highlighting. Rather then adding
  a full jsig lexer, i've set the lexer to OCaml as its
  a close approximation.

You can find examples of jsig in the wild here:
- https://github.com/Raynos/dom-delegator/blob/master/docs.mli#L1
- https://github.com/jden/node-random-revisitor#randomrevisitor--functionerror-serviceurlstring--void
- https://github.com/Matt-Esch/virtual-dom/blob/master/docs.mli#L1
- https://github.com/grncdr/node-any-db-transaction#apix

Let me know if I can do anything to make this PR easier
  to review or merge!
",782,False,en,0
1562,5,9,0,Externals,Tyilo,2014-09-27 18:00:27,205,0,4,0,"As can be seen on http://iphonedevwiki.net/index.php/Logos Logos uses the extensions `.x`, `.xm`, `.xi` and `.xmi`:

![screenshot](http://i.imgur.com/ujlpnAP.png)
",163,True,en,0
1551,1,6,0,Externals,twopoint718,2014-09-23 00:08:10,29,0,4,0,"StringTemplate templates get identified as ""Smalltalk"" files. This should fix that. I simply added a heuristic that looks for the `self` keyword that seems to be common in Smalltalk.
",183,True,en,1
1544,3,2,0,Externals,mollycr,2014-09-19 05:31:04,53,11,3,0,,0,False,en,0
1541,3,1,0,Externals,fingolfin,2014-09-17 16:47:42,0,0,0,0,"This is an alternative to my PR #1523 which avoids extending the heuristics API with the filename extension.

This solution is strictly inferior. but if the linguist team is opposed to giving the heuristics code more information, then this is better than nothing. 
",265,True,en,0
1532,3,0,0,Externals,arfon,2014-09-15 17:06:44,128,275,2,0,,0,False,en,0
1531,1,0,0,Externals,arfon,2014-09-15 16:20:43,125,274,1,0,,0,False,en,0
1527,1,3,1,Externals,fingolfin,2014-09-15 11:41:17,0,0,0,0,"This change modifies the command line interface of linguist to accept more than one argument. It simply loops over the arguments and treats them individually. In combination with e.g. `find` and `xargs`, this makes it very convenient to e.g. check all files matching a certain pattern inside a given repository. And much more efficient: Invoking `bundle exec linguist FILENAME` on my machine takes 2 (!) seconds (despite my SSD). Invoking it on a dozen files takes about the same time...

This is a very simple hack, and I won't be surprised if you'll want refinements before accepting it (if at all), but it was enough to scratch an itch of mine (namely testing only the .tst files in a big repo, see PR #1523), and I thought perhaps others might benefit from it.

I am not quite happy with it myself; e.g. I think --breakdown should only be accepted once, and as first parameter (but that change would have been incompatible with current behaviour). On the other hand, it should accept any previously valid invocation. 

<!-- Reviewable:start -->

[<img src=""https://reviewable.io/review_button.png"" height=40 alt=""Review on Reviewable""/>](https://reviewable.io/reviews/github/linguist/1527)

<!-- Reviewable:end -->
",1219,True,en,0
1521,62,0,0,Externals,arfon,2014-09-12 21:47:36,68,0,4,0,,0,False,en,0
1505,2,0,0,Externals,arfon,2014-09-04 21:14:45,1,1,1,0,,0,False,en,0
1498,1,23,3,Externals,arfon,2014-09-02 03:40:32,131,2,7,0,"This is pretty rough but `Linguist::Overrides` reads a `.linguist` file (composed of regular expressions and commands) and uses this to both ignore files but also override the language identification.

One major thing to be addressed is that currently Linguist picks up _it's own_ `.linguist` file rather than one for a target test repo/directory.

Some :eyes: on this, especially from @bkeepers would be :sparkles: 
",417,True,en,2
1497,1,2,0,Externals,activars,2014-09-01 20:33:35,3,0,1,0,"Minified CSS and JavaScript are most likely to be double counted in the project; they should be treated as ""binary"" like file.
",127,True,en,0
1492,1,3,0,Externals,mxswd,2014-08-30 11:50:24,0,0,0,0,,0,False,en,0
1491,1,3,0,Externals,pmkary,2014-08-30 11:11:57,0,0,0,0,,0,False,en,0
1490,1,1,0,Externals,pmkary,2014-08-30 10:42:32,0,0,0,0,"File detection for Arendelle Language files.
The language is new so a file detection for GitHub was needed.

> This is the second pull request I'm sending, Sorry for that I acidently sent you the color of the langauge as ffa500 but it's ef2929, So sorry anyway!
",262,False,en,0
1489,1,0,0,Externals,pmkary,2014-08-30 10:33:31,0,0,0,0,"I added this Arendelle code detection so GitHub won't detect the langauage wrong, Hope you accept the request.
",111,True,en,0
1479,1,5,0,Externals,kaendfinger,2014-08-26 00:00:10,0,0,0,0,"This ignores the example directory which is used in Dart for demos, and other such things, which are not the actual code.
",122,True,en,0
1473,1,10,0,Externals,mjjohnson,2014-08-20 17:46:50,759,74,6,0,"Google Apps Script is currently detected as Gosu, so I'm adding it in to try to improve detection. It's just JavaScript, but with a different file extension and access to some Google-provided libraries.

For in-the-wild examples, just about any result from [this search](https://github.com/search?utf8=%E2%9C%93&q=.gs&type=Repositories&ref=advsearch&l=Gosu) will bring up Google Apps Script examples that have been categorized as Gosu.  For specific examples, see [zipabox-gs-connector](https://github.com/ntrinh/zipabox-gs-connector), [cartos-gs](https://github.com/madtrick/cartos-gs), and [google-spreadsheet-to-RJM](https://github.com/smcavinney/google-spreadsheet-to-RJM).
",678,True,en,0
1467,1,5,0,Externals,skyhacker2,2014-08-18 16:11:37,3,0,1,0,"Add Cocos2d-x lua excluded directory.
",38,True,en,0
1462,1,1,0,Externals,joeyspin,2014-08-14 19:34:50,234,0,1,0,"A sample LabVIEW project (.lvproj)
",35,True,pl,0
1454,1,0,0,Externals,haneefmubarak,2014-08-12 20:49:57,1,2,1,0,"with the simplest method possible (pun intended)
",49,True,en,0
1447,2,4,0,Externals,jwatzman,2014-08-06 23:05:21,1198,0,31,0,"Add detection for [Hack](http://hacklang.org) files. The "".hh"" file extension should be pretty uncontroversial. Supporting "".php"" vs "".hh"" properly requires heuristics.rb.
",172,True,en,0
1446,3,6,0,Externals,cdlm,2014-08-06 20:37:05,58603,57066,7,0,"An active repo using it and erroneously classified as C#:
    https://github.com/pharo-project/pharo-update

Updated `samples.json` not included because of the noise it would add to the
commit.
",194,False,en,0
1443,3,9,2,Externals,ghost,2014-08-05 21:32:57,0,0,0,0,"This is a
- redo of github/linguist#942
- redo of github/linguist#943 (see comments there for details)

with updated LSL syntax for SL server version 14.07.18.292162.
",167,False,en,1
1442,5,0,0,Internals,bkeepers,2014-08-05 17:21:22,2390,9,7,0,"#417 improves vendored file detecting & detect twitter bootstrap files. This just merges in master and fixes the merge conflict.
",129,True,en,1
1435,4,6,0,Externals,maor,2014-08-02 23:25:40,6,0,1,0,"I've noticed a few cases where there are some GitHub projects that are everything but JS, but because they use Grunt then GitHub marks the project as JS. I think this can be useful.

Not sure if I made the change in the best location, but I hope my point is made : )
",267,True,en,0
1430,1,2,0,Externals,myguidingstar-zz,2014-08-01 01:30:34,1,0,1,0,"https://github.com/jreese/markdown-pp
",38,True,en,0
1428,1,1,0,Externals,dlebauer,2014-07-31 16:54:00,2,2,1,0,"(discussed in gh-1042 and commit f66ffe305fa539369a2a95c12cf3c91532a2d489)

Currently, vendor/yml ignores files in  '- ^inst/extdata', (line 212)

But the `^` requires these be in the top level directory, and was added in commit f66ffe305fa539369a2a95c12cf3c91532a2d489

I propose removing this requirement so that it works on subdirectories, as in this repository containing a large number of R packages at different levels of heirarchy. 

I assume that the proposed file change do what I want, w
",498,True,en,0
1423,1,2,0,Externals,nexneo,2014-07-30 06:44:17,0,0,0,0,"js/libs/ is another common pattern for JS vendor path. I feel it should be included.
",85,True,en,0
1407,2,3,0,Externals,c1phr,2014-07-25 20:32:11,4,0,1,0,"Ignore [Bourbon SCSS](http://bourbon.io) mixin library. When this goes un-ignored, projects tend to have an extremely high percentage of CSS listed as the language used due to the sheer amount of it in the library itself. This is erroneous because the project developer(s) almost never touch this much CSS, and normal web development projects shouldn't be labeled as CSS projects just because they use the library alone.
",421,True,en,0
1406,3,15,0,Externals,serg-kovalev,2014-07-25 07:41:00,9,0,2,0,"Hi

I have updated vendor.yml file for Rails project. Linguist will ignore assets dir and will detect the language correctly.
I have updated test_blob.rb
I have tested linguist locally. Works great and now detects the language correctly (there are a lot of javascripts files in my assets folders and before this fix Linguist detected language as JavaScript, not Ruby)

Before commit I run test:
bundle exec rake test
# Running tests:

Finished tests in 26.923862s, 3.7885 tests/s, 218.0965 assertions/s.  
102 tests, 5872 assertions, 0 failures, 0 errors, 0 skips
ruby -v: ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]

![linguist1](https://cloud.githubusercontent.com/assets/2852169/3699108/9ce96f74-13ce-11e4-8891-37c592a91ac9.JPG)

Thanks,
Siarhei Kavaliou
",771,True,en,1
1404,1,2,0,Externals,pchaigno,2014-07-24 13:14:11,147,2,2,0,"An attempt to add support for the Clojure framework Hoplon was made in #854. Except Linguist doesn't support file extension with multiple segments (see #1388).
I removed the two lines and added support only for `.hl` in Clojure (strangely the classifier Bayesian wasn't able to distinguish `.cljs.hl` and `.html.hl` files).
It means that for the time being (and until we can add some heuristics on this), every `.hl` files will be recognized as Clojure. I made a few searches and there seems to be few `.html.hl` compared to the `.cljs.hl` on GitHub. Thus, I think it still improves the situation (since `.hl` aren't recognized at all currently).
",647,False,en,0
1397,4,6,0,Externals,reedoolang,2014-07-21 12:49:56,13,0,2,0,,0,False,en,0
1393,1,0,0,Externals,grindhold,2014-07-20 06:39:33,0,0,0,0,"This should provide basic capabilities for linguist to recognize EmberScript  ( http://emberscript.com ).

EmberScript itself is a CoffeeScript-based language that has been built to write applications in the EmberJS Framework ( http://emberjs.com )

Would love to  see it in github.
",283,True,en,0
1392,1,0,0,Externals,arfon,2014-07-19 01:41:17,1,1,1,0,,0,False,en,0
1387,2,13,0,Externals,joeyspin,2014-07-16 19:36:52,13,0,1,0,"Added LabVIEW according to issue #1386 https://github.com/github/linguist/issues/1386

Will add samples momentarily.
",117,True,en,0
1384,4,0,0,Externals,arfon,2014-07-15 18:55:58,4,3,3,0,,0,False,en,1
1382,1,5,0,Externals,crucialfelix,2014-07-15 08:52:00,1,0,1,0,".sc is class files, .scd are documents

reference: https://github.com/supercollider/language-supercollider/blob/master/grammars/supercollider.cson
",147,True,en,0
1381,6,7,0,Externals,Z-Shang,2014-07-15 07:04:27,19,0,2,0,"LoLi is a lisp dialect, project home: github.com/LoLi-Lang/LoLi
",64,True,en,0
1380,2,7,0,Externals,Colton,2014-07-13 19:07:05,0,0,0,0,"I also added a sample file in the /samples/Applescript directory.
",66,True,en,0
1379,1,2,0,Externals,Colton,2014-07-13 18:51:13,0,0,0,0,"I recently realized that .workflow files aren't recognized by Linguist and I think they need to be :D
",102,True,en,0
1378,1,3,0,Externals,mkrautz,2014-07-13 15:45:38,55207,55162,6,0,"Hi,

Since shortly after the release of TypeScript, the main Mumble repository (https://github.com/mumble-voip/mumble) has been detected as mostly TypeScript code by linguist. But It's not TypeScript. It's Qt-style C++.

I've gotten tired of seeing that in our repo header, and took a stab at fixing it.

The actual changes I've done are:
- Added `.ts` as a file extension for XML in `languages.yml` (this is in addition to the `.ts` file extension for TypeScript, which is already in the list)
- Copied the Qt translation file at `samples/XML/pt_BR.xml` file to `samples/XML/pt_BR.ts`.
- Ran `bundle exec rake tests`

After doing this, I had an issue where the sample file at `samples/TypeScript/empty.ts` would be misdetected/undetected.

This was because of https://github.com/mkrautz/linguist/compare/fix-qt-ts-detection?expand=1#diff-5565bb45d402d49dbf0d584129df265dL128 - which returns nil for empty files.  I fixed that by removing the empty-check.

Once the empty file was able to be detected as _something_, it would be detected as XML by the classifier (lib/linguist/classifier.rb), causing two tests to fail:

```
test_language(TestBlob) [/home/mkrautz/linguist/test/test_blob.rb:437]:
TypeScript/empty.ts.
<""TypeScript""> expected but was
<""XML"">.
```

This is obviously because the `empty.ts` file in the TypeScript directory was detected as XML by lib/linguist/classifier.rb.

The other failing test was test_classifier.rb:

```
test_classify_ambiguous_languages(TestClassifier) [/home/mkrautz/linguist/test/test_classifier.rb:63]:
/home/mkrautz/linguist/samples/TypeScript/empty.ts
[[""XML"", -4.060443010546419], [""TypeScript"", -5.66988092298052]].
<""TypeScript""> expected but was
<""XML"">.
```

The test_blob.rb failure, I was able to ""fix"" by enabling the heuristic module by:
- Setting ACTIVE to true
- Fixing the `find_by_heuristics` method to correctly return the results of the calls to the `disambiguate_...` methods by making the subsequent `if` statements in `find_by_heuristics` into `elsif`s.

This causes the `samples/TypeScript/empty.ts` file to correctly identified as TypeScript. (At least, I think it makes sense to have an empty .ts file be identified as TypeScript over identifying it as XML -- and the old? heuristics code seems to agree with that thought.)

At this point, the test_classifier.rb failure was still present.  In this changeset, I've silenced the failure by skipping the test if the sample file ends with ""`empty.ts`"".

Now, this is obviously not something you can ship (I think?).  But I'm hoping that this PR can get the ball rolling on getting a cleaner fix. So: take the contents of this PR with a grain of salt. It's just there to get the discussion for a proper fix started, and to better identify (via code/patches) the problems I've faced in ""fixing"" this issue.

I'm happy to implement any suggested fixes, if needed.

Thanks for the consideration!
",2904,True,en,1
1377,1,1,0,Externals,mkrautz,2014-07-13 14:21:35,1,0,1,0,"I'd be happy if '3rdparty' was recognized as a directory for vendored libs/sources.

It's the convention we use in our various repos on https://github.com/mumble-voip, such as:

https://github.com/mumble-voip/mumble/tree/master/3rdparty
https://github.com/mumble-voip/libmumble/tree/master/3rdparty
https://github.com/mumble-voip/mumblekit/tree/master/3rdparty

It's also the convention used by Qt:

https://github.com/mumble-voip/mumble-developers-qt/tree/4.8-mumble/src/3rdparty

It's very bad on the 'libmumble' repo: https://github.com/mumble-voip/libmumble/tree/master/3rdparty
In that source tree, we have pre-generated OpenSSL assembly files for various OS/arch combinations living in 3rdparty/opensslbuild/asm (https://github.com/mumble-voip/libmumble/tree/master/3rdparty/opensslbuild/asm).
This causes linguist to detect the repo as ""82.95% Assembly"".

Thanks for the consideration!
",893,True,en,0
1363,1,0,0,Externals,dasmithii,2014-07-08 04:32:20,0,0,0,0,,0,False,en,0
1362,3,0,0,Externals,dasmithii,2014-07-08 03:58:14,0,0,0,0,,0,False,en,0
1359,23,1,0,Externals,arfon,2014-07-07 17:57:09,154,13,5,0,"Starting work on benchmarking task.
",36,True,en,0
1351,1,4,0,Internals,vmg,2014-07-04 13:25:01,1,0,1,0,"This was breaking include files for PHP and listing them as Assembly.

cc @arfon 
",82,True,en,0
1343,4,13,0,Externals,jacobbednarz,2014-07-03 00:33:28,3,1,1,0,"Drupal uses the .inc, .module and .install file extensions and it is currently
not recongised by GitHub as being a PHP based file.
",131,False,en,0
1342,1,3,0,Externals,arfon,2014-07-02 21:47:47,3,0,1,0,"Right now it's kinda hard to test local changes as the require statements in `bin/linguist` pick up the installed gem first so testing changes can be a pain.

There may be a better way to do this - modifying `$LOAD_PATH` felt a bit weird.

/ cc @tnm @josh for some Ruby prowess.
",279,True,en,0
1326,2,2,1,Externals,euclio,2014-06-29 07:46:58,3,0,1,0,"Closes #1274.
",14,True,en,0
1317,1,3,0,Externals,christopherbasinger,2014-06-25 15:49:14,0,0,0,0,"I'm just trying to get the language statistics to show up on several of my repos. They are not being incorrectly reported. However they are not being reported at all. I apologize if I did not follow your proper protocol. I am new and I think I am doing what you you asked. Thnaks in advance.
",292,True,en,1
1316,1,4,0,Externals,pchaigno,2014-06-25 13:08:29,3,3,2,0,"This PR follows #1313.
It appears that the change made in #1313 wasn't sufficient.
This PR contains three others `sort!` instructions (for the files inside the language directories and for the tokens).

This time I checked using several system that the `samples.json` doesn't change from one generation to the other. @arfon If this works, if you regenerate the `samples.json` file after this PR, it shouldn't change at all.
",424,False,en,0
1312,1,0,0,Externals,arfon,2014-06-23 22:13:39,1,1,1,0,,0,False,en,0
1304,8,9,0,Externals,pchaigno,2014-06-22 13:46:57,112,0,5,0,"This PR adds supports for SaltStack states files (with a `.sls` extension) as asked in #960.

I tested on [saltstack/salt-states](https://github.com/saltstack/salt-states) and [coffeestats/coffeestats-django](https://github.com/coffeestats/coffeestats-django). The detection isn't perfect but it's better than before (those files were detected as Scheme).
@arfon I guess we'll have to wait for the test system to merge this :-)

EDIT: Also fixes the issue with this repo: [uggedal/states](https://github.com/uggedal/states).
",525,True,en,0
1300,1,1,0,Externals,eda-globetrotter,2014-06-22 03:29:44,1,1,1,0,"See https://bitbucket.org/birkenfeld/pygments-main/issue/491/verilog-lexer for the Verilog and SystemVerilog lexer.
",116,True,en,0
1296,5,0,0,Externals,arfon,2014-06-20 11:54:44,2385,9,6,0,,0,False,en,0
1288,2,2,0,Externals,lefticus,2014-06-19 23:52:47,67846,67791,4,0,"This branch adds support for ChaiScript

ChaiScript is hosted on Github, and the test files can be found
at https://github.com/ChaiScript/ChaiScript/tree/master/unittests
",171,True,en,1
1287,0,0,0,Externals,lefticus,2014-06-19 16:49:30,0,0,0,0,"ChaiScript is hosted on Github, and the test files can be found
at https://github.com/ChaiScript/ChaiScript/tree/master/unittests
",130,False,en,0
1284,1,3,0,Externals,dasmithii,2014-06-19 02:08:00,0,0,0,0,"Nothing major here - just opted against full capitalization.

<3
",65,True,en,0
1278,1,0,0,Externals,Acidburn0zzz,2014-06-16 07:25:49,1,1,1,0,,0,False,en,0
1252,1,1,0,Externals,ExaBerries,2014-06-04 19:29:11,0,0,0,0,"I gave html a bright green color (00ff2d)
",42,True,en,0
1242,4,0,0,Externals,hoelzro,2014-06-03 02:58:08,71508,65493,21,0,"Add some more Perl 6 examples so the classifier does a better job.
",67,True,en,0
1233,5,2,0,Externals,pchaigno,2014-06-01 18:52:11,68053,66505,6,0,"This PR fixes the problem reported in #1185.
One of the PHP sample files had the extension `.modulo` thus making this extension a PHP extension for linguist. I changed it to `.script!`.

The second commit adds the detection based on the shebang for files with an unknown extension (ie. an extension which is not in `languages.json`).
",334,False,en,2
1231,1,5,0,Externals,jknechtel,2014-06-01 13:41:09,0,0,0,0,"Exclude experimental data; exp/ and subdirs
",44,True,en,0
1199,1,5,0,Externals,Lockhead,2014-05-16 19:02:40,0,0,0,0,"Cheat Engine is a live memory editor, mainly used to cheat in games, but it's also handy tool to live edit data structures in running programs, to debug and or test them.
",171,True,en,0
1184,24,0,0,Externals,sebgod,2014-05-09 19:44:48,0,0,0,0,"after merging master for the hundredth time, made a mistake so closing #1107 in favour for this new pull request.
",114,True,en,1
1181,1,1,0,Externals,tdeitch,2014-05-08 20:43:00,203,4,5,0,"Cool is the [Classroom Object-Oriented Language](https://en.wikipedia.org/wiki/Cool_%28programming_language%29), a language used in compilers courses at Stanford, Berkeley, UIUC, U.Va., Coursera, and elsewhere. Many of these projects show up [on GitHub](https://github.com/search?p=1&q=cool+compiler&ref=searchresults&type=Repositories), and given that the language is often used in class projects, there are likely far more private repositories containing Cool code than there are public ones.

This change includes a brief sample program I wrote to illustrate many of Cool's language constructs, as well as a simple rule to distinguish Cool files from Common Lisp or OpenCL (it has a line that starts with the word 'class'). Further, it includes a second example program adapted from an example contained in the Cool distribution (list.cl), which contains a few further language constructs and captures the style of a Cool program.
",934,True,en,0
1179,3,0,0,Externals,android-armv7a-belalang-tempur,2014-05-08 12:30:17,53,11,3,0,,0,False,en,0
1175,2,15,2,Internals,bkeepers,2014-05-06 14:22:51,5,1,1,0,"This simplifies `#language` and ensures that it always returns nil if the blob is binary. I couldn't reproduce a test case that exposes the issue in #936, but it does fix the detection for that repository. I would love suggestions for a test case to reproduce it.

Before:

```
88.63%  Eiffel
7.69%   C++
1.78%   C
1.13%   Python
0.37%   TeX
0.29%   CSS
0.09%   FORTRAN
0.01%   Objective-C
0.01%   Shell
0.00%   JavaScript
0.00%   Matlab
```

After:

```
67.63%  C++
15.63%  C
9.95%   Python
3.27%   TeX
2.56%   CSS
0.78%   FORTRAN
0.06%   Objective-C
0.05%   Shell
0.04%   JavaScript
0.02%   Matlab
```

Closes #1118 
Closes #936
Closes #1119 

/cc @arfon @tnm @rick @permcody @pchaigno
",688,True,en,0
1174,1,6,0,Externals,ikari-pl,2014-05-06 07:26:26,0,0,0,0,"To avoid the documentation being detected as the main project part/language
",76,True,en,0
1164,3,1,0,Externals,ghost,2014-05-03 23:18:33,4,4,2,0,"My repository is recognized with XSLT language. Can you add an exception to this path: ""XSLT""?
",95,True,en,1
1157,1,0,0,Externals,vincentmayers,2014-05-01 19:59:22,5,0,1,0,"just adding license text to the README
",39,True,en,0
1140,1,7,0,Externals,Xe,2014-04-27 15:11:51,0,0,0,0,,0,False,en,0
1137,1,0,0,Externals,hunterwayne7,2014-04-27 02:35:49,1,0,1,0,"Bbnnnn later going to
",22,True,en,0
1128,1,1,0,Externals,pchaigno,2014-04-25 11:54:26,62926,62614,6,0,"This pull request adds the support of the .pp file extension for Pascal as requested in #297.
The original request was for Delphi but there is no distinction between Pascal and Delphi at the moment.

.pp is also the file extension of Puppet files.
Thus, I added sample files for both Puppet and Pascal with the .pp extension.

EDIT: I tested it on the repository from the original request: [tristan2468/PDFPrint](https://github.com/tristan2468/PDFPrint).
",455,False,en,0
1126,3,12,0,Externals,paulcbetts,2014-04-25 07:58:08,4,4,2,0,"Literally the entire Internet thinks these colors are too much:

https://twitter.com/passy/status/459364845830152193
https://twitter.com/chr_montgomery/status/459344416713744384
https://twitter.com/stev4niTy/status/459330521768534017
https://twitter.com/esorribas/status/459235930118029313
https://twitter.com/ThomSeddon/status/459235150917033984
https://twitter.com/wlaurance/status/459104364129710080
https://twitter.com/danielstjules/status/459084348977721344
https://twitter.com/engrishsmitelli/status/459077518176563200
https://twitter.com/smitelli/status/459077305655365633
",580,True,en,1
1119,2,1,0,Internals,bkeepers,2014-04-24 15:31:51,23,3,1,0,"This is a work in progress to fix #1118.  There are currently 10 sample files currently identified as binary.

```
[157/709] TestSamples#test_/Users/brandon/github/linguist/samples/Cuda/vectorAdd.cu_not_binary = 0.00 s                                              
  1) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/Cuda/vectorAdd.cu_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/Cuda/vectorAdd.cu is a binary file

[446/709] TestSamples#test_/Users/brandon/github/linguist/samples/Nimrod/foo.nim_not_binary = 0.00 s                                       
  2) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/Nimrod/foo.nim_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/Nimrod/foo.nim is a binary file

[575/709] TestSamples#test_/Users/brandon/github/linguist/samples/SQL/AvailableInSearchSel.prc_not_binary = 0.00 s                    
  3) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/SQL/AvailableInSearchSel.prc_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/SQL/AvailableInSearchSel.prc is a binary file

[584/709] TestSamples#test_/Users/brandon/github/linguist/samples/Scala/node11.sc_not_binary = 0.00 s                         
  4) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/Scala/node11.sc_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/Scala/node11.sc is a binary file

[587/709] TestSamples#test_/Users/brandon/github/linguist/samples/Scheme/asteroids.sps_not_binary = 0.00 s       
  5) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/Scheme/asteroids.sps_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/Scheme/asteroids.sps is a binary file

[638/709] TestSamples#test_/Users/brandon/github/linguist/samples/Standard ML/Foo.sig_not_binary = 0.00 s                        
  6) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/Standard ML/Foo.sig_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/Standard ML/Foo.sig is a binary file

[662/709] TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/classes.ts_not_binary = 0.00 s                         
  7) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/classes.ts_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/TypeScript/classes.ts is a binary file

[663/709] TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/empty.ts_not_binary = 0.00 s          
  8) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/empty.ts_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/TypeScript/empty.ts is a binary file

[664/709] TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/hello.ts_not_binary = 0.00 s        
  9) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/TypeScript/hello.ts_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/TypeScript/hello.ts is a binary file

[695/709] TestSamples#test_/Users/brandon/github/linguist/samples/XSLT/test.xslt_not_binary = 0.00 s                       
 10) Failure:
TestSamples#test_/Users/brandon/github/linguist/samples/XSLT/test.xslt_not_binary [test/test_samples.rb:60]:
/Users/brandon/github/linguist/samples/XSLT/test.xslt is a binary file
```

/cc @pchaigno @brianmario @arfon @rick
",3483,True,en,1
1117,1,2,0,Externals,pchaigno,2014-04-24 08:42:00,61991,61379,7,0,"This pull request has been asked for in #693 and #449.
It adds support for the .st file extension which is used for StringTemplate HTML files.
.st files are currently recognized as SmallTalk.
Because the two languages are very different, the bayesian classifier seems to be able to distinguish them.

EDIT: I tested it on [9peppe/peppelab](https://github.com/9peppe/peppelab) which is currently incorrectly identified as 39.5% SmallTalk.
",438,False,en,1
1115,56,0,0,Externals,sebgod,2014-04-23 21:13:10,0,0,0,0,"The turing.pl Prolog example was prefixed with `-` on each line, removed.
Added some basic Prolog files to ease the Bayesian analyser. Does not clash with the Perl examples.
And honestly, Perl is syntactically rather different than Prolog, hence it _shouldn't_ be a problem.
",275,False,en,2
1111,2,6,0,Externals,jemc,2014-04-23 03:53:34,6,0,1,0,"https://github.com/jemc/myco
",29,True,en,0
1107,25,0,0,Externals,sebgod,2014-04-22 15:39:30,0,0,0,0,"This patch refines the previous `Mercury/` `vendor.yml` entry,
which also matched the `samples/Mercury/` directory.
FYI, the Mercury/ comprises all the intermediate compilation targets of the various Mercury compiler backends
",226,False,en,1
1078,1,3,0,Externals,wcandillon,2014-04-20 14:41:33,6,0,1,0,"See http://jsoniq.org
",22,True,en,0
1070,1,2,0,Externals,frank-dspeed,2014-04-16 15:15:07,0,2,1,0,"Removed Dockerfile assosiation as Shell script it isn't one its a Vendor for File it gets Build it wouldn't even run executed as alone

see! my pull request https://github.com/github/linguist/pull/1069
",202,True,en,0
1069,2,5,0,Externals,frank-dspeed,2014-04-16 04:20:15,3,2,2,0,"for http://Docker.io containers
",32,True,en,0
1065,1,4,0,Externals,bkeyoumarsi,2014-04-14 06:48:20,0,0,0,0,"Since a lot of .js and .css files are used in the main static folder of a django project, I believe a static/ folder ignore is required to avoid the project as being detected as a Javascript project.

I added the static folder ignore under Django project to avoid Django apps from being labeled a Javascript project. Could you please merge the changes.
",353,True,en,0
1064,1,2,0,Externals,bkeyoumarsi,2014-04-14 06:42:20,0,0,0,0,"Since a lot of .js and .css files are used in the main static folder of a django project, I believe a static/ folder ignore is required to avoid the project as being detected as a Javascript project.
",200,True,en,0
1053,1,2,0,Externals,prasannavl,2014-04-07 06:36:16,1,0,1,0,"Add PostBuildScripts folder which the commonly used convention for adding PowerShellScripts post-build.

Note: This solves .NET projects being mistaken as Powershell projects.
",176,True,en,0
1045,1,1,0,Externals,Ocramius,2014-04-04 23:46:46,1,1,1,0,"Just converted #1044 into a PR
",31,True,en,0
1038,1,4,0,Externals,Jille,2014-04-02 21:17:09,3,0,1,0,,0,False,en,0
1036,24,20,0,Externals,DX-MON,2014-04-02 12:11:18,69356,67242,14,0,"These commits fix the worst of the miss-detections people have been having with Obj-C, C++ and C code - particularly headers.
",126,True,en,1
1033,2,11,1,Externals,ScrimpyCat,2014-03-31 23:21:18,54,0,2,0,"Check if data contains common things found in Obj-C. If it is then also do
some additional checks to make sure it's not possibly Matlab or M. If it is
just add them as a precaution.

This is a solution for https://github.com/github/linguist/issues/1025
",253,False,en,1
1030,1,1,0,Externals,developerinlondon,2014-03-30 02:28:00,40512,39962,4,0,"... stamp
",10,True,et,1
1027,1,15,0,Externals,ScrimpyCat,2014-03-29 04:07:04,5,1,2,0,"This is a solution to https://github.com/github/linguist/issues/1025

The new number literal matching regex will skip hexadecimal and C style literals. It is not perfect, but to keep it simple I didn't worry about it.
",218,True,en,1
1023,1,12,0,Externals,Shoelace,2014-03-27 19:15:17,0,0,0,0,"this pull request will add support for a .linguistingore.yml file allowing per project customisations to be ignored from language statistics
",141,True,en,1
1018,1,1,0,Externals,RyanNielson,2014-03-25 21:20:43,0,0,0,0,"This adds support for GameMaker project detection using .gml and .gmx files.
",77,True,en,0
1017,1,3,0,Externals,AndrewRose,2014-03-25 20:29:07,0,0,0,0,"Added .wxphp for PHP scripts using the wxPHP wxWidgets extension, see: www.wxphp.org  Github example: https://github.com/AndrewRose/Grease/blob/master/grease.wxphp
",164,True,en,0
1015,1,13,0,Externals,derekprior,2014-03-25 02:57:59,1,5,2,0,"Changes to this file are important and should be reviewed as a matter of
course when reviewing pull requests. While `Gemfile.lock` is generated,
in part, from `Gemfile`, the `Gemfile.lock` file can (and frequently
does) change irrespective of `Gemfile` changes.

With this file suppressed it's too easy to miss otherwise unwanted or
even dangerous dependency changes in reviews. Suppressing the file
encourages it to be ignored in reviews and it most certainly should not be.
",476,False,en,1
1010,2,7,0,Externals,ghost,2014-03-23 15:41:38,2003,36,7,0,,0,False,en,0
1003,8,8,0,Externals,Shoelace,2014-03-20 19:32:46,0,0,0,0,"Plsql is a procedural language including SQL in Oracle RDBMS. 

i have seen previous attempts to get this support (ie #244 and #243) into linguist but it not there in the current version.. and the last comment was 1 year ago.
",226,True,en,0
998,1,1,0,Externals,RhysRiggs,2014-03-17 23:51:01,0,0,0,0,"Added NandoScript to the list of languages.
",44,True,en,0
995,1,14,0,Externals,Acidburn0zzz,2014-03-17 03:10:57,1,1,1,0,"http://en.wikipedia.org/wiki/Fortran
",37,True,de,0
992,1,2,0,Externals,pavn,2014-03-16 05:56:27,1,1,1,0,"I have written my code using Netbeans and some of my java programs have been directly updated. However github does not recognize my java programs at all. Request github to fix it by adding java as programming language in my repositories. 
",239,True,en,0
984,1,2,0,Externals,jioe,2014-03-12 16:34:54,4,0,1,0,"Hello,

I have a C# repository containing C# libraries and an ASP.NET MVC project and the repository is marked as Javascript language. It seems that the problem is a NuGet package called Globalize. It adds 350 javascript to the folder ""globalize/cultures"" and with the pattern ""globalize.culture.*.js"". These files contain culture settings for each supported culture.

This package can be located here: http://www.nuget.org/packages/jquery-globalize/

This is my repository: https://github.com/Appverse/appverse-net

I have added this new exception to the file:
Globalize NuGet package. Ignore the 350 javascript files containing culture settings
- (^|/)globalize/cultures/globalize.culture.*.js$
",697,True,en,0
982,8,3,0,Externals,ghost,2014-03-12 03:35:29,0,0,0,0,"WineScript is a programming language that compiles to Node.js and has a Ruby-like syntax.

https://github.com/WineScript/winescript
",132,True,en,0
976,1,5,0,Externals,cthulhuology,2014-03-04 14:48:37,5,1,1,0,"Per the GForth man page under the FILES section:

FILES
       .../gforth.fi  default Forth image
       *.fi           Forth loadable image
       *.fs           Forth source (sequential)
       *.fb           Forth source (block)
       *.fd           generated with makedoc.fs
       *.i            C include files
       *.ds           documentation source
       *TAGS          etags files

The primary extension for Forth source uses the .fs extension when stored in source files, .fb for forth blocks.  Currently linguist is detecting most of the gforth code base as being F# which is obviously wrong.
",609,True,en,0
974,1,3,1,Externals,nawb,2014-03-03 23:32:52,8,0,1,0,"Used same lexer, same color as Verilog. System Verilog uses '.sv' file extension for source files and '.vh' for libraries and packages.
",136,True,en,0
959,1,2,0,Externals,lamestation,2014-02-19 22:03:47,0,0,0,0,"Spin is the built-in programming language of the Parallax Propeller microcontroller.
",85,True,en,0
956,2,2,0,Externals,drewcassidy,2014-02-18 21:09:23,0,0,0,0,"My project (https://github.com/cineboxandrew/voxelgon) was showing as C, and I suspect that the .meta files are to blame. Also added .csproj and .sln for good measure.
",168,True,en,0
954,4,5,0,Externals,cristaloleg,2014-02-18 15:07:15,0,0,0,0,,0,False,en,0
949,5,3,0,Externals,pchaigno,2014-02-16 19:42:21,50567,48047,9,0,"Pull request taken up from #919.

Some example NewLISP repositories on GitHub:
https://github.com/kanendosei/artful-newlisp
https://github.com/taoeffect/dragonfly-newlisp
https://github.com/newlisponrockets/newLISP-on-Rockets
",226,True,en,2
948,1,1,0,Externals,geoff-codes,2014-02-16 07:55:34,112,1,4,0,"So I wrote a couple of helper scripts a couple of months ago for using `linguist` in the shell or in a script.
I actually use them quite frequently. So I thought I'd clean them up and see if you felt like merging them.

Pretty straightforward. It does what you probably think it does.
- `language`

(While it could instead be tucked inside the `linguist` executable with a flag, this seems simpler to me.)

Humorously named, but actually materially quite useful, shell scripts which call `language`.
- `speaka`
- `shebangalang`

There's usage and documentation in the comments.

Aside: I considered putting these in a separate gem, but since they have to be kept in sync with `linguist` and there's not really a documented ""stable API"" per se (not a criticism, doesn't really need one), its honestly just not worth the effort of dependency tracking to put these elsewhere.
",873,False,en,0
946,1,1,0,Externals,Randonee,2014-02-14 17:01:32,0,0,0,0,"Haxe libraries often have compiled neko run.n binary files included for easy installation from git repos. The run.n files should be ignored when determining the language of a repo. Currently they seem to marked as Nemerle source.
",230,True,en,0
945,1,1,0,Externals,midraed,2014-02-14 15:59:53,0,0,0,0,"I am adding a sample requested pchaigno
",40,True,en,0
943,1,6,0,Externals,ghost,2014-02-14 12:39:43,0,0,0,0,"redo of github/linguist#942
",28,True,en,2
942,1,1,0,Externals,ghost,2014-02-14 10:57:25,0,0,0,0,,0,False,en,0
936,1,14,1,Externals,permcody,2014-02-11 18:27:31,8,1,1,0,"Hello Devs!

I've got a new project that we are migrating to GitHub.  It's currently private while we get approvals from our company to open source it, but we are being incorrectly categorized as Eiffel!

The issue is that we have a very large test suite with our software that stores output in ""ExodusII"" format which is a binary file that has a file extension of "".e"".  I looked over the linguist code and it appears that the binary file checker is not very robust.  I did a little Googling and found a routine that determines the file type based on the actual bytes in the file instead of relying on mime-types or other less reliable methods.

Alternatively, I could propose some other directory names to skip.  We keep all of our tests in a directory named ""tests"" which is not currently in the ""vendor.yml"" file.  When our project goes public, I'll certainly be in touch to show you where our problems are at. 

Disclaimer: I'm not a ruby programmer so if there is a better way to do this test, please feel free to comment.  Have you guys considered allowing projects to put in a .linguist file in their directories to handle project by project configuration?

Thanks,
Cody
",1179,True,en,0
932,1,4,0,Externals,sergeylukin,2014-02-09 16:33:02,2,0,1,0,"Taken from http://docs.mql4.com/basis/syntax:

> Syntax of MQL4 is much a C-like syntax

Just for reference, here is a MQL file on Github without highlight:

https://github.com/sergeylukin/mql4-mysql/blob/master/src/mql4-mysql.mqh

and here is C lexer applied to an MQL file (see ""How to use"" section):

https://github.com/sergeylukin/mql4-mysql/blob/master/README.md
",368,True,en,0
930,3,3,0,Externals,cgranade,2014-02-07 17:32:08,12,0,1,0,"This test case is based on misdetection of
https://github.com/CoryGroup/quantum-utils-matlab/blob/master/src/SIConstants.m
",123,False,en,0
925,2,3,0,Externals,rothos,2014-02-05 12:19:42,64,0,4,0,"I code in Matlab and have noticed that it is frequently misinterpreted as M. Here I provide a disambiguation heuristic that looks for `%` (Matlab) and `;` (M) at the beginning of a new line, which are the languages' respective comment syntaxes.
",245,True,en,0
919,8,14,0,Externals,cormullion,2014-02-03 12:01:04,0,0,0,0,"newLISP is a tiny to small (350KB) scripting language based on Lisp syntax
(s-expressions, lists, homoiconic code as data, etc). The newLISP lexer was added to Pygments in 
version 1.5. 

Some example newLISP repositories on GitHub:
- https://github.com/kanendosei/artful-newlisp
- https://github.com/taoeffect/dragonfly-newlisp
- https://github.com/newlisponrockets/newLISP-on-Rockets

newLISP files are currently classified as Common Lisp, to the chagrin of the Common Lisp fraternity... I'm unable to provide any heuristics code to distinguish easily between the two.
",571,False,en,0
918,1,4,0,Externals,cormullion,2014-02-03 09:27:53,0,0,0,0,"newLISP is a tiny to small (350KB) scripting language based on Lisp syntax
(s-expressions, lists, homoiconic code as data, etc). The newLISP lexer was added to Pygments in 
version 1.5. 

Some example newLISP repositories on GitHub:
- https://github.com/kanendosei/artful-newlisp
- https://github.com/taoeffect/dragonfly-newlisp
- https://github.com/newlisponrockets/newLISP-on-Rockets

newLISP files are currently classified as Common Lisp, to the chagrin of the Common Lisp fraternity...
",490,False,en,0
914,2,0,0,Externals,smo-key,2014-01-28 15:43:27,0,0,0,0,"LabVIEW is used in robotics teams and microcomponents around the world.  Three samples included.
",97,True,en,0
912,1,1,0,Externals,ArtemyVI,2014-01-27 17:52:32,1,1,1,0,"http://en.wikipedia.org/wiki/Fortran
",37,True,de,0
904,1,2,0,Externals,sandrobilbeisi,2014-01-22 19:21:52,8,0,1,0,,0,False,en,0
901,1,3,0,Externals,trevor,2014-01-20 16:14:40,24,26,2,0,"The all-caps spelling is a historical artifact.

<blockquote>The official language standards now refer to the language as ""Fortran"".</blockquote> See http://en.wikipedia.org/wiki/Fortran#Capitalization for more.
",212,True,en,1
894,1,2,0,Externals,nima,2014-01-15 06:29:42,61,32,2,0,"If anywhere in the first 5 lines, the pattern `linguist-override:' is
found, the next token is taken to be the overriding interpreter or
language.
",147,False,en,0
883,2,5,0,Externals,Mailaender,2014-01-03 20:24:39,1,1,2,0,"Fixes a big misdetection at https://github.com/OpenRA/OpenRA/search?l=tex which are in fact binaries in a proprietary Westwood Studios sprite format and not TeX markup files.
",175,True,en,1
874,1,0,0,Externals,lawrencewoodman,2013-12-29 07:41:48,1,0,1,0,"Tcl uses modules which have the extension `.tm`, so I have added this extension for Tcl.
",89,True,en,0
867,1,2,0,Externals,marti1125,2013-12-27 12:18:24,0,0,0,0,,0,False,en,0
866,1,3,0,Externals,bendmorris,2013-12-26 02:21:38,40,0,2,0,"[Neko](https://en.wikipedia.org/wiki/Neko_(programming_language\)) is a high-level programming language that runs on the [Neko VM](http://nekovm.org/). It is popular as a Haxe target.
",184,True,en,0
855,1,4,0,Externals,geoff-codes,2013-12-23 08:51:37,379,31,9,0,"So I've gone ahead and rebased this ...

But can I ask, um, what your leaning towards here? Should I close this and reopen an issue? If you think this will be resolved another way? Or just close if this is a wontfix? It's totally fine however you choose, its your project after all... I just get a little antsy with a pull just sitting open while new revisions get released, I guess.

Am I just crazy? Does no-one else get a bunch of Unicode decoding errors when they try to run this over any significant amount of code?

Addresses a number of encoding errors, mostly by:
- For non-ASCII/UTF-8, convert text to UTF-8, replacing missing characters prior to spitting into lines and/or parsing.
- For ASCII/UTF-8, convert to UTF-16, then back, replacing invalid characters. (This is necessary because Ruby won't convert to/from the same encoding.)
- Workaround for incorrect (or maybe just extremely obscure) encodings reported by 'charlock'.
  See changes in [blob_helper.rb](https://github.com/pullreq/linguist/blob/master/lib/linguist/blob_helper.rb), etc.
- Includes the following new test cases for the above, all taken from real repositories here on Github:
  - [Python/shtest-encoding.py](https://raw.github.com/llvm-mirror/llvm/master/utils/lit/tests/shtest-encoding.py) (invalid UTF-8, error in blob helper)
  - [Text/btParallelConstraintSolver.h](https://raw.github.com/kripken/emscripten/master/tests/bullet/src/BulletMultiThreaded/btParallelConstraintSolver.h) (invalid UTF-8, error in tokenizer)
  - [JavaScript/lang-vb.js](https://raw.github.com/nodesocket/commando/master/js/code-pretty/lang-vb.js) (no eqivalent character in UTF-8 from Windows-1252)
  - [JavaScript/xor-sanity.js](https://raw.github.com/mozilla-servo/mozjs/master/js/src/jit-test/tests/jaeger/xor-sanity.js) (bad encoding reported: IBM424_rtl)
",1824,True,en,1
846,1,1,0,Externals,sigkell,2013-12-17 17:54:07,0,0,0,0,"Though GYP is primarily used with Python, other languages also implement it, such as Node.js via node-gyp. I'm proposing to move GYP by itself and recognise it as independent, so projects are not falsely interpreted as using Python. GYP is JSON like, so I've chosen JSON for the ace_mode.
",289,True,en,0
845,1,1,0,Externals,geoff-codes,2013-12-17 04:28:39,373,29,8,0,"This pull request is a proposal to fix #830, and closes #829.

Addresses a number of encoding errors, mostly by:
- For non-ASCII/UTF-8, convert text to UTF-8, replacing missing characters prior to spitting into lines and/or parsing.
- For ASCII/UTF-8, convert to UTF-16, then back, replacing invalid characters. (This is necessary because Ruby won't convert to/from the same encoding.)
- Workaround for incorrect (or maybe just extremely obscure) encodings reported by 'charlock'.
  See changes in [blob_helper.rb](https://github.com/pullreq/linguist/blob/master/lib/linguist/blob_helper.rb), etc.
- Includes the following new test cases for the above, all taken from real repositories here on Github:
  - [Python/shtest-encoding.py](https://raw.github.com/llvm-mirror/llvm/master/utils/lit/tests/shtest-encoding.py) (invalid UTF-8, error in blob helper)
  - [Text/btParallelConstraintSolver.h](https://raw.github.com/kripken/emscripten/master/tests/bullet/src/BulletMultiThreaded/btParallelConstraintSolver.h) (invalid UTF-8, error in tokenizer)
  - [JavaScript/lang-vb.js](https://raw.github.com/nodesocket/commando/master/js/code-pretty/lang-vb.js) (no eqivalent character in UTF-8 from Windows-1252)
  - [JavaScript/xor-sanity.js](https://raw.github.com/mozilla-servo/mozjs/master/js/src/jit-test/tests/jaeger/xor-sanity.js) (bad encoding reported: IBM424_rtl)
- Also includes a small patch to fix verbose debugging in classifier.rb -- it was broken at https://github.com/github/linguist/commit/6a8de63d2d98514f370b0610adeadfdcaf35039e.
",1541,True,en,1
841,1,2,0,Externals,geoff-codes,2013-12-16 12:22:57,50,9,4,0,"This pull request is a proposal to fix #830, and closes #829.

Basically:
- explicitly convert text to UTF-8, replacing invalid characters prior to spitting into lines and/or parsing.  
  See changes in [blob_helper.rb](https://github.com/pullreq/linguist/blob/master/lib/linguist/blob_helper.rb) and [sample.rb](https://github.com/pullreq/linguist/blob/master/lib/linguist/sample.rb).
- Adds a test case (from LLVM's [lit](http://llvm.org/docs/CommandGuide/lit.html) testsuite) as [samples/Python/invalid-encoding.py](https://github.com/pullreq/linguist/blob/samples/Python/invalid-encoding.py).

Tested with Ruby 1.8.7p358 and 2.0.0p353 on Darwin.
",650,True,en,0
840,1,0,0,Externals,geoff-codes,2013-12-16 10:03:23,20,2,2,0,"This pull request is a proposal to fix #830, and closes #829.

Basically:
- explicitly convert text to UTF-8, replacing invalid characters
  prior to spitting into lines and parsing. See changes in [blob_helper.rb](https://github.com/pullreq/linguist/blob/master/lib/linguist/blob_helper.rb).
- Adds the test case (from LLVM's [lit](http://llvm.org/docs/CommandGuide/lit.html) testsuite) as [samples/Python/invalid-encoding.py](https://github.com/pullreq/linguist/blob/samples/Python/invalid-encoding.py).

Tested with Ruby 1.8.7p358 and 2.0.0p353 on Darwin.
",559,True,en,0
837,6,2,0,Externals,GiampaoloFalqui,2013-12-15 13:26:01,0,0,0,0,"PAWN is a simple, typeless, 32-bit extension language with a C-like syntax. A pawn ""source"" program is compiled to a binary file for optimal execution speed. The pawn compiler outputs P-code (or bytecode) that subsequently runs on an abstract machine. Execution speed, stability, simplicity and a small footprint were essential design criteria for both the language and the abstract machine. 

[Official Website](http://www.compuphase.com/pawn/pawn.htm)
[Where is PAWN used?](http://www.compuphase.com/pawn/pawnprojects.htm)

You can see [here](https://github.com/search?q=%23include+%3Ca_samp%3E&type=Code&ref=searchresults) PAWN is used for SA-MP and also [here](https://github.com/search?q=if+extension%3Apwn&type=Code&ref=searchresults) all the .pwn extensions in GitHub.
",776,True,en,0
829,1,0,0,Externals,geoff-codes,2013-12-12 12:38:17,20,2,2,0,"Doesn't look like it likes this very much at all.
Courtesy the llvm 'lit' test cases.
",86,False,en,0
828,2,6,0,Externals,wdblair,2013-12-12 01:26:15,13,0,1,0,"ATS is a statically typed programming language that unifies implementation with formal specification. It is equipped with a highly expressive type system rooted in the framework Applied Type System, which gives the language its name. In particular, both dependent types and linear types are available in ATS.

Language Website:
http://www.ats-lang.org

Latest Compiler:
http://github.com/githwxi/ATS-Postiats
",409,True,en,0
827,1,9,0,Externals,dasmithii,2013-12-11 06:46:13,0,0,0,0,"""How"" is a programming language that I've been developing. I've added it to the list of languages with the file extension "".how"", which was not yet taken.

<3  
",161,True,en,0
815,2,3,0,Externals,elofgren,2013-12-05 22:52:38,92,3,4,0,"Another attempt at adding SAS support, this time having run 'bundle exec rake samples'.
",88,True,en,0
808,2,3,0,Externals,elofgren,2013-12-03 19:56:15,92,3,4,0,"Simple entry to recognize .SAS extensions as the SAS programming language, along with two examples.
",100,True,en,0
801,223,4,0,Externals,oubiwann,2013-11-29 22:49:03,12555,1555,89,0,"Added LFE aliases and search term.
",35,True,en,8
800,1,3,0,Externals,matteobruni,2013-11-29 13:53:44,0,0,0,0,,0,False,en,0
798,1,6,0,Externals,RahulKulhari,2013-11-28 17:46:48,1,0,1,0,"my repository that is  https://github.com/RahulKulhari/petulant-octo-bot showing wrong language?
",97,True,en,0
792,7,7,0,Externals,jaaso,2013-11-23 22:29:07,0,0,0,0,"Shen is a portable functional programming language that offers

pattern matching,
λ calculus consistency,
macros,
optional lazy evaluation,
static type checking,
an integrated fully functional Prolog,
and an inbuilt compiler-compiler.
Shen has one of the most powerful type systems within functional programming. Shen runs under a reduced instruction Lisp and is designed for portability. The word ‘Shen’ is Chinese for spirit and our motto reflects our desire to liberate our work to live under many platforms. Shen includes sources and is absolutely free for commercial use. It currently runs under CLisp and SBCL, Clojure, Scheme, Ruby, Python, the JVM and Javascript.
http://www.shenlanguage.org

Examples: 
https://github.com/samebchase/shen-json
https://github.com/vasil-sd/shen-libs
https://github.com/4DA/shen-safevec
https://github.com/gravicappa/shen_run
https://github.com/gravicappa/js-kl
https://github.com/deech/ShenVendingMachine
https://github.com/mstill/shen-lazy-list
https://github.com/kianwilcox/shenspec
",1030,True,en,0
789,1,2,0,Externals,jkrmr,2013-11-22 04:58:58,0,0,0,0,,0,False,en,0
788,1,5,0,Externals,jkrmr,2013-11-22 04:47:01,0,0,0,0,".cls extension for LaTeX document class files: [https://www.tug.org/TUGboat/tb28-1/tb88flynn.pdf](https://www.tug.org/TUGboat/tb28-1/tb88flynn.pdf)
",148,True,en,0
787,1,0,0,Externals,computmaxer,2013-11-22 01:31:30,580,3,3,0,"Brightscript is the language used to create [Roku applications.](http://www.roku.com/developer)

Here are some examples of implemented brightscript: 
https://github.com/computmaxer/roku-hdhomerun
https://github.com/plexinc/roku-client-public

The included sample is straight out of the samples included with the Roku SDK.
",322,True,en,0
774,1,0,0,Externals,ghost,2013-11-09 20:32:52,0,0,0,0,"https://github.com/microzilla/Chocolate-Script

Syntax is very similar Javascript/CoffeeScript.
",96,True,en,0
772,4,0,0,Externals,afischer,2013-11-09 17:25:08,0,0,0,0,"_**Note:_\* This pull request was re-added due to Travis CI not checking the previous one. Sorry about that! *

Added the NetLogo programming language, a dialect of Logo—an adaptation of LISP.
# About

From [Wikipedia:](http://en.wikipedia.org/wiki/Logo_%28programming_language%29)

> Logo is a graphic oriented educational programming language, designed in 1967 by Daniel G. Bobrow, Wally Feurzeig, Seymour Papert and Cynthia Solomon. Today the language is remembered mainly for its use of ""turtle graphics"", in which commands for movement and drawing produced line graphics either on screen or with a small robot called a ""turtle"". The language was originally conceived to enable what Papert called ""body-syntonic reasoning"" where students could understand (and predict and reason about) the turtle's motion by imagining what they would do if they were the turtle. There are substantial differences between the many dialects of Logo, and the situation is confused by the regular appearance of turtle graphics programs that mistakenly call themselves Logo.

Source code for the language can be found @NetLogo .

Also added were 3 sample files:
- Ants.nlogo - An simple simulation of ants looking for food
- Life.nlogo - An implementation of Conway's game of life using patches
- Star Fractal.nlogo - A fractal design programmed in NetLogo

More models are available at git@github.com:NetLogo/models.git .
# In the Wild

Logo & NetLogo are very commonly used teaching languages—perhaps one of the most widely used. I have seen many teachers and students store their NetLogo data on github to share.

Netlogo is also often used to create models. Check out a bunch of them here: http://modelingcommons.org/account/login
",1722,True,en,0
768,3,1,0,Externals,ghost,2013-11-08 12:08:50,53,11,3,0,"# !/usr/bin/python
",19,True,en,0
766,4,4,0,Externals,afischer,2013-11-08 01:44:41,0,0,0,0,"Added the NetLogo programming language, a dialect of Logo—an adaptation of LISP.
# About

From [Wikipedia:](http://en.wikipedia.org/wiki/Logo_%28programming_language%29)

> Logo is a graphic oriented educational programming language, designed in 1967 by Daniel G. Bobrow, Wally Feurzeig, Seymour Papert and Cynthia Solomon. Today the language is remembered mainly for its use of ""turtle graphics"", in which commands for movement and drawing produced line graphics either on screen or with a small robot called a ""turtle"". The language was originally conceived to enable what Papert called ""body-syntonic reasoning"" where students could understand (and predict and reason about) the turtle's motion by imagining what they would do if they were the turtle. There are substantial differences between the many dialects of Logo, and the situation is confused by the regular appearance of turtle graphics programs that mistakenly call themselves Logo.

Source code for the language can be found @NetLogo .

Also added were 3 sample files:
- Ants.nlogo - An simple simulation of ants looking for food
- Life.nlogo - An implementation of Conway's game of life using patches
- Star Fractal.nlogo - A fractal design programmed in NetLogo

More models are available at git@github.com:NetLogo/models.git .
# In the Wild

Logo & NetLogo are very commonly used teaching languages—perhaps one of the most widely used. I have seen many teachers and students store their NetLogo data on github to share.
",1491,False,en,0
762,1,1,0,Externals,bfontaine,2013-11-06 00:32:34,0,0,0,0,"I’m not sure about the `.script!` extension, but I saw this everywhere in this repo. My [original file](https://github.com/bfontaine/ud/blob/9af56735c8b6c94e1ef092ac6f67397f4c73895f/bin/ud) has no extension and is wrongly reported as Perl.
",242,True,en,0
761,11,0,0,Externals,CrimsonTautology,2013-11-06 00:10:31,0,0,0,0,"SourcePawn is the language used for writing [SourceMod](http://www.sourcemod.net/about.php) plugins that modify games running on Valve's Half-Life 2 engine.

This language is becoming very popular on Github as can be seen [here](https://github.com/search?q=%23include+%3Csourcemod%3E&type=Code&ref=searchresults) and [here](https://github.com/search?q=if+extension%3Asp&type=Code&ref=searchresults).

This pull requests includes changes requested in my previous pull request #497.
",481,True,en,0
756,1,0,0,Externals,myguidingstar-zz,2013-11-05 08:29:56,87,0,5,0,,0,False,en,1
744,2,7,0,Externals,ibnfirnas,2013-10-28 02:57:58,0,0,0,0,"and adjust spacing in existing Standard ML samples.
",52,True,en,0
742,2,1,0,Externals,kelunik,2013-10-27 08:01:59,0,0,0,0,"This Pull Request excludes `/doc` from language statistics, for e.g. JavaDoc.
",78,True,en,1
726,1,1,0,Externals,ankitr,2013-10-16 06:19:07,0,0,0,0,"The regex provided handles for the Bootstrap css and js files as well
as the new bootstrap-theme css files.
",108,False,en,0
725,1,4,0,Externals,avp,2013-10-15 16:53:52,3,0,1,0,"Bootstrap is a lot of CSS, and this will stop that from interfering with the language stats.
",93,True,en,0
724,1,1,0,Externals,Snakybo,2013-10-15 14:41:03,0,0,0,0,"Made the color slightly lighter.
",33,True,en,0
717,2,1,0,Externals,ancarda,2013-10-13 17:02:05,0,0,0,0,"`bootstrap.js`, `bootstrap.css`, both minified.
",48,True,nl,1
716,1,9,0,Externals,ancarda,2013-10-13 15:52:49,0,0,0,0,"Affects:
- bootstrap.js (and minified)
- bootstrap.css (and minified)
",70,False,en,0
712,1,6,0,Externals,FeepingCreature,2013-10-11 21:51:53,5,0,1,0,"Please include extension support for my programming language, Neat ( http://github.com/FeepingCreature/fcc ).
",110,True,en,0
711,1,1,0,Externals,cbartlett,2013-10-08 20:31:18,5,0,1,0,,0,False,en,0
710,3,3,0,Externals,rhunter,2013-10-07 09:27:02,1127,155,5,0,"I've taken samples from everyone complaining in #467 -- so at least they should be OK now.

The samples database was out of date on master so I updated it before and after the ""real change"" in commit 226e629.
",209,True,en,0
709,1,1,0,Externals,mistergoodson,2013-10-05 17:41:04,0,0,0,0,"SQF is the primary language used by Bohemia Interactive in their ArmA game series.
",83,True,en,0
708,1,1,0,Externals,waddlesplash,2013-10-02 23:10:42,0,0,0,0,"Mostly because the file extension conflicts with that of Prolog files.
",71,True,en,0
702,1,6,0,Externals,rvanvelzen,2013-09-30 12:21:05,0,0,0,0,"`.inc` is often used in PHP libraries for included files.
",58,True,en,0
700,1,3,0,Externals,ghost,2013-09-29 23:25:45,0,0,0,0,,0,False,en,0
699,1,2,0,Externals,Aaron1011,2013-09-29 11:08:30,1,1,1,0,,0,False,en,0
698,1,4,0,Externals,ancarda,2013-09-27 18:00:39,0,0,0,0,"Affects the following files:

bootstrap.js (and minified)
bootstrap.css (and minified)
",87,True,en,0
681,3,3,0,Externals,niallrobinson,2013-09-11 18:03:17,47,0,3,0,"Added entry for the Igor Pro language. Here are some examples of use already on github:
https://github.com/bgallarda/IgorPro
https://github.com/dleifohcs/srs-igor
https://github.com/willsALMANJ/Igor-ProW
https://github.com/david-hoffman/Igor-Data-Analysis
https://github.com/yamad/igorutils
https://github.com/nanophotonics/procedures

I have no idea what I'm doing so I am submitting this on the faint hope that Travis will enlighten me :smiley: 
",448,False,en,0
680,3,0,0,Externals,PaulBone,2013-09-10 03:31:38,0,0,0,0,"These changes enable linguist to detect Mercury correctly.  The first two changes below were refused in PR#427 as they did not apply cleanly.  I have fixed the merge conflicts in the third patch.
",196,True,en,0
673,1,1,0,Externals,briantrice,2013-09-05 20:31:35,21,1,2,0,"I manage the Slate source repo at http://github.com/briantrice/slate-language.
",79,True,en,0
671,1,3,1,Externals,clange,2013-09-05 14:44:40,1192,0,3,0,"This is the language of the [Isabelle](https://isabelle.in.tum.de/) proof assistant. It is a superset of an ML dialect. 

Here are some repositories using Isabelle:
- https://github.com/formare/auctions/
- https://github.com/FormalTheology/GoedelGod/
- https://github.com/avigad/isabelle/tree/master/Analysis
- https://github.com/larsrh/hol-falso
- https://github.com/iislucas/isaplib/tree/master/isabelle/isaplib
- https://github.com/NicoleRauch/Isabelle
- https://github.com/caylee-hogg/isabelle-semantics
- https://github.com/meiersi/scyther-proof/tree/master/data/isabelle/src

This is my first contribution to “linguist” (a few more to follow); I'll be happy to learn of anything I could improve.
",706,True,en,0
666,1,3,0,Externals,tomr-stargazer,2013-09-02 16:51:48,1,0,1,0,"Hello,

My ""*.pro"" code is flagged as Prolog language, but the same file extension is also used for the (more obscure) IDL language: http://en.wikipedia.org/wiki/IDL_(programming_language) which is what I am actually using.

I have the code in the following private repository: https://github.com/tomr-stargazer/milkyway_dendrogram_idl (I'll share it with someone on your end if you like)
and it's marked as ""Prolog 100%"", which is not true and should say ""IDL 100%"".

Is this the right place to ask for help about this kind of thing?

Thanks
",543,True,en,0
662,3,1,0,Externals,mplacona,2013-08-31 22:28:14,1,1,1,0,,0,False,en,0
660,1,6,0,Externals,wicker,2013-08-31 20:31:11,0,0,0,0,"This was asked for in linguist Issue #365, which is closed but ""pull requests are welcome.""

Eagle files are schematics and board layouts. Currently my repos with Eagle files don't have any other code so they are showing no language at all. Searching GitHub for ""eagle schematic"" yields 39 repositories and 16,531 code hits. Two high-profile communities with unlabeled Eagle repos are 'adafruit' and 'sparkfun'. 
",413,True,en,0
654,1,0,0,Externals,acgetchell,2013-08-27 06:09:01,0,0,0,0,,0,False,en,0
649,2,3,0,Externals,jgke,2013-08-25 09:47:41,0,0,0,0,"Fixes #554. It uses a global variable to pass the path though, because I don't know enough Ruby to fix these without one or alternatively modifying all functions to pass the value. There probably is a better way to do it.
(also, I suck at using Github)
",253,False,en,0
648,1,0,0,Externals,jgke,2013-08-25 09:34:40,0,0,0,0,"Fixes #554. It uses a global variable to pass the path though, because I don't know enough Ruby to fix these without one or alternatively modifying all functions to pass the value. There probably is a better way to do it.
",222,True,en,0
646,1,23,0,Externals,larsbrinkhoff,2013-08-24 15:55:39,0,0,0,0,"The `.fs` file extension is commonly used for both F# and Forth.  Currently, only F# is detected.

GitHub currently contains about 48000 files with an `.fs` file extension, which are detected as F# or OCaml.  Of those, I believe 15000 files are actually in Forth.

This pull request adds an F# sample file, and .fs as a Forth extension.

Tested with:
http://github.com/tptb/sforth
http://github.com/nfz/asforth
http://github.com/vdorr/incforth
http://github.com/fsharp/fsharp
http://github.com/forthy42/gforth
http://github.com/jmptable/simcrum
http://github.com/JohnEarnest/Mako
http://github.com/fsharp/FSharp.Data
http://github.com/jgreene/Simple.Query

More examples of misidentified code at GitHub can be found with these searches:
http://github.com/search?q=extension%3A.fs+dup
http://github.com/search?q=extension%3A.fs+void+main
",837,True,en,1
641,4,4,0,Externals,nblackburn,2013-08-22 06:30:32,0,0,0,0,"Added **PureBasic** to the language list as well as two code samples.
",70,True,en,0
639,1,4,0,Externals,takanuva,2013-08-21 19:21:33,0,0,0,0,"Support for PLCs' textual programming languages as defined by IEC 61131-3, which are ST (Structured Text) and IL (Instruction List). Sadly, they don't have default file extensions, each vendor choses their own, and some even use *.txt for their code files.
",257,True,en,0
637,1,4,0,Externals,borisjoffe,2013-08-21 05:19:56,13,0,2,0,"I added Twitter Bootstrap javascript and css files to the vendor exclude list and wrote tests for them which all pass. I have a repo on github where bootstrap is counted as 93% of my code.

Let me know if anything else is required.
",232,True,en,1
634,1,2,0,Externals,FND,2013-08-20 07:00:18,34,0,3,0,"there's an n3 Pygments lexer at https://github.com/gniezen/n3pygments which can be used, but I'm not sure how to register it here - pointers welcome
",149,True,en,0
633,1,1,0,Externals,GordonSmith,2013-08-19 08:19:07,5,5,2,0,"Signed-off-by: Gordon Smith gordon.smith@lexisnexis.com
",56,True,en,0
632,3,1,0,Externals,kellertuer,2013-08-19 07:40:34,154,0,3,0,,0,False,en,0
629,1,5,0,Externals,raphw,2013-08-19 07:04:24,0,0,0,0,"Includes any files matched by:

(^|/)bootstrap(-\w+)?(.no-icons)?(.min)?.(css|js)$ 
",84,True,en,1
625,1,3,0,Externals,eavgerinos,2013-08-17 20:53:02,0,0,0,0,"Disclaimer:  It's not finished yet.

I've found a problem with a repository of mine

https://github.com/github/linguist/issues/604

There I have a `bin/pop` file that's Ruby, though linguist recognized it as Perl.

This is my ""WIP"" approach to this problem. 
Pardon my mistakes, I have no experience with the linguist codebase.

Still got to fix some tests and return the language name instead of the whole object.

Please give some feedback :)
",445,True,en,1
624,1,2,0,Externals,p0intless,2013-08-16 18:37:32,0,0,0,0,"a project file from Qt creator (*.pro) is marked as Prolog ... I am not quite sure about the syntax
",100,True,en,0
613,1,1,0,Externals,tube42,2013-08-08 15:24:00,0,0,0,0,"QML (the markup language of Qt) is used in many new open source projects - specially on ubuntu desktop and in mobile space, e.g. Meego, Jolla, BlackBerry & ubuntomobile as the primary development language and also on Android, iOS to a lesser extent. 

This tiny patch will hopefully allow QML projects to be detected as such instead of JavaScript as it is currently done...
",374,True,en,0
611,1,3,0,Externals,mgarabed,2013-08-07 13:00:50,2,0,2,0,"Add 'thirdparty' as another keyword to filter out dependency or vendor libraries in repos.
",91,True,en,1
609,1,2,0,Externals,mikegrb,2013-08-06 01:45:26,3,3,1,0,"I'm a bit unsure about the function name as there wasn't anything similar to take my lead from.

It seemed wasteful to fully duplicate the minified_javascript function just to change the file extension.

The sudden inclusion of CSS detection turned my decidedly Perl project from 99% Perl to a CSS project that was 71% CSS and 28% Perl.  This corrects that.  There was no prior art for testing of generated file detection that I could find.
",441,True,en,0
601,3,2,0,Externals,ibnfirnas,2013-08-02 14:42:34,0,0,0,0,"My R scripts, using shebang and no file extension, are being detected as JavaScript.
Hopefully this sample will fix it.
",120,False,en,0
600,1,7,0,Externals,larsbrinkhoff,2013-07-31 11:05:23,0,0,0,0,"Forth has a long a diverse history, and this is reflected in the file extensions in use.

In general, a search like this will find Forth code:
http://github.com/search?q=extension%3A.seq+dup+swap&type=Code

Repositories using these Forth extensions:
http://github.com/wexi/amforth-shadow/tree/master/examples
http://github.com/hanshuebner/rekonstrukt/tree/master/forth
http://github.com/gogonkt/LuneIME/tree/master/3rdparts
http://github.com/gnooth/forth/tree/master/tests
http://github.com/AlexandreAbreu/jonesforth
http://github.com/liruoko/forth-exercises
http://github.com/ekoeppen/CoreForth
http://github.com/earl/gforth-mirror
http://github.com/eungju/hf86
http://github.com/keithcausey/GreenArrays/tree/master/EVB001/pF
http://github.com/yashpant/AutoPlug2.0/tree/master/AutoNet_Current/EVM/Forth%20Interpreter%20%28Reference%29/Forth/Forth/WINFORTH
http://github.com/kt97679/relf
http://github.com/cataska/ficl/tree/master/softcore
",940,True,en,0
593,6,2,0,Externals,vszakats,2013-07-24 20:05:39,0,0,0,0,"[xBase: https://en.wikipedia.org/wiki/xBase]
[Harbour language: https://github.com/harbour/core]
",97,False,fr,0
587,2,4,0,Externals,myguidingstar-zz,2013-07-18 20:13:13,103,0,8,0,"- .cljscm https://github.com/myguidingstar/clojure-scheme
- .cl2, .hic https://github.com/chlorinejs/chlorine/wiki
- .cljx https://github.com/lynaghk/cljx
- .cljc https://github.com/schani/clojurec
",198,False,en,1
577,2,1,0,Externals,7imbrook,2013-07-12 17:37:47,8,0,2,0,,0,False,en,1
573,5,0,0,Externals,myguidingstar-zz,2013-07-11 06:45:02,0,0,0,0,,0,False,en,1
571,1,3,0,Externals,neochief,2013-07-10 09:21:48,0,0,0,0,"Drupal modules consist of PHP files with different extensions:
*.module - main module's files
*.inc - generic include
*.test - simpletest secenario (written in PHP)
*.install - module installation file
*.profile - installation profile main file
",245,False,en,0
570,3,1,0,Externals,myguidingstar-zz,2013-07-10 08:38:13,0,0,0,0,"- .cljscm https://github.com/myguidingstar/clojure-scheme
- .cl2, .hic https://github.com/chlorinejs/chlorine/wiki
- .cljx https://github.com/lynaghk/cljx
- .cljc https://github.com/schani/clojurec
",198,False,en,1
569,1,3,0,Externals,Kyros,2013-07-09 00:58:43,1,1,1,0,"http://en.wikipedia.org/wiki/Fortran
",37,True,de,0
560,5,1,0,Externals,Pilooz,2013-07-01 12:40:31,4252,3,4,0,"Hi,
Here is the plsql langauge definition.
This past all tests sucessfully.

HTH.
",82,False,en,0
558,1,1,0,Externals,steinarb,2013-06-30 21:02:49,158,0,3,0,"Calibre (http://calibre-ebook.com/ ) is an e-book management system
and universal ebook conversion tool and ebook generator.

Calibre is written in Python, with a Qt GUI, and it can be run as a server as well.

The three files added with this commit are python code in the form of caliber plugins, and these plugins
reads the RSS feeds from online news sites (Aftenposten and VG, two Norwegian newspapers, and
nrk, the Norwegian public broadcaster), and generates epub ebooks from
these feeds.
",494,False,en,0
557,1,2,0,Externals,rodnaph,2013-06-30 18:30:13,0,0,0,0,".pl is one of the two most common Prolog file extensions, and that used in the samples folder for Linguist. Unfortunately it's more commonly used by Perl so can't be the default extension.
",189,True,en,0
544,2,1,0,Externals,ziggi,2013-06-19 19:28:56,0,0,0,0,"Pawn is a simple, typeless, 32-bit extension language with a C-like syntax.

See more: http://www.compuphase.com/pawn/pawn.htm
",127,True,en,0
540,19,3,0,Externals,eveliotc,2013-06-18 01:23:01,15,14,1,0,"Now that language colors are more visible with the new awesome repository next, language colors should aim to represent branding as accurate as possible so users feel familiar with them, this pull request proposes branding colors for several languages.

In example, this is Java currently

![Ugly Java color](http://i.imgur.com/r8fPA7J.png)

This matches Java branding ""blue"" to look like

![Java cute and familiar color](http://i.imgur.com/JoisVqO.png)
",454,True,en,0
539,2,4,0,Externals,JeffJacobson,2013-06-17 20:26:57,0,0,0,0,"Issue #538
This is the first time I've ever tried to add syntax highlighting. I hope I did it correctly.
",105,False,en,0
535,2,1,0,Externals,EricGrange,2013-06-13 08:10:36,7,0,1,0,"The following changes since commit e11edb8d1a1133e40a17ca3c41e0dfbb3dde0fe9:

  Added DWScript language (2013-06-13 10:08:01 +0200)

are available in the git repository at:

  https://github.com/EricGrange/linguist.git

for you to fetch changes up to 1aeb8fe3069abf6fefa92d0d54cc0b9c43cc6d89:

  Completed extensions list for Delphi

---
",338,True,en,0
534,1,3,0,Externals,fearthecowboy,2013-06-12 21:42:34,5,0,1,0,"Added:  
c# projects  `.csproj`
c++ projects `.vcxproj`
vb projects  `.vbproj`
WiX projects  `.wixproj`
msbuild extensions `.targets`

There are more, but they're not as common as these (and I'm not sure that all files with those extensions would be XML ... some of them seem iffy to me)
",288,False,en,0
527,1,1,0,Externals,88Alex,2013-06-04 01:41:34,10,0,1,0,"I modified the algorithm so it first checks the extension. If there is only one language possibility, that language is used.
",125,True,en,0
518,1,2,0,Externals,siwinski,2013-05-29 23:10:30,339,0,3,0,"Identifies RPM spec files correctly.  Several repos for examples:
- https://github.com/repoforge/rpms
- https://github.com/remicollet/remirepo
- https://github.com/siwinski/rpms
",178,False,en,0
517,4,9,0,Externals,Turbo87,2013-05-29 15:33:20,40835,37597,13,0,"If the classifier fails we will either get Jinja/Django templates with pure HTML highlighting or HTML with Jinja/Django highlighting, which should look identical to HTML highlighting.

This is a follow-up to #515
",213,True,en,0
511,1,6,0,Internals,benbalter,2013-05-22 17:31:33,7,0,1,0,"Adds a `mappable?` method to the blog helper to detect `.geojson` files.
",73,True,en,0
509,1,1,0,Externals,marcboon,2013-05-21 08:37:11,24,0,1,0,,0,False,en,0
507,1,2,0,Externals,kashif,2013-05-14 09:11:05,220,116,5,0,,0,False,en,0
506,1,4,0,Externals,Drup,2013-05-13 22:30:35,0,0,0,0,"Not sure if it's completely reasonable, but bootstrap's js is always used as a library.
",88,True,en,0
497,7,5,0,Externals,CrimsonTautology,2013-05-04 19:46:39,0,0,0,0,"SourcePawn is the language used for writing [SourceMod](http://www.sourcemod.net/about.php) plugins that modify games running on Valve's Half-Life 2 engine.
",157,True,en,0
496,1,1,0,Externals,Leushenko,2013-05-02 13:36:16,0,0,0,0,"Added a section to languages.yml
",33,True,en,0
487,1,2,0,Externals,plinehan,2013-04-29 16:34:48,0,0,0,0,"http://docs.oracle.com/javase/7/docs/technotes/tools/solaris/javah.html

A further refinement of pull #485.  Please let me know if there is anything else I can do to help this move forward.
",190,True,en,1
486,1,2,0,Externals,xuhdev,2013-04-29 06:48:52,3,0,1,0,"Such as [this repo](https://github.com/xuhdev/indent-java.vim), there should be no Ruby and Java at all, but the statistical data has show some Ruby and Java percentages.
",171,True,en,0
485,1,1,0,Externals,plinehan,2013-04-27 18:40:43,0,0,0,0,"http://docs.oracle.com/javase/7/docs/technotes/tools/solaris/javah.html
",72,True,it,1
481,1,2,0,Externals,sshwsfc,2013-04-22 02:10:12,1,0,1,0,"For more information: 
https://docs.djangoproject.com/en/1.5/intro/tutorial06/#customize-your-app-s-look-and-feel
",114,False,it,0
480,1,1,0,Externals,relrod,2013-04-21 04:36:43,0,0,0,0,,0,False,en,0
474,1,4,0,Externals,robintw,2013-04-17 21:11:35,551,0,4,0,"IDL (Interactive Data Language; http://www.exelisvis.com/ProductsServices/IDL.aspx) is
a language for scientific computing which is used a lot within the fields of physics,
astronomy and satellite imaging. Previously IDL-based projects on Github were being
recognised as Prolog, as IDL files have the same file extension (.pro) as one of the
alternative extensions for Prolog files.

IDL is listed as a supported language on the Pygments web page
(http://pygments.org/languages/) under the name 'IDL', so I assume that is the correct
lexer name. Please let me know if this is wrong!

I have placed a few samples of IDL code in the correct samples directory - it is
very different to prolog, so the Bayesian classifier should be able to separate them
fairly easily.
",765,False,en,0
473,1,2,0,Externals,GreatEmerald,2013-04-17 20:41:09,30621,29166,4,0,"This is an initial version of the pull request. It's valid, but a bit suboptimal, since right now it uses the JavaScript lexer. UnrealScript is similar to JavaScript, but it's not the same, and many keywords are missing, so I'd like to add a dedicated UnrealScript lexer.

However, I could find no information at all about how to do that. Could someone point me in the right direction? That would also be generally useful information, so it should be documented somewhere. Maybe this project could have a wiki attached to it for adding information like that?
",559,True,en,0
472,0,0,0,Externals,robintw,2013-04-17 20:13:02,0,0,0,0,"IDL (Interactive Data Language; http://www.exelisvis.com/ProductsServices/IDL.aspx) is
a language for scientific computing which is used a lot within the fields of physics,
astronomy and satellite imaging. Previously IDL-based projects on Github were being
recognised as Prolog, as IDL files have the same file extension (.pro) as one of the
alternative extensions for Prolog files.

IDL is listed as a supported language on the Pygments web page
(http://pygments.org/languages/) under the name 'IDL', so I assume that is the correct
lexer name. Please let me know if this is wrong!

I have placed a few samples of IDL code in the correct samples directory - it is
_very_ different to prolog, so the Bayesian classifier should be able to separate them
fairly easily.
",767,False,en,0
469,1,10,0,Externals,myguidingstar-zz,2013-04-15 07:01:33,0,0,0,0,,0,False,en,1
468,1,3,0,Externals,myguidingstar-zz,2013-04-14 11:49:18,0,0,0,0,"Reference links
.cljx https://github.com/lynaghk/cljx
.cl2  https://github.com/chlorinejs/chlorine/
.wisp https://github.com/Gozala/wisp
",137,False,en,0
465,1,2,0,Externals,zacstewart,2013-04-08 23:45:15,456,0,5,0,,0,False,en,0
464,1,7,0,Externals,julik,2013-04-08 12:55:02,0,0,0,0,"This is the language used for writing OpenGL shaders, which are becoming much more mainstream lately.
",102,True,en,0
462,1,1,0,Externals,TylerBackman,2013-04-05 23:15:21,0,0,0,0,"I added "".R"" as the primary extension for the R programming language, as this is what is most commonly used in publicly distributed R code from major curators such as Bioconductor.
",181,True,en,0
457,1,4,0,Externals,heaths,2013-04-03 02:12:24,13,0,4,0,"Add .psd1, .psm1, .cdxml, and .ps1xml extensions to existing languages.
",72,True,en,0
454,1,1,0,Externals,whitews,2013-03-30 16:26:38,0,0,0,0,,0,False,en,0
453,3,5,0,Externals,rlespinasse,2013-03-27 20:31:34,0,0,0,0,"HI,

![logo-golo](https://f.cloud.github.com/assets/1280212/310461/4ce51ab6-971d-11e2-86ec-7711a1202e20.png)

I add Golo JVM Language in `languages.yml`.

Regards,
Romain Lespinasse
",182,True,en,0
445,1,1,0,Externals,mkeesey,2013-03-18 03:43:51,4143,3997,8,0,"These files typically have the extension .pro which are currently identified as Prolog files. 

This commit modifies languages.yml to add Proguard (and remove .pro as one of the additional extensions for Prolog), adds some samples for Proguard, and renames a few of the prolog samples from *.pl to *.pro to support the old use case.

More info about the Proguard project can be found at http://proguard.sourceforge.net/
",420,True,en,0
444,1,3,0,Externals,jamesotron,2013-03-17 00:55:38,7,0,1,0,"[Rubby](https://github.com/jamesotron/Rubby) is a toy language built on-top of Ruby, and shares a lot of it's syntax.  It seems to me that the existing Ruby lexers get us so close to what we want that it's not really worth the effort of writing one.
",250,True,en,0
442,1,5,0,Externals,gentoo90,2013-03-15 18:32:26,0,0,0,0,"Package manager for Linux distros: RedHat, Fedora, CentOS, OpenSUSE, Mandriva etc
http://en.wikipedia.org/wiki/RPM_Package_Manager#SPEC_file
",141,False,da,0
440,4,0,0,Externals,MatthewFluet,2013-03-13 10:47:51,0,0,0,0,"Some projects written in Standard ML use the .fun extension.  For example:
- [RedBlackTree.fun](https://github.com/clf/celf/blob/master/RedBlackTree.fun)
- [main.fun](https://github.com/MLton/mlton/blob/master/mlton/main/main.fun)

Also, the Pygments Standard ML lexer recognizes the .fun extension; see:
- [functional.py](https://bitbucket.org/birkenfeld/pygments-main/src/0710694cba81a1544e6f789953ef164c7cfc4251/pygments/lexers/functional.py?at=default#cl-1082)
",465,False,en,0
437,3,4,0,Externals,ruv,2013-03-12 20:06:57,0,0,0,0,"Changes to support .f and .fs Forth extensions, and sample of classic case-sensitive forth-code (basic vocabulary is in upper-case). See also issue #387
",153,True,en,0
434,1,2,0,Externals,brainwater,2013-03-11 19:10:38,31,0,1,0,"Created a sample file that includes the env of 'python2', which had caused the python file at https://github.com/mstill/thunner/blob/c3ede9b791a23266c8a19387868a1650161a6833/thunner to be incorrectly detected, causing an unmatched single quote that was in fact an apostrophe in a comment (see line 219 and below). Also see issue https://github.com/github/linguist/issues/264 as it is related (though I don't think this will fix that specific issue).
",453,True,en,0
433,1,4,0,Externals,johanatan,2013-03-10 05:49:41,0,0,0,0,"http://extempore.moso.com.au/
",30,True,en,0
430,3,2,0,Externals,dwarfland,2013-03-08 11:49:26,188,0,3,0,,0,False,en,0
429,3,1,0,Externals,dwarfland,2013-03-08 11:22:58,188,0,3,0,,0,False,en,0
428,2,0,0,Externals,dwarfland,2013-03-08 11:15:21,188,0,3,0,,0,False,en,0
427,2,2,0,Externals,PaulBone,2013-03-08 04:48:12,0,0,0,0,"lib/linguist/languages.yml:
    Add the declaration for the language.

samples/Mercury:
    Add samples for the classifier as Mercury shares it's filename extension
    with several other languages.
",199,False,en,0
426,1,1,0,Externals,stevepiercy,2013-03-08 02:36:12,6,0,1,0,"Somehow these got omitted from languages.yml
",45,True,en,0
420,2,1,0,Externals,jkovacic,2013-03-04 21:32:20,0,0,0,0,"I have included support for Maxima (file extension .mac) and provided a short sample (copied from my Apache 2.0 licenced project, so no (c) issues are present). More info in files' and commit comments.

BTW, if you wonder what Maxima is. It's an open source computer algebra system, similar to Mathematica or Maple. http://maxima.sourceforge.net/

Best regards, Jernej Kovacic
",377,True,en,0
418,1,2,0,Externals,sr,2013-03-02 16:58:44,1,0,1,0,"/cc @defunkt @tnm @Caged 
",26,True,en,0
417,4,14,0,Externals,upsuper,2013-03-02 07:48:00,0,0,0,0,,0,False,en,1
415,1,0,0,Externals,nikuuchi,2013-02-28 08:57:46,0,0,0,0,"Add support for Konoha https://github.com/konoha-project/konoha3
",65,True,mg,0
412,2,1,0,Internals,brianmario,2013-02-27 01:36:32,6,3,2,0,"This space left intentionally blank.
",37,True,en,0
411,3,3,0,Externals,josharian,2013-02-27 00:09:31,4815,210,4,0,"Based off of #345.

I'm not sure where (if anywhere) to add extra tests for Objective-C++. Also, I had a hard time finding suitable sample code of any length; hopefully the samples I added are sufficient and suitable. (All of our samples are non-public.)
",255,True,en,0
409,3,1,0,Externals,josharian,2013-02-26 19:27:26,1904,211,3,0,"Little tweaks, but...

Before:

```
$ bundle exec rake test
Forth "".fth"" is already defined in samples/. Remove from languages.yml.

*** Mocha deprecation warning: Change `require 'mocha'` to `require 'mocha/setup'`.

Run options: 

# Running tests:

.....................................................................................

Finished tests in 6.823390s, 12.4572 tests/s, 368.5851 assertions/s.

85 tests, 2515 assertions, 0 failures, 0 errors, 0 skips
```

After:

```
$ bundle exec rake test
Run options: 

# Running tests:

.....................................................................................

Finished tests in 6.983742s, 12.1711 tests/s, 360.1221 assertions/s.

85 tests, 2515 assertions, 0 failures, 0 errors, 0 skips
```
",757,True,en,1
406,1,3,0,Externals,awwx,2013-02-25 14:34:07,1,0,1,0,"Ref http://coffeescript.org/#literate

CoffeeScript as of version 1.5.0 uses the "".litcoffee"" extension
for Literate CoffeeScript: CoffeeScript programs written in Markdown.
",175,True,en,0
398,4,2,0,Externals,pbing,2013-02-23 10:45:33,0,0,0,0,"Update from PR #289.
",21,True,en,0
393,1,3,0,Externals,charonn0,2013-02-22 07:58:11,0,0,0,0,"Retry adding REALbasic
",23,True,en,0
382,1,1,0,Externals,REAS,2013-02-13 00:47:20,5,2,1,0,"Added new language, Processing, with .pde extension. Removed the alternate extension .pde from Java.
",101,True,en,0
375,2,1,0,Externals,mgalloy,2013-02-07 17:48:53,0,0,0,0,"I've added IDL to the list of languages as well as some sample IDL files.
",74,True,en,0
374,1,1,0,Externals,soimort,2013-02-04 17:56:30,0,0,0,0,"I know that some efforts have been made to add [AWK](http://en.wikipedia.org/wiki/AWK) support ([#164](https://github.com/github/linguist/pull/164) and [#275](https://github.com/github/linguist/pull/275)), but here comes another try.

AWK is a handy text processing language which [a lot of people still work with](https://github.com/search?q=extension%3Aawk). Since pygments has a lexer for it, it seems quite reasonable to have it supported by GitHub.

have chosen [#6666cc](http://www.colorhexa.com/6666cc) as its color. and followed pygments' naming convention `Awk` (instead of all-capitial `AWK`)
",603,True,en,1
371,1,1,0,Externals,harrypower,2013-02-01 00:12:12,0,0,0,0,"Gforth files have .fs extentions normaly!
",42,True,en,0
370,1,1,0,Externals,BPScott,2013-01-31 22:35:52,0,0,0,0,"See http://editorconfig.org
",28,True,en,0
366,1,7,0,Externals,agentzh,2013-01-25 01:51:18,3,0,1,0,"I've updated the vendor.yml file to exclude folders like t/, test/, and tests/.

I've been crazy to see most of my pure C and pure Lua projects get tagged as Perl stuffs just because I use Perl for their test suites.

Hopefully this patch can get merged and applied to GitHub soon.

Thank you in advance!
",305,True,en,0
362,3,5,0,Externals,aaronpuchert,2013-01-19 17:13:14,0,0,0,0,"Since [pygments](https://bitbucket.org/birkenfeld/pygments-main) has been providing syntax highlighting for PostScript for [over two years](https://bitbucket.org/birkenfeld/pygments-main/commits/d4d11936bc90), it seems long overdue for GitHub. A [previous attempt](https://github.com/github/linguist/pull/61) failed, I've tried to avoid its mistakes. A few remarks:
- I insist on PostScript being a programming language: see [Wikipedia](http://en.wikipedia.org/wiki/PostScript). The sample I provided is also meant to prove this.
- ""Encapsulated PS"" is not a language on its own, there are just semantic differences between PS and EPS. I also left out the very rare extensions `.epsf` and `.epsi`.
- PostScript is often generated (by `dvips`, for example). Nevertheless, I didn't change `lib/linguist/generated.rb`, since I am not aware of any common practice to commit such files.
",882,False,en,1
356,1,2,0,Externals,uo-hrsys,2013-01-15 19:43:43,0,0,0,0,"Add dita file extention to the XML markup.
DITA is the OASIS Darwin Information Typing Architecture used for technical documentation.
@see https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dita
",204,False,en,0
355,1,2,0,Externals,VISTALL,2013-01-14 14:45:38,27,0,2,0,,0,False,en,0
350,1,1,0,Externals,angerangel,2013-01-10 15:41:23,1,0,1,0,"Standard rebol file ends with .r
",33,True,en,0
348,2,2,0,Externals,erwanlr,2013-01-09 15:17:25,0,0,0,0,"Actually, only the sample folder in the root directory is vendored, howver sometimes there are some in other locations (like conf/samples/, spec/samples etc)
",158,True,en,1
345,3,6,0,Externals,cooljeanius,2013-01-07 21:28:53,1877,2,6,0,"Just some languages that I saw didn't have entries yet, so I added them. I was told to put this here by: http://www.reddit.com/r/programming/comments/16376h/i_wrote_a_functional_irc_bot_in_brainfuck/c7sec94
",207,True,en,1
341,3,1,0,Externals,adhithyan15,2013-01-05 10:47:31,0,0,0,0,"Hello

I just added a line to the tokenizer to include Matlab multi line comments and updated the documentation inside the file with indicators for matlab single line and multi line comments. I have never written pull requests before. So please let me know if I am doing something wrong. 
",289,True,en,0
340,4,3,0,Externals,kdt3rd,2013-01-03 01:10:12,123,0,4,0,"This commit adds some rudimentary support for files with no extension that are source code.

The scenario commonly arises with C++ headers - a common pattern is to not use a .h extension - Qt has no-extension versions of it's files, and libstdc++ is the canonical example. Some other libraries (like the one I'm working on) also use this pattern.

The solution I'm proposing looks for an editor mode tag comment line in the file, and extracts the mode, which can then be specified as an item in a list for a particular language. Currently implemented are tag searches for vi/vim and for one case of emacs. Others are easily added, I just have no experience with those tags, and the modelines can of course be specified in any language.

I chose to only trigger this search if the normal extension lookup failed, but it could be performed in other scenarios, or all the time, if deemed useful.
",893,True,en,1
338,2,4,0,Externals,joewiz,2013-01-02 18:09:06,2,0,1,0,"Two common XQuery file extensions were missing from Linguist's definitions: .xql and .xqm.  Adding these will help Linguist recognize XQuery projects in Github as such.  Thanks for considering this.
",199,True,en,0
337,2,0,0,Externals,rofl0r,2013-01-02 13:34:18,0,0,0,0,"this is not intended to be merged (it consists of 2 separate fixes in 2 different pull requests).
it is merely for me to see if the automated build now detects the C header as C.
",179,False,en,0
336,1,2,0,Externals,rofl0r,2013-01-02 13:11:07,0,0,0,0,,0,False,en,0
334,1,1,0,Externals,rofl0r,2013-01-02 13:02:00,0,0,0,0,"this is about the most common suffix after .cpp in use
",55,True,en,0
333,1,4,0,Externals,rofl0r,2013-01-02 12:59:39,0,0,0,0,,0,False,en,0
329,1,1,0,Externals,jeckman,2012-12-31 02:17:27,5,0,1,0,"Adding bootstrap.js
",20,True,de,0
326,2,3,0,Externals,egisatoshi,2012-12-29 04:14:24,0,0,0,0,"Egison is a new original programming language.
https://github.com/egisatoshi/egison2
",85,False,en,0
323,1,2,0,Externals,chameco,2012-12-27 15:12:46,0,0,0,0,"Added recognition for Shade.
",29,True,en,0
320,1,2,0,Internals,brianmario,2012-12-20 00:00:54,5,2,1,0,"Currently `BlobHelper#content_type` only returns a detected mime-type if the contents were determined to be binary while returning `text/plain` for everything else. I think this was so that we could serve raw blobs in the browser without it trying to download it?

What do you think?
",284,True,en,0
319,2,5,0,Internals,parkr,2012-12-19 06:28:26,0,0,0,0,"I'd love to use Linguist for a project which does not interact with the filesystem.

I'd love to allow for:

``` ruby
code = ""class Person; def name; 'Josh'; end; end""

Linguist::FileBlob.new(code).language.name #=> ""Ruby""
```
",227,True,en,0
316,1,1,0,Externals,vapourismo,2012-12-14 20:53:05,0,0,0,0,"Documentation source code should not be considered
",51,True,en,0
313,3,4,0,Externals,greghendershott,2012-12-10 19:56:55,0,0,0,0,"Use the dedicated Racket lexer from https://github.com/tmm1/pygments.rb/pull/52,
which in turn pulls from https://bitbucket.org/birkenfeld/pygments-main/pull-request/94/add-lexer-for-racket-language/diff
",205,False,en,0
310,1,0,0,Externals,aeosynth,2012-12-07 07:54:02,0,0,0,0,"not sure if this is even wanted, but the inconsistencies annoyed me
",68,True,en,0
306,1,1,0,Externals,uklance,2012-12-03 10:40:20,0,0,0,0,"TML = Tapestry Markup Language
http://tapestry.apache.org/component-templates.html
",83,False,en,0
303,2,2,0,Externals,bukz1,2012-12-01 16:37:54,14,0,1,0,"Mathematica added
",18,True,es,0
300,1,2,0,Externals,blitzprog,2012-11-26 11:12:37,0,0,0,0,"Haven't tested it but according to the linguist README that should be enough.
See https://github.com/blitzprog/flua for more information.
",138,False,en,0
299,2,1,0,Externals,andyli,2012-11-26 10:38:46,0,0,0,0,"haXe is now Haxe according to https://groups.google.com/forum/#!topic/haxelang/O7PB-ZrX4i4/discussion

The lexer in Pygments is not renamed yet, so just stay as is at the moment.
",179,True,en,1
289,3,1,0,Externals,pbing,2012-11-16 18:40:09,0,0,0,0,"Just the file extention in order to list SystemVerilog repos under Languages.
",78,True,en,0
287,1,2,0,Externals,AndrewRadev,2012-11-12 18:36:26,0,0,0,0,"I have a peculiar use case for language detection. A few of my Vim plugins are tested using RSpec, which is why I have a lot of ruby code in a `spec` directory. As a result, a lot of ruby code is detected in those projects. For instance, my [switch.vim](https://github.com/AndrewRadev/switch.vim) plugin has, at this time, more ruby code than VimL, which is somewhat misleading. It's completely possible to embed ruby code in VimL, so this kind of a picture could make it seem like the plugin is implemented mostly in ruby, while in reality, it's pure VimL, with ruby specs.

Now, this is _very_ much an edge case, it really wouldn't make much sense to put `spec` in `vendor.yml`. Which is why I implemented per-repo vendoring using a `linguist_vendor.yml` file in the repo itself. I can put a file like that and it will tell linguist to ignore the `spec` dir in this specific project.

I'm not really sure how good of an idea this is -- maybe someone could abuse the system this way? I don't feel there's much of a risk though and it might improve the classification of code on github. Of course, feel free to reject this if you think otherwise.

The implementation extracts some logic in a new class. I could have made it without the addition of a class, but to me, once per-repo vendoring is added, it gets complex enough to devote a separate object that takes care of the logic. If you have a different idea for how the code could look, let me know and I'll see what I can do.

Another thing I'd like to do is have the file be hidden -- `.linguist_vendor.yml` -- but the current code seems to ignore hidden files. It shouldn't be difficult to change this, but it will change the behaviour a bit, so I wanted to ask first.
",1726,True,en,2
286,1,1,0,Externals,disolovyov,2012-11-01 07:03:57,0,0,0,0,"http://elm-lang.org/

The lexer is set to Haskell, since at the moment Elm is syntactically a subset of Haskell. The official website uses CodeMirror with the mode set to Haskell, as well.
",189,True,en,0
285,1,1,0,Externals,JDutil,2012-10-29 07:21:23,4,0,1,0,"Deface has a nice template dsl (https://github.com/spree/deface#using-the-deface-dsl-deface-files) when using the .deface extension.  Now it will look great with syntax highlighting on Github.
",194,True,en,0
283,2,2,0,Internals,kivikakk,2012-10-27 00:49:35,0,0,0,0,"See https://github.com/unnali/rouge; http://rouge.io.

Also corrects some minor doc issues!
",92,True,en,0
282,2,1,0,Externals,thestinger,2012-10-26 21:40:28,0,0,0,0,,0,False,en,0
280,1,3,0,Externals,heaths,2012-10-25 00:15:03,13,0,4,0,"Add .psd1, .psm1, .cdxml, and .ps1xml extensions to existing languages.
",72,True,en,0
279,1,1,0,Externals,JeffJacobson,2012-10-24 22:34:03,0,0,0,0,"Added ArcGIS Python Toolbox syntax highlighting info.
",54,True,en,0
277,1,1,0,Externals,amerine,2012-10-20 20:00:04,331,3,3,0,"SQF is a neat little language embedded in the Armed Assault II game by Bohemia
Interactive. You can read more here: http://community.bistudio.com/wiki/sqf
",155,False,en,0
276,3,2,0,Externals,deanmark,2012-10-19 18:04:55,6,2,1,0,"< This pull request isn't ready!! >

Added .m as the primary extension for Matlab and removed the bogus 
.matlab extension that doesn't qualify as a Matlab file extension. 
Extensions taken from: 
http://en.wikipedia.org/wiki/MATLAB#File_extensions
",252,True,en,0
275,1,1,0,Externals,xfix,2012-10-19 15:14:35,66,0,6,0,"I've added AWK language support because lack of AWK highlighting in my AWK library annoys me.
",94,True,en,1
274,1,0,0,Externals,megaDRONe86,2012-10-18 08:43:06,0,0,0,0,"This is needed by my project and for any one who wants to store dependencies not in the root folder.
",101,True,en,0
273,1,1,0,Externals,benjamingwynn,2012-10-17 10:43:20,0,0,0,0,,0,False,en,0
271,19,7,2,Externals,PulsarBlow,2012-10-08 15:27:28,0,0,0,0,"TypeScript language from Microsoft : http://www.typescriptlang.org/
",68,True,en,2
270,1,0,0,Externals,heaths,2012-10-06 17:13:33,13,0,4,0,"Adds syntax highlighting for .psd1, .psm1, .cdxml, and .ps1xml files.
",70,True,en,0
268,1,3,0,Externals,tobin,2012-10-02 14:02:22,0,0,0,0,"Captial C and capital H are two file extensions recognized by gcc as indicating C++ source code. 
",98,True,en,0
267,1,1,0,Externals,earldouglas,2012-09-29 20:14:47,0,0,0,0,"This is just a simple addition to the languages.yaml file for the
Frege programming language (http://code.google.com/p/frege/)
",127,False,en,0
266,1,1,0,Externals,refractalize,2012-09-28 17:32:31,43,3,3,0,"Just file extension (`*.pogo`) detection plus a sample file.

Thanks!
",70,True,en,0
265,2,1,0,Externals,qqshfox,2012-09-28 08:51:27,6,12,4,0,,0,False,en,2
263,1,10,0,Externals,lucasmazza,2012-09-26 20:53:16,0,0,0,0,"Here at @plataformatec we use [VCR](https://github.com/myronmarston/vcr) a lot on our internal projects and most pull requests get polluted by changes on cassettes mixed with actual changes on the code. GitHub could hide these changes just like a Gemfile.lock file to reduce the noise on huge diffs.

I'm not sure if the detection logic should be different or include some other pattern present on these files, maybe @myronmarston can help me on that.
",452,True,en,1
260,2,6,0,Externals,kevinjalbert,2012-09-21 17:32:02,0,0,0,0,"Added the TXL language to _github-linguist_, along with a sample file. I had to update the _sample.json_ file so the test suite will pass.
",139,True,en,1
256,5,2,0,Externals,qqshfox,2012-09-20 06:52:36,77,3,3,0,,0,False,en,0
252,1,9,0,Externals,dagit,2012-09-12 05:52:15,133,0,3,0,"This adds basic support for Agda (and Literate Agda). I haven't figure out how to add support to pygments.rb, but hopefully that is orthogonal (and next).
",155,True,en,0
249,1,2,0,Externals,ghost,2012-09-05 18:01:14,0,0,0,0,"Qt's project files (generated with qmake) shouldn't be included.
",65,True,en,0
248,3,5,0,Externals,wicker,2012-09-01 21:12:54,0,0,0,0,"Adds SystemVerilog to the list of the languages. I added a variety of .sv files in the samples. 
",97,True,en,0
244,4,5,0,Externals,Pilooz,2012-08-28 08:49:11,3839,0,3,0,"Plsql is a procedural language including SQL in Oracle RDBMS. It is not very populary on Github as it is a proprietary language and thare not many open source projects using plsql.

Please, could you add this language in the github language highlighting system ?

Thanks.
",272,True,en,0
243,3,2,0,Externals,Pilooz,2012-08-28 08:44:56,3839,0,3,0,"Plsql is a procedural language including SQL in Oracle RDBMS. It is not very populary on Github as it is a proprietary language and thare not many open source projects using plsql.

Please, could you add this language in the github language highlighting system ?

Thanks.
",272,True,en,0
242,2,3,0,Externals,azer,2012-08-28 01:53:20,6,0,2,0,"Files under test/ directory should be ignored since some projects code their tests in a different language. e.g MapJS is written in JavaScript, but its tests are CoffeeScript. 
",177,True,en,1
235,16,24,2,Externals,stevepiercy,2012-08-19 13:31:21,0,0,0,0,"Adding Lasso programming language, per GitHub Issue #234
",57,True,it,0
227,1,1,0,Externals,cptBuggy,2012-08-15 15:03:38,0,0,0,0,"Add .psd1 (module manifest) into the PowerShell syntax group
",61,True,en,0
226,1,1,0,Externals,cptBuggy,2012-08-15 14:52:29,0,0,0,0,"Add .psd1 (module manifest) into the PowerShell syntax group
",61,True,en,0
220,1,2,0,Externals,dv343,2012-08-14 11:01:45,0,0,0,0,"As per @josh 's request in #217, this is a sample binary file (elf64) that is currently being classified as Perl, hopefully this will help the filter.
",151,True,en,0
219,3,7,0,Externals,calavera,2012-08-14 02:00:06,53,11,3,0,"/cc @josh
",10,True,lt,0
216,3,9,0,Externals,elofgren,2012-08-12 05:55:53,0,0,0,0,"I've added a languages.yml entry and examples for SAS. While likely not as popular as R on github, it's never the less a pretty significant language for statistical programming. Color choice is 'Carolina Blue' based on the SAS Institute's proximity to the Triangle and UNC.
",274,True,en,0
214,3,4,0,Externals,schernichkin,2012-08-08 23:10:34,0,0,0,0,"I have added Agda to languages.yml
",35,True,en,0
213,1,0,0,Internals,parkr,2012-08-07 17:47:41,0,0,0,0,"Error:

```
$ linguist _layouts/inner.html 
_layouts/inner.html: 49 lines (46 sloc)
  type:      Text
/Library/Ruby/Gems/1.8/gems/github-linguist-2.2.1/bin/linguist:26: undefined method `pathname' for #<Linguist::FileBlob:0x10124c190> (NoMethodError)
    from /usr/bin/linguist:23:in `load'
    from /usr/bin/linguist:23
```

Mac OS X 10.6.8. Tested on `ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin10.8.0]` (rvm) and `ruby 1.8.7 (2010-01-10 patchlevel 249) [universal-darwin10.0]` (system).
",504,True,en,0
212,2,3,0,Externals,pointwise,2012-08-07 16:10:24,0,0,0,0,"This adds detection for the Glyph scripting language supported by Gridgen and Pointwise software (http://www.pointwise.com/). This software is used to generate meshes for computational fluid dynamics. 

Often a time consuming process, Gridgen and Pointwise users have the ability to reduce their grid generation time by using Glyph scripting. A Glyph script can be used to run the software in batch mode, encapsulate repetitive tasks, extend the software's functionality, even develop specialized meshing applications.

Because Glyph is based on Tcl with Pointwise specific commands added to it, the syntax highlighting is the same and the change to the source is minimal. I've simply added the ability to detect the .glf file extension.
",738,True,en,0
210,1,5,0,Externals,XVilka,2012-08-03 22:43:17,1,0,1,0,"Handle *.inc files as general assembly too.
",44,True,en,0
209,1,5,0,Externals,kassi,2012-08-01 23:36:46,3,0,1,0,"I have a repo with a .applescript file which is not recognized.
I found out that only .scpt is listed in the yml.
However, scpt is more likely used for binary and applescript for source.

A sample file with applescript extension already exists.
",245,False,en,0
205,1,2,0,Externals,ericraio,2012-07-21 19:17:03,0,0,0,0,,0,False,en,0
199,1,1,0,Externals,rnagrodzki,2012-07-17 07:09:07,3,0,1,0,"Action Script files pattern
",28,True,fr,0
198,1,3,0,Externals,charonn0,2012-07-15 02:08:35,0,0,0,0,"... VB.net as the lexer
",24,True,en,0
195,1,2,0,Externals,chiraag,2012-07-12 20:49:17,54,2,3,0,"Added the language specification to the YAML file. Extension is .bsv and does not conflict with any other definitions for now. No conflicts foreseeable in future either. No pygments lexer is available for BSV and hence I am defaulting to Verilog for now.
",255,True,en,0
193,1,1,0,Externals,rengolin,2012-07-12 07:49:55,0,0,0,0,"Adds ECL programming language to language list.
",48,True,en,0
189,21,3,0,Externals,jeanlouisboudart,2012-07-07 17:37:19,0,0,0,0,""".ant"" and "".ivy"" files are both XML
",37,True,en,4
186,1,1,0,Externals,sdressler,2012-07-05 12:43:23,3,0,1,0,"Exception for GNU autotools generated configure scripts, these are generated from configure.ac and **not** written by hand.
",124,True,en,0
185,2,2,0,Externals,chochos,2012-07-04 03:27:05,21,0,2,0,"Add Ceylon to the master language list, along with a sample file.
",66,True,en,0
184,1,2,0,Externals,chiraag,2012-07-01 12:41:37,54,2,3,0,"Added the language specification to the YAML file. Extension is .bsv and does not conflict with any other definitions for now. No conflicts foreseeable in future either. No pygments lexer is available for BSV and hence I am defaulting to Verilog for now.
",255,True,en,0
183,1,12,0,Externals,paulmillr,2012-06-26 15:49:51,0,0,0,0,"LS is a almost popular (100+ watchers) coffeescript fork http://gkz.github.com/LiveScript/
",91,True,en,0
181,1,6,0,Externals,jenrzzz,2012-06-20 09:14:37,0,0,0,0,"Can we add [Bootstrap](http://twitter.github.com/bootstrap) to the vendor library list?
",88,True,en,1
179,1,10,0,Externals,michaelficarra,2012-06-19 16:24:15,0,0,0,0,"I had to add this in order to run the tests.
",45,True,en,0
178,2,4,0,Externals,VISTALL,2012-06-15 18:01:25,0,0,0,0,,0,False,en,0
177,1,0,0,Externals,rlsosborne,2012-06-15 07:51:23,17,0,2,0,"This adds detection for the XC programming language (see http://en.wikipedia.org/wiki/XC_Programming_Language), a C like language for developing embedded applications on XMOS devices.

There are various examples of projects using XC to be found at https://github.com/xcore and it would be great if XC was detected as a language.

I have successfully tested this using bundle exec rake test.
",391,True,en,0
176,1,2,0,Externals,petercrlane,2012-06-10 01:46:01,0,0,0,0,"Please add detection for the Cobra language (http://cobra-language.com/), which can use the Python lexer.
",106,True,en,0
175,1,3,0,Externals,thSoft,2012-06-09 23:56:27,0,0,0,0,"Lexer coming soon...
",21,True,ca,0
174,1,1,0,Externals,carandraug,2012-06-08 13:35:57,0,0,0,0,"Hi

Octave is a language for numerical computation, very similar to Matlab (we actually treat incompatibilities with Matlab as octave bugs) but with extra syntax. pigments is able to highlight octave source correctly too.

http://www.gnu.org/software/octave/
",259,True,en,0
173,1,1,0,Externals,themiwi,2012-06-08 09:42:49,2,0,1,0,,0,False,en,0
168,1,1,0,Externals,devn,2012-05-31 00:04:16,2,0,1,0,"I don't know if this is a universal java thing, but having my Clojure projects mis-labeled has happened a bunch over the last few years. resources/ is a common place to drop images, CSS, JS, etc. Not dropping another vendor/ directory under resources/js to please the Gods has bitten me on more than one occasion. I'm not sure this is the perfect solution, but it does seem to be quite common to nest assets under resources/*. Leiningen (a common build tool for Clojure) seems opinionated about this and defaults to adding it to the classpath IIRC. Thanks in advance!
",568,True,en,0
167,1,3,0,Externals,devn,2012-05-30 23:53:53,1,0,1,0,"Half of my Clojure projects get tagged as JavaScript so I figured it was high time I get my hands dirty.
",105,True,en,0
166,1,3,0,Externals,sosedoff,2012-05-24 00:46:04,0,0,0,0,"Added support for bundler gem tasks to simplify builds and installation. 
Should be useful. 
",93,False,en,0
165,2,3,0,Externals,brooksbp,2012-05-21 14:22:48,0,0,0,0,"- Add .emacs filename for Emacs Lisp language
- Fix spelling for minor typo.
",77,False,en,1
159,1,1,0,Externals,nolta,2012-04-18 02:44:19,6,0,2,0,"Ideally we'd just add:

```
linguist:
  exclude:
    - ^external/
```

to our `$repo/.github` file, but this is the next best thing.
",133,True,en,1
158,1,1,0,Externals,mleinart,2012-04-14 06:45:27,5,0,1,0,"This merely adds ExtJS to the list of vendored Javascript libraries. It matches against all versions of ExtJS's common js files. It doesn't match some of the fully split-out modules, but those aren't common to find in a project and messy to match.
",248,True,en,0
154,1,1,0,Externals,skoon,2012-04-03 19:07:48,54,0,1,0,"Adding localization of the ""\Samples"" folder for Bulgarian, Catalan, Czech, Danish, Dutch, Estonian, Finnish, Greek, Creole, Hmong Daw, Hungarian, Indonesian, Italian, Latvian, Lithuanian, Norwegian, Polish, Portuguese, Romanian, Russian, Slovak, Slovenian, Swedish, Turkish, and Vietnamese
",291,True,en,0
153,1,2,0,Externals,svenefftinge,2012-04-03 07:59:19,94,0,3,0,"... and Xtext grammars (http://xtext.org)
",42,True,en,0
148,1,47,7,Externals,lparenteau,2012-03-27 16:02:48,20,0,4,0,"This add detection for the M (aka MUMPS) programming language (see https://en.wikipedia.org/wiki/MUMPS).

I have successfully tested this using `bundle exec rake test`.

I have also called `bundle exec linguist` on the following projects, which I know have M files in them :

```
lparenteau/httpm
luisibanez/fis-gtm
luisibanez/VistA-FOIA
```
",342,True,en,1
145,4,2,0,Externals,Caerbannog,2012-03-25 01:47:33,40,10,4,0,"Use the VHDL lexer, new in Pygments 1.5.
",41,True,en,2
139,1,2,0,Externals,jesusaurus,2012-03-18 23:18:07,0,0,0,0,"Add a definition for configuration files.
",42,True,en,0
133,1,0,1,Externals,ghost,2012-03-03 22:24:09,0,0,0,0,,0,False,en,1
123,1,1,0,Externals,valscion,2012-02-16 20:35:00,5,0,1,0,"It is a Finnish programming language. Some projects here in GitHub already use it, couple of my projects included.

See http://www.coolbasic.com for more information
",166,True,en,0
120,1,1,0,Internals,josh,2012-02-15 16:29:57,8,1,3,0,"@tmm1 could we do this without taking a perf hit?

The issue is that some binary files and languages share a common extension, see:

https://github.com/github/linguist/commit/c1fc063974c3b3a01acc30dcb48aca2a75811e2d#lib/linguist/languages.yml-P9
",246,True,en,1
95,2,2,0,Externals,trishume,2011-12-08 13:20:59,502,1,4,0,"Added tests for turing/perl discrimination.

Also fixed Parrot unit tests being recognized as Perl. The Rosella library is no longer detected as Turing.
",153,True,en,3
78,1,1,0,Externals,jwilkins,2011-09-26 01:58:48,1,0,1,0,"added i18n dependency
",22,True,en,0
74,1,1,0,Externals,timjb,2011-09-05 13:11:48,0,0,0,0,"Added a new programming language, Opa (http://opalang.org/).
",61,True,en,0
72,1,1,0,Externals,Uberi,2011-09-02 23:41:27,0,0,0,0,"tinku99 [mentioned](https://github.com/github/linguist/pull/71#issuecomment-1984377) that his lexer has been included in Pygments since v1.4. These changes allow the AutoHotkey lexer to be used to provide syntax highlighting for AutoHotkey scripts.
",249,True,en,0
70,4,3,0,Externals,Uberi,2011-09-01 22:10:51,0,0,0,0,"These changes add [AutoHotkey](http://www.autohotkey.com/) support.

Syntax highlighting is in progress. Lexer has been completed but awaits approval from Pygments team. For now ""lexer: Text only"" is in effect.
",211,True,en,1
64,1,2,0,Externals,ognevsky,2011-08-14 14:08:51,1,0,1,0,,0,False,en,0
61,1,0,2,Externals,adamnew123456,2011-08-07 18:18:10,0,0,0,0,"My attempt at defining detection for PostScript (.ps) and Encapsulated PostScript (.eps, .epsf, .epsi).
",104,True,en,0
51,1,5,0,Externals,bmabey,2011-07-21 01:36:32,0,0,0,0,"This will hopefully enable github to syntax highlight the new ClojureScript project (e.g https://github.com/clojure/clojurescript/blob/master/src/cljs/cljs/core.cljs) which has the same syntax as Clojure.
",205,True,en,0
49,4,4,0,Externals,ghost,2011-07-18 21:07:50,0,0,0,0,,0,False,en,1
44,1,1,0,Externals,earl,2011-07-08 20:47:14,4,4,4,0,"The official spelling of REBOL is in all-caps.

(Sorry for the pull request noise, but I completely missed that previously.)
",125,True,en,2
43,1,4,0,Externals,devinus,2011-07-08 20:01:30,2,0,1,0,,0,False,en,0
41,3,0,5,Externals,kevinjalbert,2011-07-06 16:56:43,0,0,0,0,"_Improvement of Pull Request #39_

TeX is already present though I've added the lexer/type/aliases to the entry in the languages.yml. I also made sure that generated TeX files are ignored (by adding some ignore file extensions for the generated files). In addition, I have added some test cases for the ignored generated files as well as commenting them.

Example Repos:
_https://github.com/kevinjalbert/cv_kevinjalbert_
_https://github.com/weynsee/resume_
",457,True,en,2
39,1,1,3,Externals,kevinjalbert,2011-07-06 11:48:42,0,0,0,0,"TeX was already a language that has syntax highlighting, but I noticed it I was never able to see the percentage of TeX in a repository. So I added TeX as a programming language and made sure that user-made TeX files are counted (by adding some ignore file extensions for the generated files).

Add:
- type, lexer, aliases to TeX in the list of languages
- TeX language test for the latex alias
- Set of generated TeX files to be ignored
",438,True,en,1
32,4,8,0,Externals,Zlender,2011-07-04 08:11:33,21,1,3,0,"Drupal http://drupal.org/ uses its own extensions for PHP code. Doesn't really qualify as a language but would be nice to have its files highlighted on github.
",160,True,en,1
30,2,1,0,Externals,bilderbuchi,2011-07-03 10:49:35,0,0,0,0,"Two simple Matlab test cases, and yml amendments for correct Matlab recognition, see issue #15.
From what I can see, Objective-C fixtures are there already (`Foo.m`, `FooAppDelegate.m`, `hello.m`).
",198,False,en,0
26,2,3,0,Externals,christophermanning,2011-07-02 23:11:00,0,0,0,0,"This entry

```
Groff:
  extensions:
  - .man
  - .1
  - .2
  - .3
  - .4
  - .5
  - .6
  - .7
```

is causing the error (Extension is missing a '.': 0.1) at https://github.com/christophermanning/linguist/blob/master/lib/linguist/language.rb#L47 since the YAML parser will cast .1, .2, etc. to a float.

I ran a regular expression to quote aliases and extensions by replacing `-\s(.*)\n` with `- ""$1""\n` to force the value to be read as a string.
",447,True,en,0
25,3,1,0,Externals,christophermanning,2011-07-02 22:56:29,0,0,0,0,"I was getting this error when trying to run the tests using `bundle exec rake test`

```
/home/c/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 20 column 5 (Psych::SyntaxError)
```

The wildcards in the lexers.yml for filenames are causing the failure since the line isn't quoted. Quoting the aliases solves the issue.

Also, due to entries without a mimetype or a filename like

```
- !ruby/struct:Linguist::Lexer
  name: Protocol Buffer
  aliases: !ruby/array
  - protobuf
  filenames: !ruby/array
  - ""*.proto""
  mimetypes: !ruby/array
```

the mimetimes will be null so https://github.com/github/linguist/blob/master/lib/linguist/lexer.rb#L152  fails. (/home/c/linguist/lib/linguist/lexer.rb:152:in `block in <class:Lexer>': undefined method`each' for nil:NilClass (NoMethodError)
)

/bin/pygments-lexers now sets empty filenames/aliases/mimetypes to an empty array:

```
mimetypes: !ruby/array
  []
```
",957,True,en,1
23,1,3,0,Externals,chrispbradley,2011-07-01 02:46:18,0,0,0,0,,0,False,en,0
22,1,1,0,Externals,NARKOZ,2011-06-30 08:48:48,0,0,0,0,"`http://nex-3.com/posts/96-scss-sass-is-a-css-extension`
",57,True,en,0
19,1,3,0,Externals,FredrikL,2011-06-28 20:19:24,0,0,0,0,"Added support to identify processing (language used by Arduino) uses C lexer. File extension used is PDE, removed usage from Java. 
From what I could tell it didn't quite work with 2 different language definitions using the same extension. Also the pde extension seems to be used mostly by processing.
",302,False,en,1
18,2,2,0,Externals,drocamor,2011-06-28 18:07:36,0,0,0,0,"Hi, 

This pull request adds puppet as a language and uses the ruby lexer to handle it's code. The puppet docs are rendered using ruby syntax rules and it seems to work pretty well.

I wrote tests for the new language and the linguist tool correctly handled a few puppet repositories I have locally. Please let me know if there are any issues.

Thanks,
Dave
",358,True,en,1
17,1,1,0,Externals,jovo,2011-06-28 15:08:19,0,0,0,0,"matlab scripts use .m not .matlab.  i changed that.  my matlab code is typically incorrectly recognized as objective C
",119,True,en,0
12,1,1,0,Externals,Sen,2011-06-28 04:17:16,33,4,4,0,"make colorize function accept options, just like this

``` ruby
blob.colorize({""O"" => ""linenos=table,encoding=utf-8""})
```
",123,True,en,2
9,1,1,0,Externals,carlosgaldino,2011-06-27 23:20:12,4,4,1,0,,0,False,en,0
